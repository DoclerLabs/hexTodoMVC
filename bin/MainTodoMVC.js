// Generated by Haxe 3.4.2 (git build development @ ada466c)
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $iterator(it)();
		while(_.hasNext()) {
			var _1 = _.next();
			++n;
		}
	} else {
		var x = $iterator(it)();
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var TodoMVC = function() { };
$hxClasses["TodoMVC"] = TodoMVC;
TodoMVC.__name__ = ["TodoMVC"];
TodoMVC.main = function() {
	hex_log_LogManager.context = new hex_log_DomainLoggerContext(hex_domain_TopLevelDomain.DOMAIN);
	hex_log_DomainLoggerContext.getContext().setConfiguration(new hex_log_TraceEverythingDomainConfiguration());
	var code = new hex_context_applicationContext_$0(new hex_runtime_ApplicationAssembler());
	code.execute();
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
var common_Filter = { __ename__ : true, __constructs__ : ["ALL","ACTIVE","COMPLETED"] };
common_Filter.ALL = ["ALL",0];
common_Filter.ALL.toString = $estr;
common_Filter.ALL.__enum__ = common_Filter;
common_Filter.ACTIVE = ["ACTIVE",1];
common_Filter.ACTIVE.toString = $estr;
common_Filter.ACTIVE.__enum__ = common_Filter;
common_Filter.COMPLETED = ["COMPLETED",2];
common_Filter.COMPLETED.toString = $estr;
common_Filter.COMPLETED.__enum__ = common_Filter;
var common_IFilterConnection = function() { };
$hxClasses["common.IFilterConnection"] = common_IFilterConnection;
common_IFilterConnection.__name__ = ["common","IFilterConnection"];
common_IFilterConnection.prototype = {
	__class__: common_IFilterConnection
};
var common_ITodoConnection = function() { };
$hxClasses["common.ITodoConnection"] = common_ITodoConnection;
common_ITodoConnection.__name__ = ["common","ITodoConnection"];
common_ITodoConnection.prototype = {
	__class__: common_ITodoConnection
};
var hex_event_ITrigger = function() { };
$hxClasses["hex.event.ITrigger"] = hex_event_ITrigger;
hex_event_ITrigger.__name__ = ["hex","event","ITrigger"];
hex_event_ITrigger.prototype = {
	__class__: hex_event_ITrigger
};
var common__$_$Trigger_$Class_$For_$_$IFilterConnection = function() {
	this._inputs = [];
};
$hxClasses["common.__Trigger_Class_For__IFilterConnection"] = common__$_$Trigger_$Class_$For_$_$IFilterConnection;
common__$_$Trigger_$Class_$For_$_$IFilterConnection.__name__ = ["common","__Trigger_Class_For__IFilterConnection"];
common__$_$Trigger_$Class_$For_$_$IFilterConnection.__interfaces__ = [hex_event_ITrigger,common_IFilterConnection];
common__$_$Trigger_$Class_$For_$_$IFilterConnection.prototype = {
	connect: function(input) {
		if(this._inputs.indexOf(input) == -1) {
			this._inputs.push(input);
			return true;
		} else {
			return false;
		}
	}
	,changeFilter: function(currentFilter) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.changeFilter(currentFilter);
		}
	}
	,__class__: common__$_$Trigger_$Class_$For_$_$IFilterConnection
};
var common__$_$Trigger_$Class_$For_$_$ITodoConnection = function() {
	this._inputs = [];
};
$hxClasses["common.__Trigger_Class_For__ITodoConnection"] = common__$_$Trigger_$Class_$For_$_$ITodoConnection;
common__$_$Trigger_$Class_$For_$_$ITodoConnection.__name__ = ["common","__Trigger_Class_For__ITodoConnection"];
common__$_$Trigger_$Class_$For_$_$ITodoConnection.__interfaces__ = [hex_event_ITrigger,common_ITodoConnection];
common__$_$Trigger_$Class_$For_$_$ITodoConnection.prototype = {
	connect: function(input) {
		if(this._inputs.indexOf(input) == -1) {
			this._inputs.push(input);
			return true;
		} else {
			return false;
		}
	}
	,onShowEntries: function(entries) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onShowEntries(entries);
		}
	}
	,onRemoveItem: function(id) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onRemoveItem(id);
		}
	}
	,onUpdateItemCount: function(activeItems) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onUpdateItemCount(activeItems);
		}
	}
	,onClearCompletedButton: function(completedCount,visible) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onClearCompletedButton(completedCount,visible);
		}
	}
	,onChangeFooterVisibility: function(isVisible) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onChangeFooterVisibility(isVisible);
		}
	}
	,onToggleAll: function(isChecked) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onToggleAll(isChecked);
		}
	}
	,onClearNewTodo: function() {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onClearNewTodo();
		}
	}
	,onSetItemCompleted: function(id,isCompleted) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onSetItemCompleted(id,isCompleted);
		}
	}
	,onEditItem: function(id,title) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onEditItem(id,title);
		}
	}
	,onEditItemDone: function(id,title) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onEditItemDone(id,title);
		}
	}
	,__class__: common__$_$Trigger_$Class_$For_$_$ITodoConnection
};
var todomvc_service_ITodoService = function() { };
$hxClasses["todomvc.service.ITodoService"] = todomvc_service_ITodoService;
todomvc_service_ITodoService.__name__ = ["todomvc","service","ITodoService"];
todomvc_service_ITodoService.prototype = {
	__class__: todomvc_service_ITodoService
};
var configuration_TodoLocalStorage = function() {
};
$hxClasses["configuration.TodoLocalStorage"] = configuration_TodoLocalStorage;
configuration_TodoLocalStorage.__name__ = ["configuration","TodoLocalStorage"];
configuration_TodoLocalStorage.__interfaces__ = [todomvc_service_ITodoService];
configuration_TodoLocalStorage.prototype = {
	load: function() {
		this.logger.debug("{}()",["load"],{ fileName : "TodoLocalStorage.hx", lineNumber : 22, className : "configuration.TodoLocalStorage", methodName : "load"});
		return JSON.parse(js_Browser.getLocalStorage().getItem(configuration_TodoLocalStorage.STORAGE_ID));
	}
	,save: function(todos) {
		this.logger.debug("{}(todos='{}')",["save",todos],{ fileName : "TodoLocalStorage.hx", lineNumber : 27, className : "configuration.TodoLocalStorage", methodName : "save"});
		js_Browser.getLocalStorage().setItem(configuration_TodoLocalStorage.STORAGE_ID,JSON.stringify(todos));
	}
	,__class__: configuration_TodoLocalStorage
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe__$Template_TemplateExpr = { __ename__ : true, __constructs__ : ["OpVar","OpExpr","OpIf","OpStr","OpBlock","OpForeach","OpMacro"] };
haxe__$Template_TemplateExpr.OpVar = function(v) { var $x = ["OpVar",0,v]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpExpr = function(expr) { var $x = ["OpExpr",1,expr]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpIf = function(expr,eif,eelse) { var $x = ["OpIf",2,expr,eif,eelse]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpStr = function(str) { var $x = ["OpStr",3,str]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpBlock = function(l) { var $x = ["OpBlock",4,l]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpForeach = function(expr,loop) { var $x = ["OpForeach",5,expr,loop]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpMacro = function(name,params) { var $x = ["OpMacro",6,name,params]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
var haxe_Template = function(str) {
	var tokens = this.parseTokens(str);
	this.expr = this.parseBlock(tokens);
	if(!tokens.isEmpty()) {
		throw new js__$Boot_HaxeError("Unexpected '" + Std.string(tokens.first().s) + "'");
	}
};
$hxClasses["haxe.Template"] = haxe_Template;
haxe_Template.__name__ = ["haxe","Template"];
haxe_Template.prototype = {
	execute: function(context,macros) {
		this.macros = macros == null ? { } : macros;
		this.context = context;
		this.stack = new List();
		this.buf = new StringBuf();
		this.run(this.expr);
		return this.buf.b;
	}
	,resolve: function(v) {
		if(v == "__current__") {
			return this.context;
		}
		var value = Reflect.getProperty(this.context,v);
		if(value != null || Object.prototype.hasOwnProperty.call(this.context,v)) {
			return value;
		}
		var _g_head = this.stack.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var ctx = val;
			value = Reflect.getProperty(ctx,v);
			if(value != null || Object.prototype.hasOwnProperty.call(ctx,v)) {
				return value;
			}
		}
		return Reflect.field(haxe_Template.globals,v);
	}
	,parseTokens: function(data) {
		var tokens = new List();
		while(haxe_Template.splitter.match(data)) {
			var p = haxe_Template.splitter.matchedPos();
			if(p.pos > 0) {
				tokens.add({ p : HxOverrides.substr(data,0,p.pos), s : true, l : null});
			}
			if(HxOverrides.cca(data,p.pos) == 58) {
				tokens.add({ p : HxOverrides.substr(data,p.pos + 2,p.len - 4), s : false, l : null});
				data = haxe_Template.splitter.matchedRight();
				continue;
			}
			var parp = p.pos + p.len;
			var npar = 1;
			var params = [];
			var part = "";
			while(true) {
				var c = HxOverrides.cca(data,parp);
				++parp;
				if(c == 40) {
					++npar;
				} else if(c == 41) {
					--npar;
					if(npar <= 0) {
						break;
					}
				} else if(c == null) {
					throw new js__$Boot_HaxeError("Unclosed macro parenthesis");
				}
				if(c == 44 && npar == 1) {
					params.push(part);
					part = "";
				} else {
					part += String.fromCharCode(c);
				}
			}
			params.push(part);
			tokens.add({ p : haxe_Template.splitter.matched(2), s : false, l : params});
			data = HxOverrides.substr(data,parp,data.length - parp);
		}
		if(data.length > 0) {
			tokens.add({ p : data, s : true, l : null});
		}
		return tokens;
	}
	,parseBlock: function(tokens) {
		var l = new List();
		while(true) {
			var t = tokens.first();
			if(t == null) {
				break;
			}
			if(!t.s && (t.p == "end" || t.p == "else" || HxOverrides.substr(t.p,0,7) == "elseif ")) {
				break;
			}
			l.add(this.parse(tokens));
		}
		if(l.length == 1) {
			return l.first();
		}
		return haxe__$Template_TemplateExpr.OpBlock(l);
	}
	,parse: function(tokens) {
		var t = tokens.pop();
		var p = t.p;
		if(t.s) {
			return haxe__$Template_TemplateExpr.OpStr(p);
		}
		if(t.l != null) {
			var pe = new List();
			var _g = 0;
			var _g1 = t.l;
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				pe.add(this.parseBlock(this.parseTokens(p1)));
			}
			return haxe__$Template_TemplateExpr.OpMacro(p,pe);
		}
		if(HxOverrides.substr(p,0,3) == "if ") {
			p = HxOverrides.substr(p,3,p.length - 3);
			var e = this.parseExpr(p);
			var eif = this.parseBlock(tokens);
			var t1 = tokens.first();
			var eelse;
			if(t1 == null) {
				throw new js__$Boot_HaxeError("Unclosed 'if'");
			}
			if(t1.p == "end") {
				tokens.pop();
				eelse = null;
			} else if(t1.p == "else") {
				tokens.pop();
				eelse = this.parseBlock(tokens);
				t1 = tokens.pop();
				if(t1 == null || t1.p != "end") {
					throw new js__$Boot_HaxeError("Unclosed 'else'");
				}
			} else {
				t1.p = HxOverrides.substr(t1.p,4,t1.p.length - 4);
				eelse = this.parse(tokens);
			}
			return haxe__$Template_TemplateExpr.OpIf(e,eif,eelse);
		}
		if(HxOverrides.substr(p,0,8) == "foreach ") {
			p = HxOverrides.substr(p,8,p.length - 8);
			var e1 = this.parseExpr(p);
			var efor = this.parseBlock(tokens);
			var t2 = tokens.pop();
			if(t2 == null || t2.p != "end") {
				throw new js__$Boot_HaxeError("Unclosed 'foreach'");
			}
			return haxe__$Template_TemplateExpr.OpForeach(e1,efor);
		}
		if(haxe_Template.expr_splitter.match(p)) {
			return haxe__$Template_TemplateExpr.OpExpr(this.parseExpr(p));
		}
		return haxe__$Template_TemplateExpr.OpVar(p);
	}
	,parseExpr: function(data) {
		var l = new List();
		var expr = data;
		while(haxe_Template.expr_splitter.match(data)) {
			var p = haxe_Template.expr_splitter.matchedPos();
			var k = p.pos + p.len;
			if(p.pos != 0) {
				l.add({ p : HxOverrides.substr(data,0,p.pos), s : true});
			}
			var p1 = haxe_Template.expr_splitter.matched(0);
			l.add({ p : p1, s : p1.indexOf("\"") >= 0});
			data = haxe_Template.expr_splitter.matchedRight();
		}
		if(data.length != 0) {
			l.add({ p : data, s : true});
		}
		var e;
		try {
			e = this.makeExpr(l);
			if(!l.isEmpty()) {
				throw new js__$Boot_HaxeError(l.first().p);
			}
		} catch( s ) {
			if (s instanceof js__$Boot_HaxeError) s = s.val;
			if( js_Boot.__instanceof(s,String) ) {
				throw new js__$Boot_HaxeError("Unexpected '" + s + "' in " + expr);
			} else throw(s);
		}
		return function() {
			try {
				return e();
			} catch( exc ) {
				if (exc instanceof js__$Boot_HaxeError) exc = exc.val;
				throw new js__$Boot_HaxeError("Error : " + Std.string(exc) + " in " + expr);
			}
		};
	}
	,makeConst: function(v) {
		haxe_Template.expr_trim.match(v);
		v = haxe_Template.expr_trim.matched(1);
		if(HxOverrides.cca(v,0) == 34) {
			var str = HxOverrides.substr(v,1,v.length - 2);
			return function() {
				return str;
			};
		}
		if(haxe_Template.expr_int.match(v)) {
			var i = Std.parseInt(v);
			return function() {
				return i;
			};
		}
		if(haxe_Template.expr_float.match(v)) {
			var f = parseFloat(v);
			return function() {
				return f;
			};
		}
		var me = this;
		return function() {
			return me.resolve(v);
		};
	}
	,makePath: function(e,l) {
		var p = l.first();
		if(p == null || p.p != ".") {
			return e;
		}
		l.pop();
		var field = l.pop();
		if(field == null || !field.s) {
			throw new js__$Boot_HaxeError(field.p);
		}
		var f = field.p;
		haxe_Template.expr_trim.match(f);
		f = haxe_Template.expr_trim.matched(1);
		return this.makePath(function() {
			return Reflect.field(e(),f);
		},l);
	}
	,makeExpr: function(l) {
		return this.makePath(this.makeExpr2(l),l);
	}
	,makeExpr2: function(l) {
		var p = l.pop();
		if(p == null) {
			throw new js__$Boot_HaxeError("<eof>");
		}
		if(p.s) {
			return this.makeConst(p.p);
		}
		var _g = p.p;
		switch(_g) {
		case "!":
			var e = this.makeExpr(l);
			return function() {
				var v = e();
				if(v != null) {
					return v == false;
				} else {
					return true;
				}
			};
		case "(":
			var e1 = this.makeExpr(l);
			var p1 = l.pop();
			if(p1 == null || p1.s) {
				throw new js__$Boot_HaxeError(p1);
			}
			if(p1.p == ")") {
				return e1;
			}
			var e2 = this.makeExpr(l);
			var p2 = l.pop();
			if(p2 == null || p2.p != ")") {
				throw new js__$Boot_HaxeError(p2);
			}
			var _g1 = p1.p;
			switch(_g1) {
			case "!=":
				return function() {
					return e1() != e2();
				};
			case "&&":
				return function() {
					return e1() && e2();
				};
			case "*":
				return function() {
					return e1() * e2();
				};
			case "+":
				return function() {
					return e1() + e2();
				};
			case "-":
				return function() {
					return e1() - e2();
				};
			case "/":
				return function() {
					return e1() / e2();
				};
			case "<":
				return function() {
					return e1() < e2();
				};
			case "<=":
				return function() {
					return e1() <= e2();
				};
			case "==":
				return function() {
					return e1() == e2();
				};
			case ">":
				return function() {
					return e1() > e2();
				};
			case ">=":
				return function() {
					return e1() >= e2();
				};
			case "||":
				return function() {
					return e1() || e2();
				};
			default:
				throw new js__$Boot_HaxeError("Unknown operation " + p1.p);
			}
			break;
		case "-":
			var e3 = this.makeExpr(l);
			return function() {
				return -e3();
			};
		}
		throw new js__$Boot_HaxeError(p.p);
	}
	,run: function(e) {
		switch(e[1]) {
		case 0:
			var v = e[2];
			var _this = this.buf;
			var x = Std.string(this.resolve(v));
			_this.b += Std.string(x);
			break;
		case 1:
			var e1 = e[2];
			var _this1 = this.buf;
			var x1 = Std.string(e1());
			_this1.b += Std.string(x1);
			break;
		case 2:
			var eelse = e[4];
			var eif = e[3];
			var e2 = e[2];
			var v1 = e2();
			if(v1 == null || v1 == false) {
				if(eelse != null) {
					this.run(eelse);
				}
			} else {
				this.run(eif);
			}
			break;
		case 3:
			var str = e[2];
			this.buf.b += str == null ? "null" : "" + str;
			break;
		case 4:
			var l = e[2];
			var _g_head = l.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var e3 = val;
				this.run(e3);
			}
			break;
		case 5:
			var loop = e[3];
			var e4 = e[2];
			var v2 = e4();
			try {
				var x2 = $iterator(v2)();
				if(x2.hasNext == null) {
					throw new js__$Boot_HaxeError(null);
				}
				v2 = x2;
			} catch( e5 ) {
				try {
					if(v2.hasNext == null) {
						throw new js__$Boot_HaxeError(null);
					}
				} catch( e6 ) {
					throw new js__$Boot_HaxeError("Cannot iter on " + Std.string(v2));
				}
			}
			this.stack.push(this.context);
			var v3 = v2;
			var ctx = v3;
			while(ctx.hasNext()) {
				var ctx1 = ctx.next();
				this.context = ctx1;
				this.run(loop);
			}
			this.context = this.stack.pop();
			break;
		case 6:
			var params = e[3];
			var m = e[2];
			var v4 = Reflect.field(this.macros,m);
			var pl = [];
			var old = this.buf;
			pl.push($bind(this,this.resolve));
			var _g_head1 = params.h;
			while(_g_head1 != null) {
				var val1 = _g_head1.item;
				_g_head1 = _g_head1.next;
				var p = val1;
				if(p[1] == 0) {
					var v5 = p[2];
					pl.push(this.resolve(v5));
				} else {
					this.buf = new StringBuf();
					this.run(p);
					pl.push(this.buf.b);
				}
			}
			this.buf = old;
			try {
				var _this2 = this.buf;
				var x3 = Std.string(v4.apply(this.macros,pl));
				_this2.b += Std.string(x3);
			} catch( e7 ) {
				if (e7 instanceof js__$Boot_HaxeError) e7 = e7.val;
				var plstr;
				try {
					plstr = pl.join(",");
				} catch( e8 ) {
					plstr = "???";
				}
				var msg = "Macro call " + m + "(" + plstr + ") failed (" + Std.string(e7) + ")";
				throw new js__$Boot_HaxeError(msg);
			}
			break;
		}
	}
	,__class__: haxe_Template
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = ["haxe","rtti","Meta"];
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var hex_collection_IHashMap = function() { };
$hxClasses["hex.collection.IHashMap"] = hex_collection_IHashMap;
hex_collection_IHashMap.__name__ = ["hex","collection","IHashMap"];
var hex_collection_ArrayMap = function() {
	this._k = [];
	this._v = [];
};
$hxClasses["hex.collection.ArrayMap"] = hex_collection_ArrayMap;
hex_collection_ArrayMap.__name__ = ["hex","collection","ArrayMap"];
hex_collection_ArrayMap.__interfaces__ = [hex_collection_IHashMap];
hex_collection_ArrayMap.prototype = {
	put: function(key,value) {
		var oldValue = null;
		if(key == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Key can't be null",{ fileName : "ArrayMap.hx", lineNumber : 138, className : "hex.collection.ArrayMap", methodName : "put"}));
		} else if(value == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Value can't be null",{ fileName : "ArrayMap.hx", lineNumber : 142, className : "hex.collection.ArrayMap", methodName : "put"}));
		} else {
			var _g = hex_util_ArrayUtil.indexOf(this._k,key);
			if(_g == -1) {
				this._k.push(key);
				this._v.push(value);
			} else {
				var i = _g;
				oldValue = this._v[i];
				this._v[i] = value;
			}
		}
		return oldValue;
	}
	,remove: function(key) {
		var oldValue = null;
		if(key != null) {
			var _g = hex_util_ArrayUtil.indexOf(this._k,key);
			if(_g == -1) {
				return null;
			} else {
				var last = _g;
				if(last == this._k.length - 1) {
					this._k.pop();
					oldValue = this._v.pop();
				} else {
					var v = _g;
					oldValue = this._v[v];
					this._k[v] = this._k.pop();
					this._v[v] = this._v.pop();
				}
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Key can't be null",{ fileName : "ArrayMap.hx", lineNumber : 208, className : "hex.collection.ArrayMap", methodName : "remove"}));
		}
		return oldValue;
	}
	,getValues: function() {
		return this._v.slice();
	}
	,__class__: hex_collection_ArrayMap
};
var hex_collection_HashMap = function() {
	this._init();
};
$hxClasses["hex.collection.HashMap"] = hex_collection_HashMap;
hex_collection_HashMap.__name__ = ["hex","collection","HashMap"];
hex_collection_HashMap.__interfaces__ = [hex_collection_IHashMap];
hex_collection_HashMap.prototype = {
	_init: function() {
		this._keys = new haxe_ds_StringMap();
		this._values = new haxe_ds_StringMap();
		this._size = 0;
	}
	,containsKey: function(key) {
		if(key != null) {
			var this1 = this._keys;
			var key1 = this._getName(key);
			var _this = this1;
			if(__map_reserved[key1] != null) {
				return _this.existsReserved(key1);
			} else {
				return _this.h.hasOwnProperty(key1);
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Key can't be null",{ fileName : "HashMap.hx", lineNumber : 56, className : "hex.collection.HashMap", methodName : "containsKey"}));
		}
	}
	,get: function(key) {
		if(key != null) {
			var this1 = this._keys;
			var key1 = this._getName(key);
			var _this = this1;
			if(__map_reserved[key1] != null) {
				return _this.getReserved(key1);
			} else {
				return _this.h[key1];
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Key can't be null",{ fileName : "HashMap.hx", lineNumber : 111, className : "hex.collection.HashMap", methodName : "get"}));
		}
	}
	,put: function(key,value) {
		var oldValue = null;
		if(key == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Key can't be null",{ fileName : "HashMap.hx", lineNumber : 146, className : "hex.collection.HashMap", methodName : "put"}));
		} else if(value == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Value can't be null",{ fileName : "HashMap.hx", lineNumber : 150, className : "hex.collection.HashMap", methodName : "put"}));
		} else {
			if(this.containsKey(key)) {
				oldValue = this.remove(key);
			}
			this._size++;
			var this1 = this._keys;
			var key1 = this._getName(key);
			var _this = this1;
			if(__map_reserved[key1] != null) {
				_this.setReserved(key1,value);
			} else {
				_this.h[key1] = value;
			}
			var this2 = this._values;
			var key2 = this._getName(value);
			var _this1 = this2;
			if(__map_reserved[key2] != null) {
				_this1.setReserved(key2,key);
			} else {
				_this1.h[key2] = key;
			}
			return oldValue;
		}
	}
	,_getName: function(o) {
		var s;
		if(typeof(o) == "string") {
			s = "_S" + Std.string(o);
		} else if(typeof(o) == "boolean") {
			s = "_B" + Std.string(o);
		} else if(typeof(o) == "number") {
			s = "_N" + Std.string(o);
		} else {
			s = "_O" + hex_core_HashCodeFactory.getKey(o);
		}
		return s;
	}
	,remove: function(key) {
		if(key != null) {
			var sKID = this._getName(key);
			var _this = this._keys;
			if(__map_reserved[sKID] != null ? _this.existsReserved(sKID) : _this.h.hasOwnProperty(sKID)) {
				var _this1 = this._keys;
				var sVID = this._getName(__map_reserved[sKID] != null ? _this1.getReserved(sKID) : _this1.h[sKID]);
				var _this2 = this._keys;
				var value = __map_reserved[sKID] != null ? _this2.getReserved(sKID) : _this2.h[sKID];
				this._values.remove(sVID);
				this._keys.remove(sKID);
				this._size--;
				return value;
			} else {
				return null;
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Key can't be null",{ fileName : "HashMap.hx", lineNumber : 235, className : "hex.collection.HashMap", methodName : "remove"}));
		}
	}
	,__class__: hex_collection_HashMap
};
var hex_collection_ILocator = function() { };
$hxClasses["hex.collection.ILocator"] = hex_collection_ILocator;
hex_collection_ILocator.__name__ = ["hex","collection","ILocator"];
hex_collection_ILocator.prototype = {
	__class__: hex_collection_ILocator
};
var hex_compiletime_CodeLocator = function() { };
$hxClasses["hex.compiletime.CodeLocator"] = hex_compiletime_CodeLocator;
hex_compiletime_CodeLocator.__name__ = ["hex","compiletime","CodeLocator"];
hex_compiletime_CodeLocator.get = function(contextName,assembler) {
	contextName = "hex.context." + contextName;
	var _this = hex_compiletime_CodeLocator._M;
	if(!(__map_reserved[contextName] != null ? _this.existsReserved(contextName) : _this.h.hasOwnProperty(contextName))) {
		if(assembler == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("assembler should not be null",{ fileName : "CodeLocator.hx", lineNumber : 24, className : "hex.compiletime.CodeLocator", methodName : "get"}));
		} else {
			var cls = Type.resolveClass(contextName);
			var locator = Type.createInstance(cls,[assembler]);
			var _this1 = hex_compiletime_CodeLocator._M;
			if(__map_reserved[contextName] != null) {
				_this1.setReserved(contextName,locator);
			} else {
				_this1.h[contextName] = locator;
			}
		}
	}
	var _this2 = hex_compiletime_CodeLocator._M;
	if(__map_reserved[contextName] != null) {
		return _this2.getReserved(contextName);
	} else {
		return _this2.h[contextName];
	}
};
var hex_context_IapplicationContext_$0 = function() { };
$hxClasses["hex.context.IapplicationContext_0"] = hex_context_IapplicationContext_$0;
hex_context_IapplicationContext_$0.__name__ = ["hex","context","IapplicationContext_0"];
hex_context_IapplicationContext_$0.prototype = {
	__class__: hex_context_IapplicationContext_$0
};
var hex_context_applicationContext = function(applicationAssembler) {
	this._applicationAssembler = applicationAssembler;
	this.applicationContext = this._applicationAssembler.getApplicationContext("applicationContext",hex_runtime_basic_ApplicationContext);
};
$hxClasses["hex.context.applicationContext"] = hex_context_applicationContext;
hex_context_applicationContext.__name__ = ["hex","context","applicationContext"];
hex_context_applicationContext.__interfaces__ = [hex_context_IapplicationContext_$0];
hex_context_applicationContext.prototype = {
	m_f276878bc4550514b52bbd06bac65d48: function() {
		var applicationContext = this._applicationAssembler.getApplicationContext("applicationContext",hex_runtime_basic_ApplicationContext);
		applicationContext.dispatch(hex_core_ApplicationAssemblerMessage.CONTEXT_PARSED);
		var __applicationContextInjector = applicationContext.getInjector();
		var coreFactory = applicationContext.getCoreFactory();
		applicationContext.dispatch(hex_core_ApplicationAssemblerMessage.ASSEMBLING_START);
		var serviceMapping = { injectInto : false, withName : "", asSingleton : false, toValue : null, fromType : "todomvc.service.ITodoService", toClass : configuration_TodoLocalStorage};
		coreFactory.register("serviceMapping",serviceMapping);
		this.serviceMapping = serviceMapping;
		var main = window.document.querySelector(".main");
		coreFactory.register("main",main);
		this.main = main;
		var view = new js_TodoViewJS(main);
		coreFactory.register("view",view);
		this.view = view;
		var viewMapping = { withName : "", toClass : null, asSingleton : false, fromType : "todomvc.view.ITodoView", toValue : view, injectInto : true};
		coreFactory.register("viewMapping",viewMapping);
		this.viewMapping = viewMapping;
		var module = new todomvc_module_TodoModule(serviceMapping,viewMapping);
		coreFactory.register("module",module);
		this.module = module;
		applicationContext.dispatch(hex_core_ApplicationAssemblerMessage.OBJECTS_BUILT);
		applicationContext.dispatch(hex_core_ApplicationAssemblerMessage.METHODS_CALLED);
		module.initialize();
		applicationContext.dispatch(hex_core_ApplicationAssemblerMessage.MODULES_INITIALIZED);
		applicationContext.dispatch(hex_core_ApplicationAssemblerMessage.ASSEMBLING_END);
	}
	,__class__: hex_context_applicationContext
};
var hex_context_applicationContext_$0 = function(assembler) {
	this.locator = hex_compiletime_CodeLocator.get("applicationContext",assembler);
	this.applicationAssembler = assembler;
	this.applicationContext = this.locator.applicationContext;
};
$hxClasses["hex.context.applicationContext_0"] = hex_context_applicationContext_$0;
hex_context_applicationContext_$0.__name__ = ["hex","context","applicationContext_0"];
hex_context_applicationContext_$0.prototype = {
	execute: function() {
		hex_compiletime_CodeLocator.get("applicationContext").m_f276878bc4550514b52bbd06bac65d48();
	}
	,__class__: hex_context_applicationContext_$0
};
var hex_control_ICompletable = function() { };
$hxClasses["hex.control.ICompletable"] = hex_control_ICompletable;
hex_control_ICompletable.__name__ = ["hex","control","ICompletable"];
hex_control_ICompletable.prototype = {
	__class__: hex_control_ICompletable
};
var hex_control_ResultResponder = function(result,errorMessage) {
	if(errorMessage == null) {
		errorMessage = "";
	}
	this._result = result;
	this._errorMessage = errorMessage;
};
$hxClasses["hex.control.ResultResponder"] = hex_control_ResultResponder;
hex_control_ResultResponder.__name__ = ["hex","control","ResultResponder"];
hex_control_ResultResponder.__interfaces__ = [hex_control_ICompletable];
hex_control_ResultResponder.prototype = {
	onComplete: function(callback) {
		callback(this._result);
		return this;
	}
	,__class__: hex_control_ResultResponder
};
var hex_di_IContextOwner = function() { };
$hxClasses["hex.di.IContextOwner"] = hex_di_IContextOwner;
hex_di_IContextOwner.__name__ = ["hex","di","IContextOwner"];
var hex_module_IContextModule = function() { };
$hxClasses["hex.module.IContextModule"] = hex_module_IContextModule;
hex_module_IContextModule.__name__ = ["hex","module","IContextModule"];
hex_module_IContextModule.__interfaces__ = [hex_di_IContextOwner];
hex_module_IContextModule.prototype = {
	__class__: hex_module_IContextModule
	,__properties__: {get_isReleased:"get_isReleased"}
};
var hex_core_IApplicationContext = function() { };
$hxClasses["hex.core.IApplicationContext"] = hex_core_IApplicationContext;
hex_core_IApplicationContext.__name__ = ["hex","core","IApplicationContext"];
hex_core_IApplicationContext.__interfaces__ = [hex_module_IContextModule];
hex_core_IApplicationContext.prototype = {
	__class__: hex_core_IApplicationContext
};
var hex_core_AbstractApplicationContext = function(coreFactory,name) {
	this._coreFactory = coreFactory;
	this._name = name;
	this._domain = hex_domain_Domain.getDomain(name);
};
$hxClasses["hex.core.AbstractApplicationContext"] = hex_core_AbstractApplicationContext;
hex_core_AbstractApplicationContext.__name__ = ["hex","core","AbstractApplicationContext"];
hex_core_AbstractApplicationContext.__interfaces__ = [hex_core_IApplicationContext];
hex_core_AbstractApplicationContext.prototype = {
	getDomain: function() {
		return this._domain;
	}
	,getCoreFactory: function() {
		return this._coreFactory;
	}
	,getInjector: function() {
		return this._coreFactory.getInjector();
	}
	,release: function() {
		if(!this.get_isReleased()) {
			this.isReleased = true;
			this._onRelease();
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException(Std.string(this) + ".release can't be called more than once.",{ fileName : "AbstractApplicationContext.hx", lineNumber : 83, className : "hex.core.AbstractApplicationContext", methodName : "release"}));
		}
	}
	,_onRelease: function() {
	}
	,get_isReleased: function() {
		return this.isReleased;
	}
	,__class__: hex_core_AbstractApplicationContext
	,__properties__: {get_isReleased:"get_isReleased"}
};
var hex_core_ApplicationAssemblerMessage = function() { };
$hxClasses["hex.core.ApplicationAssemblerMessage"] = hex_core_ApplicationAssemblerMessage;
hex_core_ApplicationAssemblerMessage.__name__ = ["hex","core","ApplicationAssemblerMessage"];
var hex_core_HashCodeFactory = function() { };
$hxClasses["hex.core.HashCodeFactory"] = hex_core_HashCodeFactory;
hex_core_HashCodeFactory.__name__ = ["hex","core","HashCodeFactory"];
hex_core_HashCodeFactory.getNextKEY = function() {
	return hex_core_HashCodeFactory._nKEY++;
};
hex_core_HashCodeFactory.getKey = function(o) {
	if(hex_core_HashCodeFactory._M.h.__keys__[o.__id__] == null) {
		hex_core_HashCodeFactory._M.set(o,hex_core_HashCodeFactory.getNextKEY());
	}
	return hex_core_HashCodeFactory._M.h[o.__id__];
};
var hex_core_IAnnotationParsable = function() { };
$hxClasses["hex.core.IAnnotationParsable"] = hex_core_IAnnotationParsable;
hex_core_IAnnotationParsable.__name__ = ["hex","core","IAnnotationParsable"];
var hex_core_IApplicationAssembler = function() { };
$hxClasses["hex.core.IApplicationAssembler"] = hex_core_IApplicationAssembler;
hex_core_IApplicationAssembler.__name__ = ["hex","core","IApplicationAssembler"];
hex_core_IApplicationAssembler.prototype = {
	__class__: hex_core_IApplicationAssembler
};
var hex_core_IBuilder = function() { };
$hxClasses["hex.core.IBuilder"] = hex_core_IBuilder;
hex_core_IBuilder.__name__ = ["hex","core","IBuilder"];
hex_core_IBuilder.prototype = {
	__class__: hex_core_IBuilder
};
var hex_core_ICoreFactory = function() { };
$hxClasses["hex.core.ICoreFactory"] = hex_core_ICoreFactory;
hex_core_ICoreFactory.__name__ = ["hex","core","ICoreFactory"];
hex_core_ICoreFactory.__interfaces__ = [hex_collection_ILocator];
hex_core_ICoreFactory.prototype = {
	__class__: hex_core_ICoreFactory
};
var hex_data_GUID = function() { };
$hxClasses["hex.data.GUID"] = hex_data_GUID;
hex_data_GUID.__name__ = ["hex","data","GUID"];
hex_data_GUID.createRandomIdentifier = function(length,radix) {
	if(radix == null) {
		radix = 61;
	}
	var characters = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];
	var id = [];
	if(radix > 61) {
		radix = 61;
	} else {
		radix = radix;
	}
	while(length-- > 0) id.push(characters[Math.floor(Math.random() * (1 + radix))]);
	return id.join("");
};
hex_data_GUID.uuid = function() {
	var specialChars = ["8","9","A","B"];
	return hex_data_GUID.createRandomIdentifier(8,15) + "" + hex_data_GUID.createRandomIdentifier(4,15) + "4" + hex_data_GUID.createRandomIdentifier(3,15) + "" + specialChars[Math.floor(Math.random() * 4)] + hex_data_GUID.createRandomIdentifier(3,15) + "" + hex_data_GUID.createRandomIdentifier(12,15);
};
var hex_di_IBasicInjector = function() { };
$hxClasses["hex.di.IBasicInjector"] = hex_di_IBasicInjector;
hex_di_IBasicInjector.__name__ = ["hex","di","IBasicInjector"];
hex_di_IBasicInjector.prototype = {
	__class__: hex_di_IBasicInjector
};
var hex_di_IDependencyInjector = function() { };
$hxClasses["hex.di.IDependencyInjector"] = hex_di_IDependencyInjector;
hex_di_IDependencyInjector.__name__ = ["hex","di","IDependencyInjector"];
hex_di_IDependencyInjector.__interfaces__ = [hex_di_IBasicInjector];
hex_di_IDependencyInjector.prototype = {
	__class__: hex_di_IDependencyInjector
};
var hex_di_IInjectorListener = function() { };
$hxClasses["hex.di.IInjectorListener"] = hex_di_IInjectorListener;
hex_di_IInjectorListener.__name__ = ["hex","di","IInjectorListener"];
hex_di_IInjectorListener.prototype = {
	__class__: hex_di_IInjectorListener
};
var hex_di_Injector = function() {
	this.trigger = new hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener();
	this._classDescriptor = new hex_di_reflect_FastClassDescriptionProvider();
	this._mapping = new haxe_ds_StringMap();
	this._processedMapping = new haxe_ds_StringMap();
	this._managedObjects = new hex_collection_ArrayMap();
};
$hxClasses["hex.di.Injector"] = hex_di_Injector;
hex_di_Injector.__name__ = ["hex","di","Injector"];
hex_di_Injector.__interfaces__ = [hex_di_IDependencyInjector];
hex_di_Injector.prototype = {
	addListener: function(listener) {
		return this.trigger.connect(listener);
	}
	,removeListener: function(listener) {
		return this.trigger.disconnect(listener);
	}
	,mapToValue: function(clazz,value,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.map(clazz,name);
		var provider = new hex_di_provider_ValueProvider(value,_this._injector);
		if(_this.provider != null) {
			hex_log_LogManager.getLogger("hex.di.mapping.InjectionMapping").warn("Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.",null,{ fileName : "InjectionMapping.hx", lineNumber : 59, className : "hex.di.mapping.InjectionMapping", methodName : "toProvider"});
		}
		_this.provider = provider;
	}
	,mapToType: function(clazz,type,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.map(clazz,name);
		var provider = new hex_di_provider_ClassProvider(type);
		if(_this.provider != null) {
			hex_log_LogManager.getLogger("hex.di.mapping.InjectionMapping").warn("Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.",null,{ fileName : "InjectionMapping.hx", lineNumber : 59, className : "hex.di.mapping.InjectionMapping", methodName : "toProvider"});
		}
		_this.provider = provider;
	}
	,mapToSingleton: function(clazz,type,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.map(clazz,name);
		var provider = new hex_di_provider_SingletonProvider(type,_this._injector);
		if(_this.provider != null) {
			hex_log_LogManager.getLogger("hex.di.mapping.InjectionMapping").warn("Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.",null,{ fileName : "InjectionMapping.hx", lineNumber : 59, className : "hex.di.mapping.InjectionMapping", methodName : "toProvider"});
		}
		_this.provider = provider;
	}
	,getInstance: function(type,name,targetType) {
		if(name == null) {
			name = "";
		}
		var mappingID = Type.getClassName(type) + "|" + name;
		var _this = this._mapping;
		var mapping = __map_reserved[mappingID] != null ? _this.getReserved(mappingID) : _this.h[mappingID];
		if(mapping != null) {
			return mapping.getResult(targetType);
		} else if(this._parentInjector != null) {
			return this._parentInjector.getInstance(type,name,targetType);
		} else {
			throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("Injector is missing a mapping to get instance with type '" + Type.getClassName(type) + "'. Target dependency: '" + mappingID + "'",{ fileName : "Injector.hx", lineNumber : 102, className : "hex.di.Injector", methodName : "getInstance"}));
		}
	}
	,getProvider: function(className,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = className + "|" + name;
		var _this = this._mapping;
		var mapping = __map_reserved[mappingID] != null ? _this.getReserved(mappingID) : _this.h[mappingID];
		if(mapping != null) {
			return mapping.provider;
		} else if(this._parentInjector != null) {
			return this._parentInjector.getInstance(Type.resolveClass(className.split("<")[0]),name);
		} else {
			return null;
		}
	}
	,instantiateUnmapped: function(type) {
		if(type == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("class description cannot be null",{ fileName : "Injector.hx", lineNumber : 150, className : "hex.di.Injector", methodName : "instantiateUnmapped"}));
		}
		var classDescription = this._classDescriptor.getClassDescription(type);
		var instance;
		if(classDescription != null && classDescription.c != null) {
			var $arguments = classDescription.c.a;
			var args = [];
			var _g = 0;
			while(_g < $arguments.length) {
				var arg = $arguments[_g];
				++_g;
				var provider = this.getProvider(arg.t,arg.n);
				if(provider != null) {
					args.push(provider.getResult(this,type));
				} else if(!arg.o) {
					var type1 = arg.t;
					var injectionName = arg.n;
					throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_util_Stringifier.stringify(this) + "' is missing a mapping to inject argument" + " with type '" + type1 + "' into constructor of class '" + hex_util_Stringifier.stringify(type) + "'. Target dependency: '" + type1 + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 116, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
				}
			}
			var args1 = args;
			instance = Type.createInstance(type,args1);
			this._applyInjection(instance,type,classDescription);
		} else {
			instance = Type.createInstance(type,[]);
		}
		return instance;
	}
	,injectInto: function(target) {
		var o = target;
		var targetType = o == null ? null : js_Boot.getClass(o);
		var classDescription = this._classDescriptor.getClassDescription(targetType);
		if(classDescription != null) {
			this._applyInjection(target,targetType,classDescription);
		} else {
			throw new js__$Boot_HaxeError(new hex_di_error_MissingClassDescriptionException("Injector is missing a class description to inject into an instance of '" + hex_util_ClassUtil.getClassName(target) + "'. This class should implement IInjectorContainer",{ fileName : "Injector.hx", lineNumber : 251, className : "hex.di.Injector", methodName : "injectInto"}));
		}
	}
	,destroyInstance: function(instance) {
		if(!Reflect.isFunction(instance)) {
			this._managedObjects.remove(instance);
			var o = instance;
			var classDescription = this._classDescriptor.getClassDescription(o == null ? null : js_Boot.getClass(o));
			if(classDescription != null) {
				var _g = 0;
				var _g1 = classDescription.pd;
				while(_g < _g1.length) {
					var preDestroy = _g1[_g];
					++_g;
					var o1 = instance;
					var targetType = o1 == null ? null : js_Boot.getClass(o1);
					var $arguments = preDestroy.a;
					var methodName = preDestroy.m;
					var func = Reflect.field(instance,methodName);
					var args = [];
					var _g2 = 0;
					while(_g2 < $arguments.length) {
						var arg = $arguments[_g2];
						++_g2;
						var provider = this.getProvider(arg.t,arg.n);
						if(provider != null) {
							args.push(provider.getResult(this,targetType));
						} else if(!arg.o) {
							if(methodName == "new") {
								var type = arg.t;
								var injectionName = arg.n;
								throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_util_Stringifier.stringify(this) + "' is missing a mapping to inject argument" + " with type '" + type + "' into constructor of class '" + hex_util_Stringifier.stringify(instance) + "'. Target dependency: '" + type + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 116, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
							} else {
								var type1 = arg.t;
								var injectionName1 = arg.n;
								throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_util_Stringifier.stringify(this) + "' is missing a mapping to inject argument into method named '" + methodName + "' with type '" + type1 + "' inside instance of '" + hex_util_Stringifier.stringify(instance) + "'. Target dependency: '" + type1 + "|" + injectionName1 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 106, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
							}
						}
					}
					func.apply(instance,args);
				}
			}
		}
	}
	,map: function(type,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = Type.getClassName(type) + "|" + name;
		var _this = this._mapping;
		if((__map_reserved[mappingID] != null ? _this.getReserved(mappingID) : _this.h[mappingID]) != null) {
			var _this1 = this._mapping;
			return __map_reserved[mappingID] != null ? _this1.getReserved(mappingID) : _this1.h[mappingID];
		} else {
			return this._createMapping(name,mappingID);
		}
	}
	,teardown: function() {
		var _this = this._mapping;
		var mapping = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(mapping.hasNext()) {
			var mapping1 = mapping.next();
			mapping1.provider.destroy();
		}
		var values = this._managedObjects.getValues();
		var _g = 0;
		while(_g < values.length) {
			var value = values[_g];
			++_g;
			this.destroyInstance(value);
		}
		this._mapping = new haxe_ds_StringMap();
		this._processedMapping = new haxe_ds_StringMap();
		this._managedObjects = new hex_collection_ArrayMap();
		this.trigger.disconnectAll();
	}
	,mapClassName: function(className,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = className + "|" + name;
		var _this = this._mapping;
		if((__map_reserved[mappingID] != null ? _this.getReserved(mappingID) : _this.h[mappingID]) != null) {
			var _this1 = this._mapping;
			return __map_reserved[mappingID] != null ? _this1.getReserved(mappingID) : _this1.h[mappingID];
		} else {
			return this._createMapping(name,mappingID);
		}
	}
	,mapClassNameToValue: function(className,value,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.mapClassName(className,name);
		var provider = new hex_di_provider_ValueProvider(value,_this._injector);
		if(_this.provider != null) {
			hex_log_LogManager.getLogger("hex.di.mapping.InjectionMapping").warn("Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.",null,{ fileName : "InjectionMapping.hx", lineNumber : 59, className : "hex.di.mapping.InjectionMapping", methodName : "toProvider"});
		}
		_this.provider = provider;
	}
	,mapClassNameToType: function(className,type,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.mapClassName(className,name);
		var provider = new hex_di_provider_ClassProvider(type);
		if(_this.provider != null) {
			hex_log_LogManager.getLogger("hex.di.mapping.InjectionMapping").warn("Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.",null,{ fileName : "InjectionMapping.hx", lineNumber : 59, className : "hex.di.mapping.InjectionMapping", methodName : "toProvider"});
		}
		_this.provider = provider;
	}
	,mapClassNameToSingleton: function(className,type,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.mapClassName(className,name);
		var provider = new hex_di_provider_SingletonProvider(type,_this._injector);
		if(_this.provider != null) {
			hex_log_LogManager.getLogger("hex.di.mapping.InjectionMapping").warn("Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.",null,{ fileName : "InjectionMapping.hx", lineNumber : 59, className : "hex.di.mapping.InjectionMapping", methodName : "toProvider"});
		}
		_this.provider = provider;
	}
	,_createMapping: function(name,mappingID) {
		var _this = this._processedMapping;
		if(__map_reserved[mappingID] != null ? _this.getReserved(mappingID) : _this.h[mappingID]) {
			throw new js__$Boot_HaxeError(new hex_di_error_InjectorException("Mapping named '" + mappingID + "' is already processing",{ fileName : "Injector.hx", lineNumber : 363, className : "hex.di.Injector", methodName : "_createMapping"}));
		}
		var _this1 = this._processedMapping;
		if(__map_reserved[mappingID] != null) {
			_this1.setReserved(mappingID,true);
		} else {
			_this1.h[mappingID] = true;
		}
		var mapping = new hex_di_mapping_InjectionMapping(this,mappingID);
		var _this2 = this._mapping;
		if(__map_reserved[mappingID] != null) {
			_this2.setReserved(mappingID,mapping);
		} else {
			_this2.h[mappingID] = mapping;
		}
		this._processedMapping.remove(mappingID);
		return mapping;
	}
	,_applyInjection: function(target,targetType,classDescription) {
		this.trigger.onPreConstruct(this,target,targetType);
		var target1 = target;
		var _g = 0;
		var _g1 = classDescription.p;
		while(_g < _g1.length) {
			var property = _g1[_g];
			++_g;
			var propertyName = property.p;
			var propertyType = property.t;
			var injectionName = property.n;
			var isOptional = property.o;
			var provider = this.getProvider(propertyType,injectionName);
			if(provider != null) {
				Reflect.setProperty(target1,propertyName,provider.getResult(this,targetType));
			} else if(!isOptional) {
				throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_util_Stringifier.stringify(this) + "' is missing a mapping to inject into property named '" + propertyName + "' with type '" + propertyType + "' inside instance of '" + hex_util_Stringifier.stringify(target1) + "'. Target dependency: '" + propertyType + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 60, className : "hex.di.reflect.InjectionUtil", methodName : "applyPropertyInjection"}));
			}
		}
		var _g2 = 0;
		var _g11 = classDescription.m;
		while(_g2 < _g11.length) {
			var method = _g11[_g2];
			++_g2;
			var $arguments = method.a;
			var methodName = method.m;
			var func = Reflect.field(target1,methodName);
			var args = [];
			var _g3 = 0;
			while(_g3 < $arguments.length) {
				var arg = $arguments[_g3];
				++_g3;
				var provider1 = this.getProvider(arg.t,arg.n);
				if(provider1 != null) {
					args.push(provider1.getResult(this,targetType));
				} else if(!arg.o) {
					if(methodName == "new") {
						var type = arg.t;
						var injectionName1 = arg.n;
						throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_util_Stringifier.stringify(this) + "' is missing a mapping to inject argument" + " with type '" + type + "' into constructor of class '" + hex_util_Stringifier.stringify(target1) + "'. Target dependency: '" + type + "|" + injectionName1 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 116, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
					} else {
						var type1 = arg.t;
						var injectionName2 = arg.n;
						throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_util_Stringifier.stringify(this) + "' is missing a mapping to inject argument into method named '" + methodName + "' with type '" + type1 + "' inside instance of '" + hex_util_Stringifier.stringify(target1) + "'. Target dependency: '" + type1 + "|" + injectionName2 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 106, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
					}
				}
			}
			func.apply(target1,args);
		}
		var _g4 = 0;
		var _g12 = classDescription.pc;
		while(_g4 < _g12.length) {
			var postConstruct = _g12[_g4];
			++_g4;
			var arguments1 = postConstruct.a;
			var methodName1 = postConstruct.m;
			var func1 = Reflect.field(target1,methodName1);
			var args1 = [];
			var _g5 = 0;
			while(_g5 < arguments1.length) {
				var arg1 = arguments1[_g5];
				++_g5;
				var provider2 = this.getProvider(arg1.t,arg1.n);
				if(provider2 != null) {
					args1.push(provider2.getResult(this,targetType));
				} else if(!arg1.o) {
					if(methodName1 == "new") {
						var type2 = arg1.t;
						var injectionName3 = arg1.n;
						throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_util_Stringifier.stringify(this) + "' is missing a mapping to inject argument" + " with type '" + type2 + "' into constructor of class '" + hex_util_Stringifier.stringify(target1) + "'. Target dependency: '" + type2 + "|" + injectionName3 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 116, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
					} else {
						var type3 = arg1.t;
						var injectionName4 = arg1.n;
						throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_util_Stringifier.stringify(this) + "' is missing a mapping to inject argument into method named '" + methodName1 + "' with type '" + type3 + "' inside instance of '" + hex_util_Stringifier.stringify(target1) + "'. Target dependency: '" + type3 + "|" + injectionName4 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 106, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
					}
				}
			}
			func1.apply(target1,args1);
		}
		if(classDescription.pd.length > 0 && !Reflect.isFunction(target)) {
			this._managedObjects.put(target,target);
		}
		this.trigger.onPostConstruct(this,target,targetType);
	}
	,__class__: hex_di_Injector
};
var hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener = function() {
	this._inputs = [];
};
$hxClasses["hex.di.__Trigger_Class_For__IInjectorListener"] = hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener;
hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener.__name__ = ["hex","di","__Trigger_Class_For__IInjectorListener"];
hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener.__interfaces__ = [hex_event_ITrigger,hex_di_IInjectorListener];
hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener.prototype = {
	connect: function(input) {
		if(this._inputs.indexOf(input) == -1) {
			this._inputs.push(input);
			return true;
		} else {
			return false;
		}
	}
	,disconnect: function(input) {
		var index = this._inputs.indexOf(input);
		if(index > -1) {
			this._inputs.splice(index,1);
			return true;
		} else {
			return false;
		}
	}
	,disconnectAll: function() {
		this._inputs = [];
	}
	,onPreConstruct: function(target,instance,instanceType) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onPreConstruct(target,instance,instanceType);
		}
	}
	,onPostConstruct: function(target,instance,instanceType) {
		var inputs = this._inputs.slice();
		var _g = 0;
		while(_g < inputs.length) {
			var input = inputs[_g];
			++_g;
			input.onPostConstruct(target,instance,instanceType);
		}
	}
	,__class__: hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener
};
var hex_error_Exception = function(message,posInfos) {
	this.message = message;
	this.posInfos = posInfos;
	this.name = hex_util_Stringifier.stringify(this);
};
$hxClasses["hex.error.Exception"] = hex_error_Exception;
hex_error_Exception.__name__ = ["hex","error","Exception"];
hex_error_Exception.prototype = {
	toString: function() {
		return (this.posInfos != null ? this.name + " at " + this.posInfos.className + "#" + this.posInfos.methodName + " line:" + this.posInfos.lineNumber + " in file '" + this.posInfos.fileName + "'" : this.name) + " | " + this.message;
	}
	,__class__: hex_error_Exception
};
var hex_di_error_InjectorException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.di.error.InjectorException"] = hex_di_error_InjectorException;
hex_di_error_InjectorException.__name__ = ["hex","di","error","InjectorException"];
hex_di_error_InjectorException.__super__ = hex_error_Exception;
hex_di_error_InjectorException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_di_error_InjectorException
});
var hex_di_error_MissingClassDescriptionException = function(message,posInfos) {
	hex_di_error_InjectorException.call(this,message,posInfos);
};
$hxClasses["hex.di.error.MissingClassDescriptionException"] = hex_di_error_MissingClassDescriptionException;
hex_di_error_MissingClassDescriptionException.__name__ = ["hex","di","error","MissingClassDescriptionException"];
hex_di_error_MissingClassDescriptionException.__super__ = hex_di_error_InjectorException;
hex_di_error_MissingClassDescriptionException.prototype = $extend(hex_di_error_InjectorException.prototype,{
	__class__: hex_di_error_MissingClassDescriptionException
});
var hex_di_error_MissingMappingException = function(message,posInfos) {
	hex_di_error_InjectorException.call(this,message,posInfos);
};
$hxClasses["hex.di.error.MissingMappingException"] = hex_di_error_MissingMappingException;
hex_di_error_MissingMappingException.__name__ = ["hex","di","error","MissingMappingException"];
hex_di_error_MissingMappingException.__super__ = hex_di_error_InjectorException;
hex_di_error_MissingMappingException.prototype = $extend(hex_di_error_InjectorException.prototype,{
	__class__: hex_di_error_MissingMappingException
});
var hex_di_mapping_IDependencyOwner = function() { };
$hxClasses["hex.di.mapping.IDependencyOwner"] = hex_di_mapping_IDependencyOwner;
hex_di_mapping_IDependencyOwner.__name__ = ["hex","di","mapping","IDependencyOwner"];
hex_di_mapping_IDependencyOwner.__interfaces__ = [hex_di_IContextOwner];
var hex_di_mapping_InjectionMapping = function(injector,mappingID) {
	this._injector = injector;
	this._mappingID = mappingID;
};
$hxClasses["hex.di.mapping.InjectionMapping"] = hex_di_mapping_InjectionMapping;
hex_di_mapping_InjectionMapping.__name__ = ["hex","di","mapping","InjectionMapping"];
hex_di_mapping_InjectionMapping.prototype = {
	getResult: function(target) {
		if(this.provider == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("can't retrieve result, mapping with id '" + this._mappingID + "' has no provider",{ fileName : "InjectionMapping.hx", lineNumber : 32, className : "hex.di.mapping.InjectionMapping", methodName : "getResult"}));
		}
		return this.provider.getResult(this._injector,target);
	}
	,__class__: hex_di_mapping_InjectionMapping
};
var hex_di_mapping_MappingChecker = function() { };
$hxClasses["hex.di.mapping.MappingChecker"] = hex_di_mapping_MappingChecker;
hex_di_mapping_MappingChecker.__name__ = ["hex","di","mapping","MappingChecker"];
hex_di_mapping_MappingChecker.filter = function(classReference,mappings) {
	var dependencies = Reflect.getProperty(classReference,"__DEP__");
	return mappings.filter(function(e) {
		return dependencies.indexOf(e.fromType + "|" + (e.withName == null ? "" : e.withName)) != -1;
	});
};
var hex_di_provider_IDependencyProvider = function() { };
$hxClasses["hex.di.provider.IDependencyProvider"] = hex_di_provider_IDependencyProvider;
hex_di_provider_IDependencyProvider.__name__ = ["hex","di","provider","IDependencyProvider"];
hex_di_provider_IDependencyProvider.prototype = {
	__class__: hex_di_provider_IDependencyProvider
};
var hex_di_provider_ClassProvider = function(type) {
	this._type = type;
};
$hxClasses["hex.di.provider.ClassProvider"] = hex_di_provider_ClassProvider;
hex_di_provider_ClassProvider.__name__ = ["hex","di","provider","ClassProvider"];
hex_di_provider_ClassProvider.__interfaces__ = [hex_di_provider_IDependencyProvider];
hex_di_provider_ClassProvider.prototype = {
	getResult: function(injector,target) {
		return injector.instantiateUnmapped(this._type);
	}
	,destroy: function() {
	}
	,__class__: hex_di_provider_ClassProvider
};
var hex_di_provider_DomainLoggerProvider = function(messageFactory,fallbackLogger) {
	this.fallbackLogger = fallbackLogger;
	this.messageFactory = messageFactory;
};
$hxClasses["hex.di.provider.DomainLoggerProvider"] = hex_di_provider_DomainLoggerProvider;
hex_di_provider_DomainLoggerProvider.__name__ = ["hex","di","provider","DomainLoggerProvider"];
hex_di_provider_DomainLoggerProvider.__interfaces__ = [hex_di_provider_IDependencyProvider];
hex_di_provider_DomainLoggerProvider.prototype = {
	destroy: function() {
		this.messageFactory = null;
	}
	,getResult: function(injector,target) {
		if(target == null) {
			return this.fallbackLogger;
		} else {
			return hex_log_LogManager.getLoggerByClass(target,this.messageFactory);
		}
	}
	,__class__: hex_di_provider_DomainLoggerProvider
};
var hex_di_provider_SingletonProvider = function(type,injector) {
	this._isDestroyed = false;
	this._type = type;
	this._injector = injector;
};
$hxClasses["hex.di.provider.SingletonProvider"] = hex_di_provider_SingletonProvider;
hex_di_provider_SingletonProvider.__name__ = ["hex","di","provider","SingletonProvider"];
hex_di_provider_SingletonProvider.__interfaces__ = [hex_di_provider_IDependencyProvider];
hex_di_provider_SingletonProvider.prototype = {
	getResult: function(injector,target) {
		if(this._isDestroyed) {
			throw new js__$Boot_HaxeError(new hex_di_error_InjectorException("Forbidden usage of unmapped singleton provider",{ fileName : "SingletonProvider.hx", lineNumber : 29, className : "hex.di.provider.SingletonProvider", methodName : "getResult"}));
		} else if(this._value == null) {
			this._value = this._injector.instantiateUnmapped(this._type);
		}
		return this._value;
	}
	,destroy: function() {
		this._isDestroyed = true;
		if(this._value != null) {
			this._injector.destroyInstance(this._value);
		}
		this._injector = null;
		this._value = null;
	}
	,__class__: hex_di_provider_SingletonProvider
};
var hex_di_provider_ValueProvider = function(value,injector) {
	this._value = value;
	this._injector = injector;
};
$hxClasses["hex.di.provider.ValueProvider"] = hex_di_provider_ValueProvider;
hex_di_provider_ValueProvider.__name__ = ["hex","di","provider","ValueProvider"];
hex_di_provider_ValueProvider.__interfaces__ = [hex_di_provider_IDependencyProvider];
hex_di_provider_ValueProvider.prototype = {
	getResult: function(injector,target) {
		return this._value;
	}
	,destroy: function() {
		this._injector.destroyInstance(this._value);
		this._injector = null;
		this._value = null;
	}
	,__class__: hex_di_provider_ValueProvider
};
var hex_di_reflect_IClassDescriptionProvider = function() { };
$hxClasses["hex.di.reflect.IClassDescriptionProvider"] = hex_di_reflect_IClassDescriptionProvider;
hex_di_reflect_IClassDescriptionProvider.__name__ = ["hex","di","reflect","IClassDescriptionProvider"];
hex_di_reflect_IClassDescriptionProvider.prototype = {
	__class__: hex_di_reflect_IClassDescriptionProvider
};
var hex_di_reflect_FastClassDescriptionProvider = function() {
};
$hxClasses["hex.di.reflect.FastClassDescriptionProvider"] = hex_di_reflect_FastClassDescriptionProvider;
hex_di_reflect_FastClassDescriptionProvider.__name__ = ["hex","di","reflect","FastClassDescriptionProvider"];
hex_di_reflect_FastClassDescriptionProvider.__interfaces__ = [hex_di_reflect_IClassDescriptionProvider];
hex_di_reflect_FastClassDescriptionProvider.prototype = {
	getClassDescription: function(type) {
		return Reflect.getProperty(type,"__INJECTION_DATA");
	}
	,__class__: hex_di_reflect_FastClassDescriptionProvider
};
var hex_domain_IDomainDispatcher = function() { };
$hxClasses["hex.domain.IDomainDispatcher"] = hex_domain_IDomainDispatcher;
hex_domain_IDomainDispatcher.__name__ = ["hex","domain","IDomainDispatcher"];
var hex_domain_DomainDispatcher = function(defaultDomain,dispatcherClass) {
	this.clear();
	this.setDefaultDomain(defaultDomain);
	this.setDispatcherClass(dispatcherClass);
};
$hxClasses["hex.domain.DomainDispatcher"] = hex_domain_DomainDispatcher;
hex_domain_DomainDispatcher.__name__ = ["hex","domain","DomainDispatcher"];
hex_domain_DomainDispatcher.__interfaces__ = [hex_domain_IDomainDispatcher];
hex_domain_DomainDispatcher.prototype = {
	setDispatcherClass: function(dispatcherClass) {
		this._dispatcherClass = dispatcherClass != null ? dispatcherClass : hex_event_Dispatcher;
	}
	,getDefaultDomain: function() {
		return this._defaultDomain;
	}
	,setDefaultDomain: function(domain) {
		this._defaultDomain = domain == null ? hex_domain_DefaultDomain.DOMAIN : domain;
		this.getDomainDispatcher(this.getDefaultDomain());
	}
	,clear: function() {
		this._domains = new haxe_ds_ObjectMap();
		var domain = this.getDefaultDomain();
		if(domain != null) {
			this.getDomainDispatcher(domain);
		}
	}
	,hasChannelDispatcher: function(domain) {
		if(domain == null) {
			return this._domains.h.__keys__[this._defaultDomain.__id__] != null;
		} else {
			return this._domains.h.__keys__[domain.__id__] != null;
		}
	}
	,getDomainDispatcher: function(domain) {
		if(this.hasChannelDispatcher(domain)) {
			if(domain == null) {
				return this._domains.h[this._defaultDomain.__id__];
			} else {
				return this._domains.h[domain.__id__];
			}
		} else {
			var dispatcher = new hex_event_Dispatcher();
			this._domains.set(domain,dispatcher);
			return dispatcher;
		}
	}
	,__class__: hex_domain_DomainDispatcher
};
var hex_domain_IApplicationDomainDispatcher = function() { };
$hxClasses["hex.domain.IApplicationDomainDispatcher"] = hex_domain_IApplicationDomainDispatcher;
hex_domain_IApplicationDomainDispatcher.__name__ = ["hex","domain","IApplicationDomainDispatcher"];
hex_domain_IApplicationDomainDispatcher.__interfaces__ = [hex_domain_IDomainDispatcher];
var hex_domain_Domain = function(domainName) {
	if(domainName == null) {
		throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Domain's name can't be null",{ fileName : "Domain.hx", lineNumber : 23, className : "hex.domain.Domain", methodName : "new"}));
	} else {
		var _this = hex_domain_Domain._domains;
		if(__map_reserved[domainName] != null ? _this.existsReserved(domainName) : _this.h.hasOwnProperty(domainName)) {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("Domain has already been registered with name '" + domainName + "'",{ fileName : "Domain.hx", lineNumber : 27, className : "hex.domain.Domain", methodName : "new"}));
		} else {
			var _this1 = hex_domain_Domain._domains;
			if(__map_reserved[domainName] != null) {
				_this1.setReserved(domainName,this);
			} else {
				_this1.h[domainName] = this;
			}
			this._name = domainName;
		}
	}
};
$hxClasses["hex.domain.Domain"] = hex_domain_Domain;
hex_domain_Domain.__name__ = ["hex","domain","Domain"];
hex_domain_Domain.getDomain = function(domainName) {
	var domain = null;
	var _this = hex_domain_Domain._domains;
	if(__map_reserved[domainName] != null ? _this.existsReserved(domainName) : _this.h.hasOwnProperty(domainName)) {
		var _this1 = hex_domain_Domain._domains;
		if(__map_reserved[domainName] != null) {
			domain = _this1.getReserved(domainName);
		} else {
			domain = _this1.h[domainName];
		}
	} else {
		domain = new hex_domain_Domain(domainName);
		var _this2 = hex_domain_Domain._domains;
		if(__map_reserved[domainName] != null) {
			_this2.setReserved(domainName,domain);
		} else {
			_this2.h[domainName] = domain;
		}
		hex_domain_Domain._reparent();
	}
	return domain;
};
hex_domain_Domain._reparent = function() {
	var domains = hex_domain_Domain._domains;
	var key = domains.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		var domain = __map_reserved[key1] != null ? domains.getReserved(key1) : domains.h[key1];
		if(key1 != null && key1 != "") {
			var i = key1.lastIndexOf(".");
			if(i > 0) {
				key1 = key1.substring(0,i);
				var parent = hex_domain_Domain._getDomain(key1);
				if(parent == null) {
					parent = hex_domain_TopLevelDomain.DOMAIN;
				}
				domain._parent = parent;
			} else {
				domain._parent = hex_domain_TopLevelDomain.DOMAIN;
			}
		}
	}
};
hex_domain_Domain._getDomain = function(name) {
	var domains = hex_domain_Domain._domains;
	var domain = __map_reserved[name] != null ? domains.getReserved(name) : domains.h[name];
	if(domain != null) {
		return domain;
	}
	var substr = name;
	while(true) {
		substr = hex_domain_Domain._getSubName(substr);
		if(!(substr != null)) {
			break;
		}
		domain = __map_reserved[substr] != null ? domains.getReserved(substr) : domains.h[substr];
		if(domain != null) {
			return domain;
		}
	}
	return hex_domain_TopLevelDomain.DOMAIN;
};
hex_domain_Domain._getSubName = function(name) {
	if(name == null || name == "") {
		return null;
	}
	var i = name.lastIndexOf(".");
	if(i > 0) {
		return name.substring(0,i);
	} else {
		return "";
	}
};
hex_domain_Domain.prototype = {
	getName: function() {
		return this._name;
	}
	,getParent: function() {
		return this._parent;
	}
	,__class__: hex_domain_Domain
};
var hex_error_NullPointerException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.NullPointerException"] = hex_error_NullPointerException;
hex_error_NullPointerException.__name__ = ["hex","error","NullPointerException"];
hex_error_NullPointerException.__super__ = hex_error_Exception;
hex_error_NullPointerException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_NullPointerException
});
var hex_util_Stringifier = function() { };
$hxClasses["hex.util.Stringifier"] = hex_util_Stringifier;
hex_util_Stringifier.__name__ = ["hex","util","Stringifier"];
hex_util_Stringifier.stringify = function(target) {
	if(hex_util_Stringifier._STRATEGY == null) {
		hex_util_Stringifier._STRATEGY = new hex_util_BasicStringifierStrategy();
	}
	return hex_util_Stringifier._STRATEGY.stringify(target);
};
var hex_util_IStringifierStrategy = function() { };
$hxClasses["hex.util.IStringifierStrategy"] = hex_util_IStringifierStrategy;
hex_util_IStringifierStrategy.__name__ = ["hex","util","IStringifierStrategy"];
hex_util_IStringifierStrategy.prototype = {
	__class__: hex_util_IStringifierStrategy
};
var hex_util_BasicStringifierStrategy = function() {
};
$hxClasses["hex.util.BasicStringifierStrategy"] = hex_util_BasicStringifierStrategy;
hex_util_BasicStringifierStrategy.__name__ = ["hex","util","BasicStringifierStrategy"];
hex_util_BasicStringifierStrategy.__interfaces__ = [hex_util_IStringifierStrategy];
hex_util_BasicStringifierStrategy.prototype = {
	stringify: function(target) {
		var o = target;
		var type = o == null ? null : js_Boot.getClass(o);
		if(type != null) {
			return Type.getClassName(type);
		} else {
			return "Dynamic";
		}
	}
	,__class__: hex_util_BasicStringifierStrategy
};
var hex_error_IllegalArgumentException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.IllegalArgumentException"] = hex_error_IllegalArgumentException;
hex_error_IllegalArgumentException.__name__ = ["hex","error","IllegalArgumentException"];
hex_error_IllegalArgumentException.__super__ = hex_error_Exception;
hex_error_IllegalArgumentException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_IllegalArgumentException
});
var hex_domain_TopLevelDomain = function() { };
$hxClasses["hex.domain.TopLevelDomain"] = hex_domain_TopLevelDomain;
hex_domain_TopLevelDomain.__name__ = ["hex","domain","TopLevelDomain"];
var hex_event_IDispatcher = function() { };
$hxClasses["hex.event.IDispatcher"] = hex_event_IDispatcher;
hex_event_IDispatcher.__name__ = ["hex","event","IDispatcher"];
hex_event_IDispatcher.prototype = {
	__class__: hex_event_IDispatcher
};
var hex_event_Dispatcher = function() {
	this._isSealed = false;
	this._cachedMethodCalls = [];
	this._listeners = new haxe_ds_ObjectMap();
};
$hxClasses["hex.event.Dispatcher"] = hex_event_Dispatcher;
hex_event_Dispatcher.__name__ = ["hex","event","Dispatcher"];
hex_event_Dispatcher.__interfaces__ = [hex_event_IDispatcher];
hex_event_Dispatcher.prototype = {
	dispatch: function(messageType,data) {
		if(!this._isSealed) {
			this._seal(true);
			var parameters = null;
			var iterator = this._listeners.keys();
			while(iterator.hasNext()) {
				var listener = iterator.next();
				var m = this._listeners.h[listener.__id__];
				if(Lambda.count(m) > 0) {
					var key = messageType;
					if(__map_reserved[key] != null ? m.existsReserved(key) : m.h.hasOwnProperty(key)) {
						var key1 = messageType;
						var handler = __map_reserved[key1] != null ? m.getReserved(key1) : m.h[key1];
						handler.call(data);
					}
				} else {
					var messageName = messageType;
					var callback = Reflect.field(listener,messageName);
					if(callback != null && messageName != "handleMessage") {
						callback.apply(listener,data);
					} else {
						callback = Reflect.field(listener,"handleMessage");
						if(callback != null) {
							if(parameters == null) {
								parameters = [messageType];
								if(data != null) {
									parameters = parameters.concat(data);
								}
							}
							callback.apply(listener,parameters);
						} else {
							var msg = hex_util_Stringifier.stringify(this) + ".dispatch failed. " + " You must implement '" + messageType + "' or 'handleMessage' method in '" + hex_util_Stringifier.stringify(listener) + "' instance.";
							throw new js__$Boot_HaxeError(new hex_error_UnsupportedOperationException(msg,{ fileName : "Dispatcher.hx", lineNumber : 76, className : "hex.event.Dispatcher", methodName : "dispatch"}));
						}
					}
				}
			}
			this._seal(false);
		} else {
			var f = $bind(this,this.dispatch);
			var messageType1 = messageType;
			var data1 = data;
			var tmp = function() {
				f(messageType1,data1);
			};
			this._cachedMethodCalls.push(tmp);
		}
	}
	,_seal: function(isSealed) {
		if(isSealed != this._isSealed) {
			this._isSealed = isSealed;
			if(!this._isSealed) {
				while(this._cachedMethodCalls.length > 0) {
					var func = this._cachedMethodCalls.shift();
					func();
				}
			}
		}
	}
	,__class__: hex_event_Dispatcher
};
var hex_domain_ApplicationDomainDispatcher = function() {
	hex_domain_DomainDispatcher.call(this,hex_domain_TopLevelDomain.DOMAIN,hex_event_Dispatcher);
};
$hxClasses["hex.domain.ApplicationDomainDispatcher"] = hex_domain_ApplicationDomainDispatcher;
hex_domain_ApplicationDomainDispatcher.__name__ = ["hex","domain","ApplicationDomainDispatcher"];
hex_domain_ApplicationDomainDispatcher.__interfaces__ = [hex_domain_IApplicationDomainDispatcher];
hex_domain_ApplicationDomainDispatcher.getInstance = function() {
	return hex_domain_ApplicationDomainDispatcher._Instance;
};
hex_domain_ApplicationDomainDispatcher.__super__ = hex_domain_DomainDispatcher;
hex_domain_ApplicationDomainDispatcher.prototype = $extend(hex_domain_DomainDispatcher.prototype,{
	getDomainDispatcher: function(domain) {
		if(domain != hex_domain_NoDomain.DOMAIN) {
			return hex_domain_DomainDispatcher.prototype.getDomainDispatcher.call(this,domain);
		} else {
			return null;
		}
	}
	,__class__: hex_domain_ApplicationDomainDispatcher
});
var hex_domain_DefaultDomain = function() { };
$hxClasses["hex.domain.DefaultDomain"] = hex_domain_DefaultDomain;
hex_domain_DefaultDomain.__name__ = ["hex","domain","DefaultDomain"];
var hex_domain_DomainExpert = function() {
	this._registeredDomains = new haxe_ds_IntMap();
	this._subscribedModules = new haxe_ds_ObjectMap();
	this._removedModules = new haxe_ds_StringMap();
};
$hxClasses["hex.domain.DomainExpert"] = hex_domain_DomainExpert;
hex_domain_DomainExpert.__name__ = ["hex","domain","DomainExpert"];
hex_domain_DomainExpert.getInstance = function() {
	return hex_domain_DomainExpert._Instance;
};
hex_domain_DomainExpert.prototype = {
	getDomainFor: function(module) {
		if(this._subscribedModules.h.__keys__[module.__id__] == null) {
			if(this._registeredDomains.h.hasOwnProperty(hex_domain_DomainExpert._DomainIndex)) {
				var moduleDomain = this._registeredDomains.h[hex_domain_DomainExpert._DomainIndex];
				this._registeredDomains.remove(hex_domain_DomainExpert._DomainIndex);
				hex_domain_DomainExpert._DomainIndex++;
				var this1 = this._removedModules;
				var key = moduleDomain.getName();
				var _this = this1;
				if(__map_reserved[key] != null) {
					_this.setReserved(key,false);
				} else {
					_this.h[key] = false;
				}
				this._subscribedModules.set(module,moduleDomain);
				return moduleDomain;
			} else {
				var key1 = Type.getClassName(module == null ? null : js_Boot.getClass(module)) + hex_core_HashCodeFactory.getKey(module);
				var tmp;
				var _this1 = this._removedModules;
				if(__map_reserved[key1] != null ? _this1.existsReserved(key1) : _this1.h.hasOwnProperty(key1)) {
					var _this2 = this._removedModules;
					if(__map_reserved[key1] != null) {
						tmp = _this2.getReserved(key1);
					} else {
						tmp = _this2.h[key1];
					}
				} else {
					tmp = false;
				}
				if(tmp) {
					return null;
				} else {
					var domain = hex_domain_Domain.getDomain(key1);
					var _this3 = this._removedModules;
					if(__map_reserved[key1] != null) {
						_this3.setReserved(key1,false);
					} else {
						_this3.h[key1] = false;
					}
					this._subscribedModules.set(module,domain);
					return domain;
				}
			}
		} else {
			return this._subscribedModules.h[module.__id__];
		}
	}
	,releaseDomain: function(module) {
		if(module.get_isReleased()) {
			var key = Type.getClassName(module == null ? null : js_Boot.getClass(module)) + hex_core_HashCodeFactory.getKey(module);
			var _this = this._removedModules;
			if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
				var _this1 = this._removedModules;
				if(__map_reserved[key] != null) {
					_this1.setReserved(key,true);
				} else {
					_this1.h[key] = true;
				}
			} else {
				var this1 = this._removedModules;
				var key1 = module.getDomain().getName();
				var _this2 = this1;
				if(__map_reserved[key1] != null) {
					_this2.setReserved(key1,true);
				} else {
					_this2.h[key1] = true;
				}
			}
			this._subscribedModules.remove(module);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("Illegal call, '" + Std.string(module) + "' is not released.",{ fileName : "DomainExpert.hx", lineNumber : 92, className : "hex.domain.DomainExpert", methodName : "releaseDomain"}));
		}
	}
	,__class__: hex_domain_DomainExpert
};
var hex_domain_NoDomain = function() { };
$hxClasses["hex.domain.NoDomain"] = hex_domain_NoDomain;
hex_domain_NoDomain.__name__ = ["hex","domain","NoDomain"];
var hex_error_IllegalStateException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.IllegalStateException"] = hex_error_IllegalStateException;
hex_error_IllegalStateException.__name__ = ["hex","error","IllegalStateException"];
hex_error_IllegalStateException.__super__ = hex_error_Exception;
hex_error_IllegalStateException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_IllegalStateException
});
var hex_error_UnsupportedOperationException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.UnsupportedOperationException"] = hex_error_UnsupportedOperationException;
hex_error_UnsupportedOperationException.__name__ = ["hex","error","UnsupportedOperationException"];
hex_error_UnsupportedOperationException.__super__ = hex_error_Exception;
hex_error_UnsupportedOperationException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_UnsupportedOperationException
});
var hex_event_CallbackHandler = function() {
	this.callbacks = [];
};
$hxClasses["hex.event.CallbackHandler"] = hex_event_CallbackHandler;
hex_event_CallbackHandler.__name__ = ["hex","event","CallbackHandler"];
hex_event_CallbackHandler.prototype = {
	call: function(data) {
		var _g = 0;
		var _g1 = this.callbacks;
		while(_g < _g1.length) {
			var callback = _g1[_g];
			++_g;
			callback.apply(this.scope,data);
		}
	}
	,__class__: hex_event_CallbackHandler
};
var hex_event_IClosureDispatcher = function() { };
$hxClasses["hex.event.IClosureDispatcher"] = hex_event_IClosureDispatcher;
hex_event_IClosureDispatcher.__name__ = ["hex","event","IClosureDispatcher"];
var hex_event_ClosureDispatcher = function() {
	this._callbacks = new haxe_ds_StringMap();
	this._callbackSize = 0;
};
$hxClasses["hex.event.ClosureDispatcher"] = hex_event_ClosureDispatcher;
hex_event_ClosureDispatcher.__name__ = ["hex","event","ClosureDispatcher"];
hex_event_ClosureDispatcher.__interfaces__ = [hex_event_IClosureDispatcher];
hex_event_ClosureDispatcher.prototype = {
	dispatch: function(messageType,data) {
		var _this = this._callbacks;
		var key = messageType;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this._callbacks;
			var key1 = messageType;
			var callbacks = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]).slice();
			var _g = 0;
			while(_g < callbacks.length) {
				var f = callbacks[_g];
				++_g;
				f.apply(null,data);
			}
		}
	}
	,__class__: hex_event_ClosureDispatcher
};
var hex_log_ILoggerContext = function() { };
$hxClasses["hex.log.ILoggerContext"] = hex_log_ILoggerContext;
hex_log_ILoggerContext.__name__ = ["hex","log","ILoggerContext"];
hex_log_ILoggerContext.prototype = {
	__class__: hex_log_ILoggerContext
};
var hex_log_LoggerContext = function() {
	this.configuration = new hex_log_configuration_BasicConfiguration();
	this.loggerRegistry = new haxe_ds_StringMap();
};
$hxClasses["hex.log.LoggerContext"] = hex_log_LoggerContext;
hex_log_LoggerContext.__name__ = ["hex","log","LoggerContext"];
hex_log_LoggerContext.__interfaces__ = [hex_log_ILoggerContext];
hex_log_LoggerContext.prototype = {
	getLogger: function(name,messageFactory) {
		if(name == null) {
			name = "";
		} else {
			name = name;
		}
		var _this = this.loggerRegistry;
		if(!(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name))) {
			var logger = this.newInstance(this,name,messageFactory);
			var _this1 = this.loggerRegistry;
			if(__map_reserved[name] != null) {
				_this1.setReserved(name,logger);
			} else {
				_this1.h[name] = logger;
			}
		}
		var _this2 = this.loggerRegistry;
		if(__map_reserved[name] != null) {
			return _this2.getReserved(name);
		} else {
			return _this2.h[name];
		}
	}
	,getConfiguration: function() {
		return this.configuration;
	}
	,setConfiguration: function(newConfiguration) {
		if(newConfiguration == null) {
			return;
		}
		this.configuration = newConfiguration;
		this.updateLoggers();
	}
	,updateLoggers: function() {
		var _this = this.loggerRegistry;
		var logger = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(logger.hasNext()) {
			var logger1 = logger.next();
			logger1.updateConfiguration(this.configuration);
		}
	}
	,newInstance: function(context,name,messageFactory) {
		return new hex_log_Logger(context,name,messageFactory);
	}
	,__class__: hex_log_LoggerContext
};
var hex_log_DomainLoggerContext = function(domain) {
	hex_log_LoggerContext.call(this);
	this.domain = domain;
	this.defaultMessageFactory = new hex_log_message_DomainMessageFactory(domain);
};
$hxClasses["hex.log.DomainLoggerContext"] = hex_log_DomainLoggerContext;
hex_log_DomainLoggerContext.__name__ = ["hex","log","DomainLoggerContext"];
hex_log_DomainLoggerContext.getContext = function() {
	return hex_log_LogManager.getContext();
};
hex_log_DomainLoggerContext.__super__ = hex_log_LoggerContext;
hex_log_DomainLoggerContext.prototype = $extend(hex_log_LoggerContext.prototype,{
	newInstance: function(context,name,messageFactory) {
		if(messageFactory == null) {
			messageFactory = this.defaultMessageFactory;
		}
		return hex_log_LoggerContext.prototype.newInstance.call(this,context,name,messageFactory);
	}
	,__class__: hex_log_DomainLoggerContext
});
var hex_log_ILogger = function() { };
$hxClasses["hex.log.ILogger"] = hex_log_ILogger;
hex_log_ILogger.__name__ = ["hex","log","ILogger"];
hex_log_ILogger.prototype = {
	__class__: hex_log_ILogger
};
var hex_log_IExtendedLogger = function() { };
$hxClasses["hex.log.IExtendedLogger"] = hex_log_IExtendedLogger;
hex_log_IExtendedLogger.__name__ = ["hex","log","IExtendedLogger"];
hex_log_IExtendedLogger.__interfaces__ = [hex_log_ILogger];
var hex_log_LogEvent = function(logger,message,level,posInfos) {
	this.logger = logger;
	this.message = message;
	this.level = level;
	this.posInfos = posInfos;
};
$hxClasses["hex.log.LogEvent"] = hex_log_LogEvent;
hex_log_LogEvent.__name__ = ["hex","log","LogEvent"];
hex_log_LogEvent.prototype = {
	__class__: hex_log_LogEvent
};
var hex_log__$LogLevel_LogLevel_$Impl_$ = {};
$hxClasses["hex.log._LogLevel.LogLevel_Impl_"] = hex_log__$LogLevel_LogLevel_$Impl_$;
hex_log__$LogLevel_LogLevel_$Impl_$.__name__ = ["hex","log","_LogLevel","LogLevel_Impl_"];
hex_log__$LogLevel_LogLevel_$Impl_$._new = function(value) {
	var this1 = value;
	return this1;
};
hex_log__$LogLevel_LogLevel_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "OFF";
	case 1000:
		return "FATAL";
	case 2000:
		return "ERROR";
	case 3000:
		return "WARN";
	case 4000:
		return "INFO";
	case 5000:
		return "DEBUG";
	case 999999:
		return "ALL";
	default:
		if(this1 == null) {
			return "null";
		} else {
			return "" + this1;
		}
	}
};
hex_log__$LogLevel_LogLevel_$Impl_$.toInt = function(this1) {
	return this1;
};
hex_log__$LogLevel_LogLevel_$Impl_$.isLessSpecificThan = function(this1,level) {
	return this1 >= hex_log__$LogLevel_LogLevel_$Impl_$.toInt(level);
};
var hex_log_filter_IFilterable = function() { };
$hxClasses["hex.log.filter.IFilterable"] = hex_log_filter_IFilterable;
hex_log_filter_IFilterable.__name__ = ["hex","log","filter","IFilterable"];
var hex_log_filter_AbstractFilterable = function(filter) {
	this.filter = filter;
};
$hxClasses["hex.log.filter.AbstractFilterable"] = hex_log_filter_AbstractFilterable;
hex_log_filter_AbstractFilterable.__name__ = ["hex","log","filter","AbstractFilterable"];
hex_log_filter_AbstractFilterable.__interfaces__ = [hex_log_filter_IFilterable];
hex_log_filter_AbstractFilterable.prototype = {
	getFilter: function() {
		return this.filter;
	}
	,isFiltered: function(event) {
		if(this.filter != null) {
			return this.filter.filterEvent(event) == hex_log_filter_FilterResult.DENY;
		} else {
			return false;
		}
	}
	,__class__: hex_log_filter_AbstractFilterable
};
var hex_log_configuration_IConfiguration = function() { };
$hxClasses["hex.log.configuration.IConfiguration"] = hex_log_configuration_IConfiguration;
hex_log_configuration_IConfiguration.__name__ = ["hex","log","configuration","IConfiguration"];
hex_log_configuration_IConfiguration.__interfaces__ = [hex_log_filter_IFilterable];
hex_log_configuration_IConfiguration.prototype = {
	__class__: hex_log_configuration_IConfiguration
};
var hex_log_configuration_BasicConfiguration = function() {
	hex_log_filter_AbstractFilterable.call(this);
	this.root = hex_log_RootLogger.createLogger();
	this.root.set_level(hex_log__$LogLevel_LogLevel_$Impl_$._ERROR);
	this.loggerConfigs = new haxe_ds_StringMap();
	this.logTargets = new haxe_ds_StringMap();
};
$hxClasses["hex.log.configuration.BasicConfiguration"] = hex_log_configuration_BasicConfiguration;
hex_log_configuration_BasicConfiguration.__name__ = ["hex","log","configuration","BasicConfiguration"];
hex_log_configuration_BasicConfiguration.__interfaces__ = [hex_log_configuration_IConfiguration];
hex_log_configuration_BasicConfiguration.__super__ = hex_log_filter_AbstractFilterable;
hex_log_configuration_BasicConfiguration.prototype = $extend(hex_log_filter_AbstractFilterable.prototype,{
	addLogger: function(name,config) {
		var _this = this.loggerConfigs;
		if(!(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name))) {
			var _this1 = this.loggerConfigs;
			if(__map_reserved[name] != null) {
				_this1.setReserved(name,config);
			} else {
				_this1.h[name] = config;
			}
		}
		this.setParents();
	}
	,setParents: function() {
		var key = this.loggerConfigs.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			var _this = this.loggerConfigs;
			var logger = __map_reserved[key1] != null ? _this.getReserved(key1) : _this.h[key1];
			if(key1 != null && key1 != "") {
				var i = key1.lastIndexOf(".");
				if(i > 0) {
					key1 = key1.substring(0,i);
					var parent = this.getLoggerConfig(key1);
					if(parent == null) {
						parent = this.root;
					}
					logger.parent = parent;
				} else {
					logger.parent = this.root;
				}
			}
		}
	}
	,getLoggerConfig: function(name) {
		var _this = this.loggerConfigs;
		var config = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(config != null) {
			return config;
		}
		var substr = name;
		while(true) {
			substr = hex_log_util_NameUtil.getSubName(substr);
			if(!(substr != null)) {
				break;
			}
			var _this1 = this.loggerConfigs;
			if(__map_reserved[substr] != null) {
				config = _this1.getReserved(substr);
			} else {
				config = _this1.h[substr];
			}
			if(config != null) {
				return config;
			}
		}
		return this.root;
	}
	,getRootLogger: function() {
		return this.root;
	}
	,__class__: hex_log_configuration_BasicConfiguration
});
var hex_log_LoggerConfig = function(name,logLevel,config) {
	this.additive = true;
	hex_log_filter_AbstractFilterable.call(this);
	this.config = config;
	this.name = name;
	this.set_level(logLevel);
	this.logTargets = [];
};
$hxClasses["hex.log.LoggerConfig"] = hex_log_LoggerConfig;
hex_log_LoggerConfig.__name__ = ["hex","log","LoggerConfig"];
hex_log_LoggerConfig.__super__ = hex_log_filter_AbstractFilterable;
hex_log_LoggerConfig.prototype = $extend(hex_log_filter_AbstractFilterable.prototype,{
	set_level: function(value) {
		return this.level = value;
	}
	,get_level: function() {
		if(this.level == null) {
			return this.parent.get_level();
		} else {
			return this.level;
		}
	}
	,addLogTarget: function(logTarget,level,filter) {
		this.logTargets.push(new hex_log_LogTargetControl(logTarget,level,filter));
	}
	,log: function(event) {
		if(!this.isFiltered(event)) {
			this.processLogEvent(event);
		}
	}
	,processLogEvent: function(event) {
		this.callLogTargets(event);
		this.logParent(event);
	}
	,logParent: function(event) {
		if(this.additive && this.parent != null) {
			this.parent.log(event);
		}
	}
	,callLogTargets: function(event) {
		this.logTargets.map(function(control) {
			control.callLogTarget(event);
		});
	}
	,isFiltered: function(event) {
		var filtered = hex_log_filter_AbstractFilterable.prototype.isFiltered.call(this,event);
		if(!filtered && this.get_level() != null) {
			return this.get_level() < event.level;
		}
		return filtered;
	}
	,__class__: hex_log_LoggerConfig
	,__properties__: {set_level:"set_level",get_level:"get_level"}
});
var hex_log_RootLogger = function() { };
$hxClasses["hex.log.RootLogger"] = hex_log_RootLogger;
hex_log_RootLogger.__name__ = ["hex","log","RootLogger"];
hex_log_RootLogger.createLogger = function(level) {
	var actualLevel = level == null ? hex_log__$LogLevel_LogLevel_$Impl_$._ERROR : level;
	return new hex_log_LoggerConfig("",actualLevel);
};
hex_log_RootLogger.__super__ = hex_log_LoggerConfig;
hex_log_RootLogger.prototype = $extend(hex_log_LoggerConfig.prototype,{
	__class__: hex_log_RootLogger
});
var hex_log_LogManager = function() { };
$hxClasses["hex.log.LogManager"] = hex_log_LogManager;
hex_log_LogManager.__name__ = ["hex","log","LogManager"];
hex_log_LogManager.getLoggerByInstance = function(target,messageFactory) {
	if(target == null) {
		return hex_log_LogManager.getLogger("",messageFactory);
	}
	var type = Type.getClassName(target == null ? null : js_Boot.getClass(target));
	return hex_log_LogManager.getLogger(type != null ? type : "Dynamic",messageFactory);
};
hex_log_LogManager.getLoggerByClass = function(clss,messageFactory) {
	if(clss == null) {
		return hex_log_LogManager.getLogger("",messageFactory);
	}
	var type = Type.getClassName(clss);
	return hex_log_LogManager.getLogger(type != null ? type : "Dynamic",messageFactory);
};
hex_log_LogManager.getLogger = function(name,messageFactory) {
	if(name == null) {
		name = "";
	}
	return hex_log_LogManager.getContext().getLogger(name,messageFactory);
};
hex_log_LogManager.getContext = function(name) {
	if(hex_log_LogManager.context == null) {
		hex_log_LogManager.context = new hex_log_LoggerContext();
	}
	return hex_log_LogManager.context;
};
var hex_log_internal_AbstractLogger = function(messageFactory) {
	this.messageFactory = messageFactory == null ? hex_log_message_ParameterizedMessageFactory.get_instance() : messageFactory;
};
$hxClasses["hex.log.internal.AbstractLogger"] = hex_log_internal_AbstractLogger;
hex_log_internal_AbstractLogger.__name__ = ["hex","log","internal","AbstractLogger"];
hex_log_internal_AbstractLogger.__interfaces__ = [hex_log_IExtendedLogger];
hex_log_internal_AbstractLogger.prototype = {
	debug: function(message,params,posInfos) {
		this.logIfEnabled(hex_log__$LogLevel_LogLevel_$Impl_$._DEBUG,message,params,posInfos);
	}
	,warn: function(message,params,posInfos) {
		this.logIfEnabled(hex_log__$LogLevel_LogLevel_$Impl_$._WARN,message,params,posInfos);
	}
	,logIfEnabled: function(level,message,params,posInfos) {
		if(this.isEnabled(level,message,params,posInfos)) {
			if(typeof(message) == "string" || message == null) {
				this.logEnabledMessage(level,this.messageFactory.newMessage(message,params),posInfos);
			} else {
				this.logEnabledMessage(level,this.messageFactory.newObjectMessage(message),posInfos);
			}
		}
	}
	,logEnabledMessage: function(level,message,posInfos) {
		throw new js__$Boot_HaxeError("This method must be implemented");
	}
	,isEnabled: function(level,message,params,posInfos) {
		throw new js__$Boot_HaxeError("This method must be implemented");
	}
	,getName: function() {
		throw new js__$Boot_HaxeError("This method must be implemented");
	}
	,__class__: hex_log_internal_AbstractLogger
};
var hex_log_Logger = function(context,name,messageFactory) {
	hex_log_internal_AbstractLogger.call(this,messageFactory == null ? hex_log_message_ParameterizedMessageFactory.get_instance() : messageFactory);
	this.context = context;
	this.name = name;
	this.privateConfig = hex_log_PrivateLoggerConfig.fromConfiguration(context.getConfiguration(),this);
};
$hxClasses["hex.log.Logger"] = hex_log_Logger;
hex_log_Logger.__name__ = ["hex","log","Logger"];
hex_log_Logger.__super__ = hex_log_internal_AbstractLogger;
hex_log_Logger.prototype = $extend(hex_log_internal_AbstractLogger.prototype,{
	isEnabled: function(level,message,params,posInfos) {
		return this.privateConfig.filter(level,message,params,posInfos);
	}
	,logEnabledMessage: function(level,message,posInfos) {
		this.privateConfig.logEvent(new hex_log_LogEvent(this,message,level,posInfos));
	}
	,getName: function() {
		return this.name;
	}
	,updateConfiguration: function(config) {
		this.privateConfig = hex_log_PrivateLoggerConfig.fromConfiguration(config,this);
	}
	,__class__: hex_log_Logger
});
var hex_log_PrivateLoggerConfig = function(configuration,logger,level) {
	this.logger = logger;
	this.config = configuration;
	this.loggerConfig = configuration.getLoggerConfig(logger.getName());
	this.loggerConfigLevel = level == null ? this.loggerConfig.get_level() : level;
};
$hxClasses["hex.log.PrivateLoggerConfig"] = hex_log_PrivateLoggerConfig;
hex_log_PrivateLoggerConfig.__name__ = ["hex","log","PrivateLoggerConfig"];
hex_log_PrivateLoggerConfig.fromConfiguration = function(configuration,logger) {
	return new hex_log_PrivateLoggerConfig(configuration,logger);
};
hex_log_PrivateLoggerConfig.prototype = {
	logEvent: function(event) {
		this.loggerConfig.log(event);
	}
	,filter: function(level,message,params,posInfos) {
		var _gthis = this;
		return this.filterInternal(level,function(filter) {
			return filter.filter(_gthis.logger,level,message,params,posInfos);
		});
	}
	,filterInternal: function(level,callFilter) {
		var filter = this.config.getFilter();
		if(filter != null) {
			var r = callFilter(filter);
			if(r != hex_log_filter_FilterResult.NEUTRAL) {
				return r == hex_log_filter_FilterResult.ACCEPT;
			}
		}
		return hex_log__$LogLevel_LogLevel_$Impl_$.isLessSpecificThan(this.loggerConfigLevel,level);
	}
	,__class__: hex_log_PrivateLoggerConfig
};
var hex_log_LogTargetControl = function(logTarget,level,filter) {
	hex_log_filter_AbstractFilterable.call(this,filter);
	this.filter = filter;
	this.level = level;
	this.logTarget = logTarget;
	this.logTargetName = logTarget.getName();
};
$hxClasses["hex.log.LogTargetControl"] = hex_log_LogTargetControl;
hex_log_LogTargetControl.__name__ = ["hex","log","LogTargetControl"];
hex_log_LogTargetControl.__super__ = hex_log_filter_AbstractFilterable;
hex_log_LogTargetControl.prototype = $extend(hex_log_filter_AbstractFilterable.prototype,{
	callLogTarget: function(event) {
		if(this.shouldSkip(event)) {
			return;
		}
		this.logTarget.onLog(event);
	}
	,shouldSkip: function(event) {
		if(!this.isFilteredByAppenderControl(event)) {
			return this.isFilteredByLevel(event);
		} else {
			return true;
		}
	}
	,isFilteredByAppenderControl: function(event) {
		var filter = this.getFilter();
		if(filter != null) {
			return hex_log_filter_FilterResult.DENY == filter.filterEvent(event);
		} else {
			return false;
		}
	}
	,isFilteredByLevel: function(event) {
		if(this.level != null) {
			return this.level < event.level;
		} else {
			return false;
		}
	}
	,__class__: hex_log_LogTargetControl
});
var hex_log_TraceEverythingDomainConfiguration = function() {
	hex_log_configuration_BasicConfiguration.call(this);
	var lc = this.getRootLogger();
	var traceTarget = new hex_log_target_TraceLogTarget("Trace",null,new hex_log_layout_DomainLayout());
	this.root.set_level(hex_log__$LogLevel_LogLevel_$Impl_$._ALL);
	lc.addLogTarget(traceTarget,hex_log__$LogLevel_LogLevel_$Impl_$._ALL,null);
	this.addLogger(lc.name,lc);
};
$hxClasses["hex.log.TraceEverythingDomainConfiguration"] = hex_log_TraceEverythingDomainConfiguration;
hex_log_TraceEverythingDomainConfiguration.__name__ = ["hex","log","TraceEverythingDomainConfiguration"];
hex_log_TraceEverythingDomainConfiguration.__super__ = hex_log_configuration_BasicConfiguration;
hex_log_TraceEverythingDomainConfiguration.prototype = $extend(hex_log_configuration_BasicConfiguration.prototype,{
	__class__: hex_log_TraceEverythingDomainConfiguration
});
var hex_log_filter_IFilter = function() { };
$hxClasses["hex.log.filter.IFilter"] = hex_log_filter_IFilter;
hex_log_filter_IFilter.__name__ = ["hex","log","filter","IFilter"];
hex_log_filter_IFilter.prototype = {
	__class__: hex_log_filter_IFilter
};
var hex_log_filter_FilterResult = { __ename__ : true, __constructs__ : ["ACCEPT","NEUTRAL","DENY"] };
hex_log_filter_FilterResult.ACCEPT = ["ACCEPT",0];
hex_log_filter_FilterResult.ACCEPT.toString = $estr;
hex_log_filter_FilterResult.ACCEPT.__enum__ = hex_log_filter_FilterResult;
hex_log_filter_FilterResult.NEUTRAL = ["NEUTRAL",1];
hex_log_filter_FilterResult.NEUTRAL.toString = $estr;
hex_log_filter_FilterResult.NEUTRAL.__enum__ = hex_log_filter_FilterResult;
hex_log_filter_FilterResult.DENY = ["DENY",2];
hex_log_filter_FilterResult.DENY.toString = $estr;
hex_log_filter_FilterResult.DENY.__enum__ = hex_log_filter_FilterResult;
var hex_log_layout_ILayout = function() { };
$hxClasses["hex.log.layout.ILayout"] = hex_log_layout_ILayout;
hex_log_layout_ILayout.__name__ = ["hex","log","layout","ILayout"];
hex_log_layout_ILayout.prototype = {
	__class__: hex_log_layout_ILayout
};
var hex_log_layout_DomainLayout = function() {
};
$hxClasses["hex.log.layout.DomainLayout"] = hex_log_layout_DomainLayout;
hex_log_layout_DomainLayout.__name__ = ["hex","log","layout","DomainLayout"];
hex_log_layout_DomainLayout.__interfaces__ = [hex_log_layout_ILayout];
hex_log_layout_DomainLayout.prototype = {
	toString: function(message) {
		if(js_Boot.__instanceof(message.message,hex_log_message_IDomainMessage)) {
			return "" + (js_Boot.__cast(message.message , hex_log_message_IDomainMessage)).getDomain().getName() + " - " + message.logger.getName() + " - " + hex_log__$LogLevel_LogLevel_$Impl_$.toString(message.level) + " - " + message.message.getFormattedMessage();
		} else {
			return "" + message.logger.getName() + " - " + hex_log__$LogLevel_LogLevel_$Impl_$.toString(message.level) + " - " + message.message.getFormattedMessage();
		}
	}
	,__class__: hex_log_layout_DomainLayout
};
var hex_log_message_IMessage = function() { };
$hxClasses["hex.log.message.IMessage"] = hex_log_message_IMessage;
hex_log_message_IMessage.__name__ = ["hex","log","message","IMessage"];
hex_log_message_IMessage.prototype = {
	__class__: hex_log_message_IMessage
};
var hex_log_message_ParameterizedMessage = function(messagePattern,params) {
	this.messagePattern = messagePattern;
	this.params = params;
};
$hxClasses["hex.log.message.ParameterizedMessage"] = hex_log_message_ParameterizedMessage;
hex_log_message_ParameterizedMessage.__name__ = ["hex","log","message","ParameterizedMessage"];
hex_log_message_ParameterizedMessage.__interfaces__ = [hex_log_message_IMessage];
hex_log_message_ParameterizedMessage.prototype = {
	getFormattedMessage: function() {
		if(this.formattedMessage == null) {
			var buffer = new StringBuf();
			hex_log_message_ParameterFormatter.formatMessage(buffer,this.messagePattern,this.params);
			this.formattedMessage = buffer.b;
		}
		return this.formattedMessage;
	}
	,__class__: hex_log_message_ParameterizedMessage
};
var hex_log_message_IDomainMessage = function() { };
$hxClasses["hex.log.message.IDomainMessage"] = hex_log_message_IDomainMessage;
hex_log_message_IDomainMessage.__name__ = ["hex","log","message","IDomainMessage"];
hex_log_message_IDomainMessage.__interfaces__ = [hex_log_message_IMessage];
hex_log_message_IDomainMessage.prototype = {
	__class__: hex_log_message_IDomainMessage
};
var hex_log_message_DomainMessage = function(domain,message,params) {
	hex_log_message_ParameterizedMessage.call(this,message,params);
	this.domain = domain;
};
$hxClasses["hex.log.message.DomainMessage"] = hex_log_message_DomainMessage;
hex_log_message_DomainMessage.__name__ = ["hex","log","message","DomainMessage"];
hex_log_message_DomainMessage.__interfaces__ = [hex_log_message_IDomainMessage];
hex_log_message_DomainMessage.__super__ = hex_log_message_ParameterizedMessage;
hex_log_message_DomainMessage.prototype = $extend(hex_log_message_ParameterizedMessage.prototype,{
	getDomain: function() {
		return this.domain;
	}
	,__class__: hex_log_message_DomainMessage
});
var hex_log_message_IMessageFactory = function() { };
$hxClasses["hex.log.message.IMessageFactory"] = hex_log_message_IMessageFactory;
hex_log_message_IMessageFactory.__name__ = ["hex","log","message","IMessageFactory"];
hex_log_message_IMessageFactory.prototype = {
	__class__: hex_log_message_IMessageFactory
};
var hex_log_message_DomainMessageFactory = function(domain) {
	this.domain = domain;
};
$hxClasses["hex.log.message.DomainMessageFactory"] = hex_log_message_DomainMessageFactory;
hex_log_message_DomainMessageFactory.__name__ = ["hex","log","message","DomainMessageFactory"];
hex_log_message_DomainMessageFactory.__interfaces__ = [hex_log_message_IMessageFactory];
hex_log_message_DomainMessageFactory.prototype = {
	newMessage: function(message,params) {
		return new hex_log_message_DomainMessage(this.domain,message,params);
	}
	,newObjectMessage: function(message) {
		return new hex_log_message_DomainObjectMessage(this.domain,message);
	}
	,__class__: hex_log_message_DomainMessageFactory
};
var hex_log_message_ObjectMessage = function(obj) {
	this.obj = obj == null ? "null" : obj;
};
$hxClasses["hex.log.message.ObjectMessage"] = hex_log_message_ObjectMessage;
hex_log_message_ObjectMessage.__name__ = ["hex","log","message","ObjectMessage"];
hex_log_message_ObjectMessage.__interfaces__ = [hex_log_message_IMessage];
hex_log_message_ObjectMessage.prototype = {
	getFormattedMessage: function() {
		if(this.objString == null) {
			this.objString = Std.string(this.obj);
		}
		return this.objString;
	}
	,__class__: hex_log_message_ObjectMessage
};
var hex_log_message_DomainObjectMessage = function(domain,obj) {
	hex_log_message_ObjectMessage.call(this,obj);
	this.domain = domain;
};
$hxClasses["hex.log.message.DomainObjectMessage"] = hex_log_message_DomainObjectMessage;
hex_log_message_DomainObjectMessage.__name__ = ["hex","log","message","DomainObjectMessage"];
hex_log_message_DomainObjectMessage.__interfaces__ = [hex_log_message_IDomainMessage];
hex_log_message_DomainObjectMessage.__super__ = hex_log_message_ObjectMessage;
hex_log_message_DomainObjectMessage.prototype = $extend(hex_log_message_ObjectMessage.prototype,{
	getDomain: function() {
		return this.domain;
	}
	,__class__: hex_log_message_DomainObjectMessage
});
var hex_log_message_ParameterFormatter = function() { };
$hxClasses["hex.log.message.ParameterFormatter"] = hex_log_message_ParameterFormatter;
hex_log_message_ParameterFormatter.__name__ = ["hex","log","message","ParameterFormatter"];
hex_log_message_ParameterFormatter.formatMessage = function(buffer,messagePattern,params) {
	if(messagePattern == null || params == null) {
		buffer.b += messagePattern == null ? "null" : "" + messagePattern;
		return;
	}
	var currentArgument = 0;
	var delim = false;
	var _g1 = 0;
	var _g = messagePattern.length;
	while(_g1 < _g) {
		var i = _g1++;
		var currChar = messagePattern.charAt(i);
		if(currChar == hex_log_message_ParameterFormatter.DELIM_START) {
			delim = true;
		}
		if(!delim) {
			buffer.b += currChar == null ? "null" : "" + currChar;
		}
		if(currChar == hex_log_message_ParameterFormatter.DELIM_STOP && delim) {
			buffer.b += Std.string(Std.string(params[currentArgument++]) + "");
			delim = false;
		}
	}
};
var hex_log_message_SimpleMessageFactory = function() {
};
$hxClasses["hex.log.message.SimpleMessageFactory"] = hex_log_message_SimpleMessageFactory;
hex_log_message_SimpleMessageFactory.__name__ = ["hex","log","message","SimpleMessageFactory"];
hex_log_message_SimpleMessageFactory.__interfaces__ = [hex_log_message_IMessageFactory];
hex_log_message_SimpleMessageFactory.prototype = {
	newMessage: function(message,params) {
		return new hex_log_message_SimpleMessage(message);
	}
	,newObjectMessage: function(message) {
		return new hex_log_message_ObjectMessage(message);
	}
	,__class__: hex_log_message_SimpleMessageFactory
};
var hex_log_message_ParameterizedMessageFactory = function() {
	hex_log_message_SimpleMessageFactory.call(this);
};
$hxClasses["hex.log.message.ParameterizedMessageFactory"] = hex_log_message_ParameterizedMessageFactory;
hex_log_message_ParameterizedMessageFactory.__name__ = ["hex","log","message","ParameterizedMessageFactory"];
hex_log_message_ParameterizedMessageFactory.__properties__ = {get_instance:"get_instance"};
hex_log_message_ParameterizedMessageFactory.get_instance = function() {
	if(hex_log_message_ParameterizedMessageFactory.instance == null) {
		hex_log_message_ParameterizedMessageFactory.instance = new hex_log_message_ParameterizedMessageFactory();
	}
	return hex_log_message_ParameterizedMessageFactory.instance;
};
hex_log_message_ParameterizedMessageFactory.__super__ = hex_log_message_SimpleMessageFactory;
hex_log_message_ParameterizedMessageFactory.prototype = $extend(hex_log_message_SimpleMessageFactory.prototype,{
	newMessage: function(message,params) {
		return new hex_log_message_ParameterizedMessage(message,params);
	}
	,__class__: hex_log_message_ParameterizedMessageFactory
});
var hex_log_message_SimpleMessage = function(message) {
	this.message = message;
};
$hxClasses["hex.log.message.SimpleMessage"] = hex_log_message_SimpleMessage;
hex_log_message_SimpleMessage.__name__ = ["hex","log","message","SimpleMessage"];
hex_log_message_SimpleMessage.__interfaces__ = [hex_log_message_IMessage];
hex_log_message_SimpleMessage.prototype = {
	getFormattedMessage: function() {
		return this.message;
	}
	,__class__: hex_log_message_SimpleMessage
};
var hex_log_target_ILogTarget = function() { };
$hxClasses["hex.log.target.ILogTarget"] = hex_log_target_ILogTarget;
hex_log_target_ILogTarget.__name__ = ["hex","log","target","ILogTarget"];
hex_log_target_ILogTarget.prototype = {
	__class__: hex_log_target_ILogTarget
};
var hex_log_target_AbstractLogTarget = function(name,filter,layout) {
	hex_log_filter_AbstractFilterable.call(this,filter);
	this.name = name;
	this.layout = layout;
};
$hxClasses["hex.log.target.AbstractLogTarget"] = hex_log_target_AbstractLogTarget;
hex_log_target_AbstractLogTarget.__name__ = ["hex","log","target","AbstractLogTarget"];
hex_log_target_AbstractLogTarget.__interfaces__ = [hex_log_target_ILogTarget];
hex_log_target_AbstractLogTarget.__super__ = hex_log_filter_AbstractFilterable;
hex_log_target_AbstractLogTarget.prototype = $extend(hex_log_filter_AbstractFilterable.prototype,{
	onLog: function(message) {
		if(!this.isFiltered(message)) {
			this.logInternal(message);
		}
	}
	,logInternal: function(message) {
		throw new js__$Boot_HaxeError("logInternal must be implemented!");
	}
	,getLayout: function() {
		return this.layout;
	}
	,getName: function() {
		return this.name;
	}
	,__class__: hex_log_target_AbstractLogTarget
});
var hex_log_target_TraceLogTarget = function(name,filter,layout) {
	hex_log_target_AbstractLogTarget.call(this,name,filter,layout);
};
$hxClasses["hex.log.target.TraceLogTarget"] = hex_log_target_TraceLogTarget;
hex_log_target_TraceLogTarget.__name__ = ["hex","log","target","TraceLogTarget"];
hex_log_target_TraceLogTarget.__super__ = hex_log_target_AbstractLogTarget;
hex_log_target_TraceLogTarget.prototype = $extend(hex_log_target_AbstractLogTarget.prototype,{
	logInternal: function(message) {
		haxe_Log.trace(this.getLayout().toString(message),message.posInfos);
	}
	,__class__: hex_log_target_TraceLogTarget
});
var hex_log_util_NameUtil = function() { };
$hxClasses["hex.log.util.NameUtil"] = hex_log_util_NameUtil;
hex_log_util_NameUtil.__name__ = ["hex","log","util","NameUtil"];
hex_log_util_NameUtil.getSubName = function(name) {
	if(name == null || name == "") {
		return null;
	}
	var i = name.lastIndexOf(".");
	if(i > 0) {
		return name.substring(0,i);
	} else {
		return "";
	}
};
var hex_metadata_IAnnotationProvider = function() { };
$hxClasses["hex.metadata.IAnnotationProvider"] = hex_metadata_IAnnotationProvider;
hex_metadata_IAnnotationProvider.__name__ = ["hex","metadata","IAnnotationProvider"];
hex_metadata_IAnnotationProvider.prototype = {
	__class__: hex_metadata_IAnnotationProvider
};
var hex_metadata_AnnotationProvider = function(domain,parent) {
	this._domain = domain;
	this._parent = parent;
	this._cache = new hex_collection_HashMap();
	this._metadata = new haxe_ds_StringMap();
	this._instances = new haxe_ds_StringMap();
};
$hxClasses["hex.metadata.AnnotationProvider"] = hex_metadata_AnnotationProvider;
hex_metadata_AnnotationProvider.__name__ = ["hex","metadata","AnnotationProvider"];
hex_metadata_AnnotationProvider.__interfaces__ = [hex_metadata_IAnnotationProvider,hex_di_IInjectorListener];
hex_metadata_AnnotationProvider.getAnnotationProvider = function(domain,parentDomain) {
	if(!hex_metadata_AnnotationProvider._initialized) {
		hex_metadata_AnnotationProvider._initialized = true;
		var provider = new hex_metadata_AnnotationProvider(hex_domain_TopLevelDomain.DOMAIN,null);
		hex_metadata_AnnotationProvider._Domains.set(hex_domain_TopLevelDomain.DOMAIN,provider);
	}
	if(domain == null) {
		domain = hex_domain_TopLevelDomain.DOMAIN;
	}
	if(parentDomain == null && domain != hex_domain_TopLevelDomain.DOMAIN) {
		parentDomain = domain.getParent();
	}
	if(hex_metadata_AnnotationProvider._Domains.h.__keys__[domain.__id__] == null) {
		hex_metadata_AnnotationProvider._Domains.set(domain,new hex_metadata_AnnotationProvider(domain,hex_metadata_AnnotationProvider._Domains.h[parentDomain.__id__]));
	}
	return hex_metadata_AnnotationProvider._Domains.h[domain.__id__];
};
hex_metadata_AnnotationProvider.prototype = {
	_do: function(instance,property) {
		var metaDataName = property.metaDataName;
		var _this = this._metadata;
		if(__map_reserved[metaDataName] != null ? _this.existsReserved(metaDataName) : _this.h.hasOwnProperty(metaDataName)) {
			var _this1 = this._metadata;
			var providerMethod = __map_reserved[metaDataName] != null ? _this1.getReserved(metaDataName) : _this1.h[metaDataName];
			Reflect.setProperty(instance,property.propertyName,providerMethod(property.metaDataValue));
		} else {
			var instanceVO = new hex_metadata__$AnnotationProvider_InstanceVO(instance,property.propertyName,property.metaDataName,property.metaDataValue);
			var _this2 = this._instances;
			if(__map_reserved[metaDataName] != null ? _this2.existsReserved(metaDataName) : _this2.h.hasOwnProperty(metaDataName)) {
				var _this3 = this._instances;
				(__map_reserved[metaDataName] != null ? _this3.getReserved(metaDataName) : _this3.h[metaDataName]).push(instanceVO);
			} else {
				var _this4 = this._instances;
				var value = [instanceVO];
				if(__map_reserved[metaDataName] != null) {
					_this4.setReserved(metaDataName,value);
				} else {
					_this4.h[metaDataName] = value;
				}
			}
			if(this._parent != null) {
				this._parent._do(instance,property);
			}
		}
	}
	,parse: function(instance) {
		var classMetaDataVO = this._parse(instance);
		if(classMetaDataVO != null) {
			var properties = classMetaDataVO.properties;
			var _g = 0;
			while(_g < properties.length) {
				var property = properties[_g];
				++_g;
				this._do(instance,property);
			}
		}
	}
	,_parse: function(object) {
		var classMetaDataVO = null;
		var classReference = object == null ? null : js_Boot.getClass(object);
		if(classReference != null) {
			if(this._cache.containsKey(classReference)) {
				classMetaDataVO = this._cache.get(classReference);
			} else {
				classMetaDataVO = new hex_metadata__$AnnotationProvider_ClassMetaDataVO();
				var properties = classMetaDataVO.properties;
				var metadata = haxe_rtti_Meta.getFields(classReference);
				var fields = Reflect.fields(metadata);
				var _g = 0;
				while(_g < fields.length) {
					var propertyName = fields[_g];
					++_g;
					var o = Reflect.field(metadata,propertyName);
					var f = Reflect.fields(o);
					if(f != null) {
						var metaDataName = f[0];
						if(metaDataName != null) {
							var field = Reflect.field(o,metaDataName);
							if(field != null) {
								var metaDataValue = field[0];
								properties.push(new hex_metadata__$AnnotationProvider_PropertyMetaDataVO(propertyName,metaDataName,metaDataValue));
							}
						}
					}
				}
				this._cache.put(classReference,classMetaDataVO);
			}
		}
		return classMetaDataVO;
	}
	,onPreConstruct: function(target,instance,instanceType) {
		if(js_Boot.__instanceof(instance,hex_core_IAnnotationParsable)) {
			this.parse(instance);
		}
	}
	,onPostConstruct: function(target,instance,instanceType) {
	}
	,registerInjector: function(injector) {
		injector.addListener(this);
	}
	,unregisterInjector: function(injector) {
		injector.removeListener(this);
	}
	,__class__: hex_metadata_AnnotationProvider
};
var hex_metadata__$AnnotationProvider_ClassMetaDataVO = function() {
	this.properties = [];
};
$hxClasses["hex.metadata._AnnotationProvider.ClassMetaDataVO"] = hex_metadata__$AnnotationProvider_ClassMetaDataVO;
hex_metadata__$AnnotationProvider_ClassMetaDataVO.__name__ = ["hex","metadata","_AnnotationProvider","ClassMetaDataVO"];
hex_metadata__$AnnotationProvider_ClassMetaDataVO.prototype = {
	__class__: hex_metadata__$AnnotationProvider_ClassMetaDataVO
};
var hex_metadata__$AnnotationProvider_PropertyMetaDataVO = function(propertyName,metaDataName,metaDataValue) {
	this.propertyName = propertyName;
	this.metaDataName = metaDataName;
	this.metaDataValue = metaDataValue;
};
$hxClasses["hex.metadata._AnnotationProvider.PropertyMetaDataVO"] = hex_metadata__$AnnotationProvider_PropertyMetaDataVO;
hex_metadata__$AnnotationProvider_PropertyMetaDataVO.__name__ = ["hex","metadata","_AnnotationProvider","PropertyMetaDataVO"];
hex_metadata__$AnnotationProvider_PropertyMetaDataVO.prototype = {
	__class__: hex_metadata__$AnnotationProvider_PropertyMetaDataVO
};
var hex_metadata__$AnnotationProvider_InstanceVO = function(owner,propertyName,metaDataName,metaDataValue) {
	this.owner = owner;
	this.propertyName = propertyName;
	this.metaDataName = metaDataName;
	this.metaDataValue = metaDataValue;
};
$hxClasses["hex.metadata._AnnotationProvider.InstanceVO"] = hex_metadata__$AnnotationProvider_InstanceVO;
hex_metadata__$AnnotationProvider_InstanceVO.__name__ = ["hex","metadata","_AnnotationProvider","InstanceVO"];
hex_metadata__$AnnotationProvider_InstanceVO.prototype = {
	__class__: hex_metadata__$AnnotationProvider_InstanceVO
};
var hex_module_ContextModule = function() {
	this._injector = new hex_di_Injector();
	this._injector.mapToValue(hex_di_IBasicInjector,this._injector);
	this._injector.mapToValue(hex_di_IDependencyInjector,this._injector);
	this._annotationProvider = hex_metadata_AnnotationProvider.getAnnotationProvider(this.getDomain());
	this._annotationProvider.registerInjector(this._injector);
	this._injector.mapToValue(hex_module_IContextModule,this);
	var factory = new hex_log_message_DomainMessageFactory(this.getDomain());
	this._logger = hex_log_LogManager.getLoggerByInstance(this,factory);
	var _this = this._injector.map(hex_log_ILogger);
	var provider = new hex_di_provider_DomainLoggerProvider(factory,this._logger);
	if(_this.provider != null) {
		hex_log_LogManager.getLogger("hex.di.mapping.InjectionMapping").warn("Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.",null,{ fileName : "InjectionMapping.hx", lineNumber : 59, className : "hex.di.mapping.InjectionMapping", methodName : "toProvider"});
	}
	_this.provider = provider;
};
$hxClasses["hex.module.ContextModule"] = hex_module_ContextModule;
hex_module_ContextModule.__name__ = ["hex","module","ContextModule"];
hex_module_ContextModule.__interfaces__ = [hex_module_IContextModule];
hex_module_ContextModule.prototype = {
	initialize: function() {
		if(!this.get_isInitialized()) {
			this._onInitialisation();
			this.isInitialized = true;
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("initialize can't be called more than once. Check your code.",{ fileName : "ContextModule.hx", lineNumber : 62, className : "hex.module.ContextModule", methodName : "initialize"}));
		}
	}
	,get_isInitialized: function() {
		return this.isInitialized;
	}
	,get_isReleased: function() {
		return this.isReleased;
	}
	,getDomain: function() {
		return hex_domain_DomainExpert.getInstance().getDomainFor(this);
	}
	,release: function() {
		if(!this.get_isReleased()) {
			this.isReleased = true;
			this._onRelease();
			hex_domain_DomainExpert.getInstance().releaseDomain(this);
			this._annotationProvider.unregisterInjector(this._injector);
			this._injector.destroyInstance(this);
			this._injector.teardown();
			this._logger = null;
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException(Std.string(this) + ".release can't be called more than once. Check your code.",{ fileName : "ContextModule.hx", lineNumber : 118, className : "hex.module.ContextModule", methodName : "release"}));
		}
	}
	,getInjector: function() {
		return this._injector;
	}
	,_onInitialisation: function() {
	}
	,_onRelease: function() {
	}
	,_get: function(type,name) {
		if(name == null) {
			name = "";
		}
		return this._injector.getInstance(type,name);
	}
	,_map: function(tInterface,tClass,name,asSingleton) {
		if(asSingleton == null) {
			asSingleton = false;
		}
		if(name == null) {
			name = "";
		}
		if(asSingleton) {
			this._injector.mapToSingleton(tInterface,tClass != null ? tClass : tInterface,name);
		} else {
			this._injector.mapToType(tInterface,tClass != null ? tClass : tInterface,name);
		}
	}
	,__class__: hex_module_ContextModule
	,__properties__: {get_isReleased:"get_isReleased",get_isInitialized:"get_isInitialized"}
};
var hex_runtime_ApplicationAssembler = function() {
	this._mContextFactories = new haxe_ds_ObjectMap();
	this._mApplicationContext = new haxe_ds_StringMap();
};
$hxClasses["hex.runtime.ApplicationAssembler"] = hex_runtime_ApplicationAssembler;
hex_runtime_ApplicationAssembler.__name__ = ["hex","runtime","ApplicationAssembler"];
hex_runtime_ApplicationAssembler.__interfaces__ = [hex_core_IApplicationAssembler];
hex_runtime_ApplicationAssembler.prototype = {
	getFactory: function(factoryClass,applicationContext) {
		var contextFactory = null;
		if(this._mContextFactories.h.__keys__[applicationContext.__id__] != null) {
			contextFactory = this._mContextFactories.h[applicationContext.__id__];
		} else {
			contextFactory = Type.createInstance(factoryClass,[]);
			contextFactory.init(applicationContext);
			this._mContextFactories.set(applicationContext,contextFactory);
		}
		return contextFactory;
	}
	,buildEverything: function() {
		var itFactory = this._mContextFactories.iterator();
		var _g = [];
		while(itFactory.hasNext()) _g.push(itFactory.next());
		var contextFactories = _g;
		contextFactories.map(function(factory) {
			factory.finalize();
		});
	}
	,release: function() {
		var itFactory = this._mContextFactories.iterator();
		while(itFactory.hasNext()) itFactory.next().dispose();
		var _this = this._mApplicationContext;
		var itContext = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(itContext.hasNext()) itContext.next().release();
		this._mApplicationContext = new haxe_ds_StringMap();
		this._mContextFactories = new haxe_ds_ObjectMap();
	}
	,getApplicationContext: function(applicationContextName,applicationContextClass) {
		var applicationContext = null;
		var _this = this._mApplicationContext;
		if(__map_reserved[applicationContextName] != null ? _this.existsReserved(applicationContextName) : _this.h.hasOwnProperty(applicationContextName)) {
			var _this1 = this._mApplicationContext;
			applicationContext = __map_reserved[applicationContextName] != null ? _this1.getReserved(applicationContextName) : _this1.h[applicationContextName];
		} else {
			applicationContext = Type.createInstance(applicationContextClass,[applicationContextName]);
			var _this2 = this._mApplicationContext;
			if(__map_reserved[applicationContextName] != null) {
				_this2.setReserved(applicationContextName,applicationContext);
			} else {
				_this2.h[applicationContextName] = applicationContext;
			}
		}
		return applicationContext;
	}
	,__class__: hex_runtime_ApplicationAssembler
};
var hex_runtime_basic_ApplicationContext = function(applicationContextName) {
	var domain = hex_domain_Domain.getDomain(applicationContextName);
	this._dispatcher = hex_domain_ApplicationDomainDispatcher.getInstance().getDomainDispatcher(domain);
	var injector = new hex_di_Injector();
	injector.mapToValue(hex_di_IBasicInjector,injector);
	injector.mapToValue(hex_di_IDependencyInjector,injector);
	var logger = hex_log_LogManager.getLogger(domain.getName());
	injector.mapToValue(hex_log_ILogger,logger);
	var coreFactory = new hex_runtime_basic_CoreFactory(injector);
	injector.mapToValue(hex_core_IApplicationContext,this);
	injector.mapToValue(hex_module_IContextModule,this);
	coreFactory.register(applicationContextName,this);
	hex_core_AbstractApplicationContext.call(this,coreFactory,applicationContextName);
	coreFactory.getInjector().mapClassNameToValue("hex.event.IDispatcher<{}>",this._dispatcher);
};
$hxClasses["hex.runtime.basic.ApplicationContext"] = hex_runtime_basic_ApplicationContext;
hex_runtime_basic_ApplicationContext.__name__ = ["hex","runtime","basic","ApplicationContext"];
hex_runtime_basic_ApplicationContext.__super__ = hex_core_AbstractApplicationContext;
hex_runtime_basic_ApplicationContext.prototype = $extend(hex_core_AbstractApplicationContext.prototype,{
	dispatch: function(messageType,data) {
		this._dispatcher.dispatch(messageType,data);
	}
	,getLogger: function() {
		return this.getInjector().getInstance(hex_log_ILogger);
	}
	,__class__: hex_runtime_basic_ApplicationContext
});
var hex_runtime_basic_IRunTimeCoreFactory = function() { };
$hxClasses["hex.runtime.basic.IRunTimeCoreFactory"] = hex_runtime_basic_IRunTimeCoreFactory;
hex_runtime_basic_IRunTimeCoreFactory.__name__ = ["hex","runtime","basic","IRunTimeCoreFactory"];
hex_runtime_basic_IRunTimeCoreFactory.__interfaces__ = [hex_core_ICoreFactory];
var hex_runtime_basic_CoreFactory = function(injector) {
	this._injector = injector;
	this._dispatcher = new hex_event_ClosureDispatcher();
	this._map = new haxe_ds_StringMap();
	this._classPaths = new haxe_ds_StringMap();
	this.addProxyFactoryMethod("hex.event.MessageType",this,$bind(this,this._makeMessageType));
};
$hxClasses["hex.runtime.basic.CoreFactory"] = hex_runtime_basic_CoreFactory;
hex_runtime_basic_CoreFactory.__name__ = ["hex","runtime","basic","CoreFactory"];
hex_runtime_basic_CoreFactory.__interfaces__ = [hex_runtime_basic_IRunTimeCoreFactory];
hex_runtime_basic_CoreFactory.prototype = {
	_makeMessageType: function(s) {
		return s;
	}
	,register: function(key,element) {
		var _this = this._map;
		if(!(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key))) {
			var _this1 = this._map;
			var value = element;
			if(__map_reserved[key] != null) {
				_this1.setReserved(key,value);
			} else {
				_this1.h[key] = value;
			}
			this._dispatcher.dispatch("onRegister",[key,element]);
			return true;
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("register fails, key is already registered.",{ fileName : "CoreFactory.hx", lineNumber : 120, className : "hex.runtime.basic.CoreFactory", methodName : "register"}));
		}
	}
	,getInjector: function() {
		return this._injector;
	}
	,addProxyFactoryMethod: function(classPath,scope,factoryMethod) {
		var _this = this._classPaths;
		if(!(__map_reserved[classPath] != null ? _this.existsReserved(classPath) : _this.h.hasOwnProperty(classPath))) {
			var _this1 = this._classPaths;
			var value = { scope : scope, factoryMethod : factoryMethod};
			if(__map_reserved[classPath] != null) {
				_this1.setReserved(classPath,value);
			} else {
				_this1.h[classPath] = value;
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("registerClassPath(" + classPath + ", " + Std.string(factoryMethod) + ") fails, classPath is already registered.",{ fileName : "CoreFactory.hx", lineNumber : 339, className : "hex.runtime.basic.CoreFactory", methodName : "addProxyFactoryMethod"}));
		}
	}
	,__class__: hex_runtime_basic_CoreFactory
};
var hex_util_ArrayUtil = function() { };
$hxClasses["hex.util.ArrayUtil"] = hex_util_ArrayUtil;
hex_util_ArrayUtil.__name__ = ["hex","util","ArrayUtil"];
hex_util_ArrayUtil.indexOf = function(a,element) {
	return a.indexOf(element);
};
var hex_util_ClassUtil = function() { };
$hxClasses["hex.util.ClassUtil"] = hex_util_ClassUtil;
hex_util_ClassUtil.__name__ = ["hex","util","ClassUtil"];
hex_util_ClassUtil.getClassName = function(target) {
	var type = Type.getClassName(target == null ? null : js_Boot.getClass(target));
	if(type != null) {
		return type;
	} else {
		return "Dynamic";
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		if(s.length == 0) {
			var key = "_hx_" + Math.random();
			s.setItem(key,key);
			s.removeItem(key);
		}
		return s;
	} catch( e ) {
		return null;
	}
};
var js_Template = function() {
	this.completedCount = new haxe_Template("::if (completedCount>0)::Clear completed::end::");
	this.activeItems = new haxe_Template("<strong>::activeItems::</strong> item::if (activeItems>1)::s::end:: left");
	this.items = new haxe_Template("::foreach items::" + "<li data-id=\"::id::\" class=\"::if completed::completed::end::\">" + "<div class=\"view\">" + "<input class=\"toggle\" type=\"checkbox\" ::if completed::checked::end::>" + "<label>::title::</label>" + "<button class=\"destroy\"></button>" + "</div>" + "</li>" + "::end::");
};
$hxClasses["js.Template"] = js_Template;
js_Template.__name__ = ["js","Template"];
js_Template.prototype = {
	__class__: js_Template
};
var todomvc_view_ITodoView = function() { };
$hxClasses["todomvc.view.ITodoView"] = todomvc_view_ITodoView;
todomvc_view_ITodoView.__name__ = ["todomvc","view","ITodoView"];
todomvc_view_ITodoView.__interfaces__ = [common_ITodoConnection,common_IFilterConnection];
var js_TodoViewJS = function(main) {
	this._qs = ($_=window.document,$bind($_,$_.querySelector));
	this._main = main;
	this._template = new js_Template();
	var document = window.document;
	this._todoList = document.querySelector(".todo-list");
	this._todoItemCounter = document.querySelector(".todo-count");
	this._clearCompleted = document.querySelector(".clear-completed");
	this._footer = document.querySelector(".footer");
	this._toggleAll = document.querySelector(".toggle-all");
	this._newTodo = document.querySelector(".new-todo");
	this.onChangeFooterVisibility(false);
};
$hxClasses["js.TodoViewJS"] = js_TodoViewJS;
js_TodoViewJS.__name__ = ["js","TodoViewJS"];
js_TodoViewJS.__interfaces__ = [todomvc_view_ITodoView];
js_TodoViewJS.prototype = {
	_do: function() {
		var _gthis = this;
		this.logger.debug("{}()",["_do"],{ fileName : "TodoViewJS.hx", lineNumber : 50, className : "js.TodoViewJS", methodName : "_do"});
		$(function() {
			_gthis._initJQuery();
		});
	}
	,_initJQuery: function() {
		this.logger.debug("{}()",["_initJQuery"],{ fileName : "TodoViewJS.hx", lineNumber : 55, className : "js.TodoViewJS", methodName : "_initJQuery"});
		$(window).on("hashchange",null,$bind(this,this._onHashChange));
		$(this._newTodo).on("change",null,$bind(this,this._onNewTodo));
		$(this._clearCompleted).on("click",null,$bind(this,this._onClearCompleted));
		$(this._toggleAll).on("click",null,$bind(this,this._onToggleAll));
		$(this._todoList).delegate("li label","dblclick",$bind(this,this._onEditItem));
		$(this._todoList).delegate(".destroy","click",$bind(this,this._onRemoveItem));
		$(this._todoList).delegate(".toggle","click",$bind(this,this._onToggleComplete));
		$(this._todoList).delegate("li .edit","keypress",$bind(this,this._onItemKeyPress));
		$(this._todoList).delegate("li .edit","keyup",$bind(this,this._onCancelItemEdition));
		$(window).on("hashchange",null,$bind(this,this._onHashChange));
	}
	,_onHashChange: function(e) {
		this.logger.debug("{}(e='{}')",["_onHashChange",e],{ fileName : "TodoViewJS.hx", lineNumber : 72, className : "js.TodoViewJS", methodName : "_onHashChange"});
		var location = e.target.location.hash;
		var route = location.split("/")[1];
		var filter;
		switch(route) {
		case "active":
			filter = common_Filter.ACTIVE;
			break;
		case "completed":
			filter = common_Filter.COMPLETED;
			break;
		default:
			filter = common_Filter.ALL;
		}
		this._controller.setFilter(filter);
	}
	,_onNewTodo: function(e) {
		this.logger.debug("{}(e='{}')",["_onNewTodo",e],{ fileName : "TodoViewJS.hx", lineNumber : 86, className : "js.TodoViewJS", methodName : "_onNewTodo"});
		this._controller.addItem(e.target.value);
	}
	,_onClearCompleted: function(e) {
		this.logger.debug("{}(e='{}')",["_onClearCompleted",e],{ fileName : "TodoViewJS.hx", lineNumber : 91, className : "js.TodoViewJS", methodName : "_onClearCompleted"});
		this._controller.removeCompletedItems();
	}
	,_onToggleAll: function(e) {
		this.logger.debug("{}(e='{}')",["_onToggleAll",e],{ fileName : "TodoViewJS.hx", lineNumber : 96, className : "js.TodoViewJS", methodName : "_onToggleAll"});
		this._controller.toggleAll(e.target.checked);
	}
	,_onEditItem: function(e) {
		this.logger.debug("{}(e='{}')",["_onEditItem",e],{ fileName : "TodoViewJS.hx", lineNumber : 101, className : "js.TodoViewJS", methodName : "_onEditItem"});
		this._controller.editItem(this._itemID(e.target));
	}
	,_onRemoveItem: function(e) {
		this.logger.debug("{}(e='{}')",["_onRemoveItem",e],{ fileName : "TodoViewJS.hx", lineNumber : 106, className : "js.TodoViewJS", methodName : "_onRemoveItem"});
		this._controller.removeItem(this._itemID(e.target));
	}
	,_onToggleComplete: function(e) {
		this.logger.debug("{}(e='{}')",["_onToggleComplete",e],{ fileName : "TodoViewJS.hx", lineNumber : 111, className : "js.TodoViewJS", methodName : "_onToggleComplete"});
		this._controller.toggleComplete(this._itemID(e.target),e.target.checked);
	}
	,_onItemKeyPress: function(e) {
		this.logger.debug("{}(e='{}')",["_onItemKeyPress",e],{ fileName : "TodoViewJS.hx", lineNumber : 116, className : "js.TodoViewJS", methodName : "_onItemKeyPress"});
		if(e.keyCode == 13) {
			var li = e.target;
			li.blur();
			this._controller.editItemSave($(li).parent().attr("data-id"),"" + li.value);
		}
	}
	,_onCancelItemEdition: function(e) {
		this.logger.debug("{}(e='{}')",["_onCancelItemEdition",e],{ fileName : "TodoViewJS.hx", lineNumber : 126, className : "js.TodoViewJS", methodName : "_onCancelItemEdition"});
		if(e.keyCode == 27) {
			var li = e.target;
			li.blur();
			this._controller.editItemCancel($(li).parent().attr("data-id"));
		}
	}
	,selectAllFilterButton: function() {
		this.logger.debug("{}()",["selectAllFilterButton"],{ fileName : "TodoViewJS.hx", lineNumber : 139, className : "js.TodoViewJS", methodName : "selectAllFilterButton"});
		this._setFilter("");
	}
	,selectActiveFilterButton: function() {
		this.logger.debug("{}()",["selectActiveFilterButton"],{ fileName : "TodoViewJS.hx", lineNumber : 144, className : "js.TodoViewJS", methodName : "selectActiveFilterButton"});
		this._setFilter("active");
	}
	,selectCompletedFilterButton: function() {
		this.logger.debug("{}()",["selectCompletedFilterButton"],{ fileName : "TodoViewJS.hx", lineNumber : 149, className : "js.TodoViewJS", methodName : "selectCompletedFilterButton"});
		this._setFilter("completed");
	}
	,onShowEntries: function(entries) {
		this.logger.debug("{}(entries='{}')",["onShowEntries",entries],{ fileName : "TodoViewJS.hx", lineNumber : 154, className : "js.TodoViewJS", methodName : "onShowEntries"});
		this._todoList.innerHTML = this._template.items.execute({ items : entries});
	}
	,onRemoveItem: function(id) {
		this.logger.debug("{}(id='{}')",["onRemoveItem",id],{ fileName : "TodoViewJS.hx", lineNumber : 159, className : "js.TodoViewJS", methodName : "onRemoveItem"});
		var elem = this._qs("[data-id=\"" + id + "\"]");
		if(elem != null) {
			this._todoList.removeChild(elem);
		}
	}
	,onUpdateItemCount: function(activeItems) {
		this.logger.debug("{}(activeItems='{}')",["onUpdateItemCount",activeItems],{ fileName : "TodoViewJS.hx", lineNumber : 169, className : "js.TodoViewJS", methodName : "onUpdateItemCount"});
		this._todoItemCounter.innerHTML = this._template.activeItems.execute({ activeItems : activeItems});
	}
	,onClearCompletedButton: function(completedCount,visible) {
		this.logger.debug("{}(completedCount='{}', visible='{}')",["onClearCompletedButton",completedCount,visible],{ fileName : "TodoViewJS.hx", lineNumber : 174, className : "js.TodoViewJS", methodName : "onClearCompletedButton"});
		this._clearCompleted.innerHTML = this._template.completedCount.execute({ completedCount : completedCount});
		this._clearCompleted.style.display = visible ? "block" : "none";
	}
	,onChangeFooterVisibility: function(isVisible) {
		this._main.style.display = this._footer.style.display = isVisible ? "block" : "none";
	}
	,onToggleAll: function(isChecked) {
		this.logger.debug("{}(isChecked='{}')",["onToggleAll",isChecked],{ fileName : "TodoViewJS.hx", lineNumber : 185, className : "js.TodoViewJS", methodName : "onToggleAll"});
		this._toggleAll.checked = isChecked;
	}
	,onClearNewTodo: function() {
		this.logger.debug("{}()",["onClearNewTodo"],{ fileName : "TodoViewJS.hx", lineNumber : 190, className : "js.TodoViewJS", methodName : "onClearNewTodo"});
		this._newTodo.value = "";
	}
	,onSetItemCompleted: function(id,isCompleted) {
		this.logger.debug("{}(id='{}', isCompleted='{}')",["onSetItemCompleted",id,isCompleted],{ fileName : "TodoViewJS.hx", lineNumber : 195, className : "js.TodoViewJS", methodName : "onSetItemCompleted"});
		var item = this._qs("[data-id=\"" + id + "\"]");
		if(item != null) {
			item.className = isCompleted ? "completed" : "";
			var input = item.querySelector("input");
			input.checked = isCompleted;
		}
	}
	,onEditItem: function(id,title) {
		this.logger.debug("{}(id='{}', title='{}')",["onEditItem",id,title],{ fileName : "TodoViewJS.hx", lineNumber : 207, className : "js.TodoViewJS", methodName : "onEditItem"});
		var item = this._qs("[data-id=\"" + id + "\"]");
		if(item != null) {
			item.className += " editing";
			var input = window.document.createElement("input");
			input.className = "edit";
			item.appendChild(input);
			input.focus();
			input.value = title;
		}
	}
	,onEditItemDone: function(id,title) {
		this.logger.debug("{}(id='{}', title='{}')",["onEditItemDone",id,title],{ fileName : "TodoViewJS.hx", lineNumber : 222, className : "js.TodoViewJS", methodName : "onEditItemDone"});
		var item = this._qs("[data-id=\"" + id + "\"]");
		if(item != null) {
			var input = item.querySelector("input.edit");
			item.removeChild(input);
			item.className = item.className.split("editing").join("");
			var list = item.querySelectorAll("label");
			var _g = 0;
			while(_g < list.length) {
				var label = list[_g];
				++_g;
				label.textContent = title;
			}
		}
	}
	,changeFilter: function(currentFilter) {
		this.logger.debug("{}(currentFilter='{}')",["changeFilter",currentFilter],{ fileName : "TodoViewJS.hx", lineNumber : 240, className : "js.TodoViewJS", methodName : "changeFilter"});
		switch(currentFilter[1]) {
		case 0:
			this.selectAllFilterButton();
			var f = $bind(this,this.onShowEntries);
			var tmp = function(entries) {
				f(entries);
			};
			this._controller.showAll().onComplete(tmp);
			break;
		case 1:
			this.selectActiveFilterButton();
			var f1 = $bind(this,this.onShowEntries);
			var tmp1 = function(entries1) {
				f1(entries1);
			};
			this._controller.showActive().onComplete(tmp1);
			break;
		case 2:
			this.selectCompletedFilterButton();
			var f2 = $bind(this,this.onShowEntries);
			var tmp2 = function(entries2) {
				f2(entries2);
			};
			this._controller.showCompleted().onComplete(tmp2);
			break;
		}
	}
	,_setFilter: function(currentFilter) {
		this._qs(".filters .selected").className = "";
		this._qs(".filters [href=\"#/" + currentFilter + "\"]").className = "selected";
	}
	,_itemID: function(element) {
		return $(element).parent().parent().attr("data-id");
	}
	,__class__: js_TodoViewJS
};
var todomvc_control_ITodoController = function() { };
$hxClasses["todomvc.control.ITodoController"] = todomvc_control_ITodoController;
todomvc_control_ITodoController.__name__ = ["todomvc","control","ITodoController"];
todomvc_control_ITodoController.prototype = {
	__class__: todomvc_control_ITodoController
};
var todomvc_control_TodoController = function() { };
$hxClasses["todomvc.control.TodoController"] = todomvc_control_TodoController;
todomvc_control_TodoController.__name__ = ["todomvc","control","TodoController"];
todomvc_control_TodoController.__interfaces__ = [todomvc_control_ITodoController];
todomvc_control_TodoController.prototype = {
	setFilter: function(filter) {
		this.filterModel.setFilter(filter);
	}
	,editItem: function(id) {
		this.model.startItemEdition(id);
	}
	,editItemCancel: function(id) {
		this.model.cancelItemEdition(id);
	}
	,removeItem: function(id) {
		this.model.removeItem(id);
	}
	,removeCompletedItems: function() {
		this.model.removeCompletedItems();
	}
	,toggleAll: function(isCompleted) {
		this.model.toggleAllItems(isCompleted);
	}
	,toggleComplete: function(id,isCompleted) {
		this.logger.debug("{}(id='{}', isCompleted='{}')",["toggleComplete",id,isCompleted],{ fileName : "TodoController.hx", lineNumber : 38, className : "todomvc.control.TodoController", methodName : "toggleComplete"});
		this.model.setItemCompleted(id,isCompleted);
		this._saveItems();
	}
	,showAll: function() {
		this.logger.debug("{}()",["showAll"],{ fileName : "TodoController.hx", lineNumber : 44, className : "todomvc.control.TodoController", methodName : "showAll"});
		return new hex_control_ResultResponder(this.model.getAllItems());
	}
	,showActive: function() {
		this.logger.debug("{}()",["showActive"],{ fileName : "TodoController.hx", lineNumber : 49, className : "todomvc.control.TodoController", methodName : "showActive"});
		return new hex_control_ResultResponder(this.model.getActiveItems());
	}
	,showCompleted: function() {
		this.logger.debug("{}()",["showCompleted"],{ fileName : "TodoController.hx", lineNumber : 54, className : "todomvc.control.TodoController", methodName : "showCompleted"});
		return new hex_control_ResultResponder(this.model.getCompletedItems());
	}
	,addItem: function(title) {
		this.logger.debug("{}(title='{}')",["addItem",title],{ fileName : "TodoController.hx", lineNumber : 59, className : "todomvc.control.TodoController", methodName : "addItem"});
		var newTodoTitle = StringTools.trim(title);
		if(newTodoTitle.length > 0) {
			this.model.addItem(new todomvc_control__$TodoController_TodoItemVO(newTodoTitle,false));
		}
		this._saveItems();
	}
	,editItemSave: function(id,title) {
		this.logger.debug("{}(id='{}', title='{}')",["editItemSave",id,title],{ fileName : "TodoController.hx", lineNumber : 69, className : "todomvc.control.TodoController", methodName : "editItemSave"});
		var updatedTodoTitle = StringTools.trim(title);
		if(updatedTodoTitle.length > 0) {
			this.model.renameItem(id,title);
		} else {
			this.removeItem(id);
		}
		this._saveItems();
	}
	,populateModel: function() {
		this.logger.debug("{}()",["populateModel"],{ fileName : "TodoController.hx", lineNumber : 83, className : "todomvc.control.TodoController", methodName : "populateModel"});
		var items = this.service.load();
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			this.model.addItem(item);
		}
	}
	,_saveItems: function() {
		this.logger.debug("{}()",["_saveItems"],{ fileName : "TodoController.hx", lineNumber : 92, className : "todomvc.control.TodoController", methodName : "_saveItems"});
		this.service.save(this.model.getAllItems());
	}
	,__class__: todomvc_control_TodoController
};
var todomvc_control__$TodoController_TodoItemVO = function(title,completed) {
	if(completed == null) {
		completed = false;
	}
	this.id = hex_data_GUID.uuid();
	this.title = title;
	this.completed = completed;
};
$hxClasses["todomvc.control._TodoController.TodoItemVO"] = todomvc_control__$TodoController_TodoItemVO;
todomvc_control__$TodoController_TodoItemVO.__name__ = ["todomvc","control","_TodoController","TodoItemVO"];
todomvc_control__$TodoController_TodoItemVO.prototype = {
	__class__: todomvc_control__$TodoController_TodoItemVO
};
var todomvc_model_IFilterModel = function() { };
$hxClasses["todomvc.model.IFilterModel"] = todomvc_model_IFilterModel;
todomvc_model_IFilterModel.__name__ = ["todomvc","model","IFilterModel"];
todomvc_model_IFilterModel.prototype = {
	__class__: todomvc_model_IFilterModel
};
var todomvc_model_FilterModel = function() {
	this._currentFilter = common_Filter.ALL;
	this.output = new common__$_$Trigger_$Class_$For_$_$IFilterConnection();
};
$hxClasses["todomvc.model.FilterModel"] = todomvc_model_FilterModel;
todomvc_model_FilterModel.__name__ = ["todomvc","model","FilterModel"];
todomvc_model_FilterModel.__interfaces__ = [todomvc_model_IFilterModel];
todomvc_model_FilterModel.prototype = {
	setFilter: function(filter) {
		this.logger.debug("{}(filter='{}')",["setFilter",filter],{ fileName : "FilterModel.hx", lineNumber : 18, className : "todomvc.model.FilterModel", methodName : "setFilter"});
		this._currentFilter = filter;
		this.output.changeFilter(this._currentFilter);
	}
	,__class__: todomvc_model_FilterModel
};
var todomvc_model_ITodoModel = function() { };
$hxClasses["todomvc.model.ITodoModel"] = todomvc_model_ITodoModel;
todomvc_model_ITodoModel.__name__ = ["todomvc","model","ITodoModel"];
todomvc_model_ITodoModel.prototype = {
	__class__: todomvc_model_ITodoModel
};
var todomvc_model_TodoModel = function() {
	this._items = [];
	this.output = new common__$_$Trigger_$Class_$For_$_$ITodoConnection();
};
$hxClasses["todomvc.model.TodoModel"] = todomvc_model_TodoModel;
todomvc_model_TodoModel.__name__ = ["todomvc","model","TodoModel"];
todomvc_model_TodoModel.__interfaces__ = [todomvc_model_ITodoModel];
todomvc_model_TodoModel.prototype = {
	getAllItems: function() {
		this.logger.debug("{}()",["getAllItems"],{ fileName : "TodoModel.hx", lineNumber : 20, className : "todomvc.model.TodoModel", methodName : "getAllItems"});
		return this._items.slice();
	}
	,getActiveItems: function() {
		this.logger.debug("{}()",["getActiveItems"],{ fileName : "TodoModel.hx", lineNumber : 25, className : "todomvc.model.TodoModel", methodName : "getActiveItems"});
		var __tmp_7937458 = [];
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.completed) {
				__tmp_7937458.push(e);
			}
		}
		return __tmp_7937458;
	}
	,getCompletedItems: function() {
		this.logger.debug("{}()",["getCompletedItems"],{ fileName : "TodoModel.hx", lineNumber : 30, className : "todomvc.model.TodoModel", methodName : "getCompletedItems"});
		var __tmp_16622190 = [];
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.completed) {
				__tmp_16622190.push(e);
			}
		}
		return __tmp_16622190;
	}
	,addItem: function(item) {
		this.logger.debug("{}(item='{}')",["addItem",item],{ fileName : "TodoModel.hx", lineNumber : 35, className : "todomvc.model.TodoModel", methodName : "addItem"});
		this.output.onClearNewTodo();
		this._items.push(item);
		this.output.onShowEntries(this._items.slice());
		this._updateCount();
	}
	,removeItem: function(id) {
		var _gthis = this;
		this.logger.debug("{}(id='{}')",["removeItem",id],{ fileName : "TodoModel.hx", lineNumber : 43, className : "todomvc.model.TodoModel", methodName : "removeItem"});
		var _g = 0;
		var __tmp_4693920 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.id == id) {
				__tmp_4693920.push(e);
			}
		}
		var _g12 = __tmp_4693920;
		while(_g < _g12.length) {
			var e1 = _g12[_g];
			++_g;
			HxOverrides.remove(_gthis._items,e1);
			_gthis.output.onRemoveItem(e1.id);
			_gthis._updateCount();
		}
	}
	,startItemEdition: function(id) {
		this.logger.debug("{}(id='{}')",["startItemEdition",id],{ fileName : "TodoModel.hx", lineNumber : 49, className : "todomvc.model.TodoModel", methodName : "startItemEdition"});
		var __tmp_9028437 = null;
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.id == id) {
				__tmp_9028437 = e;
				break;
			}
		}
		var item = __tmp_9028437;
		this.output.onEditItem(item.id,item.title);
	}
	,removeCompletedItems: function() {
		var _gthis = this;
		this.logger.debug("{}()",["removeCompletedItems"],{ fileName : "TodoModel.hx", lineNumber : 55, className : "todomvc.model.TodoModel", methodName : "removeCompletedItems"});
		var _g = 0;
		var __tmp_14559083 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.completed == true) {
				__tmp_14559083.push(e);
			}
		}
		var _g12 = __tmp_14559083;
		while(_g < _g12.length) {
			var e1 = _g12[_g];
			++_g;
			_gthis.output.onRemoveItem(e1.id);
			HxOverrides.remove(_gthis._items,e1);
			_gthis._updateCount();
		}
	}
	,setItemCompleted: function(id,isCompleted) {
		var _gthis = this;
		this.logger.debug("{}(id='{}', isCompleted='{}')",["setItemCompleted",id,isCompleted],{ fileName : "TodoModel.hx", lineNumber : 61, className : "todomvc.model.TodoModel", methodName : "setItemCompleted"});
		var _g = 0;
		var __tmp_5839262 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.id == id) {
				__tmp_5839262.push(e);
			}
		}
		var _g12 = __tmp_5839262;
		while(_g < _g12.length) {
			var e1 = _g12[_g];
			++_g;
			e1.completed = isCompleted;
			_gthis.output.onSetItemCompleted(id,isCompleted);
			_gthis._updateCount();
		}
	}
	,renameItem: function(id,title) {
		var _gthis = this;
		this.logger.debug("{}(id='{}', title='{}')",["renameItem",id,title],{ fileName : "TodoModel.hx", lineNumber : 67, className : "todomvc.model.TodoModel", methodName : "renameItem"});
		var _g = 0;
		var __tmp_5454779 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.id == id) {
				__tmp_5454779.push(e);
			}
		}
		var _g12 = __tmp_5454779;
		while(_g < _g12.length) {
			var e1 = _g12[_g];
			++_g;
			e1.title = title;
			_gthis.output.onEditItemDone(id,title);
			_gthis._updateCount();
		}
	}
	,cancelItemEdition: function(id) {
		var _gthis = this;
		this.logger.debug("{}(id='{}')",["cancelItemEdition",id],{ fileName : "TodoModel.hx", lineNumber : 73, className : "todomvc.model.TodoModel", methodName : "cancelItemEdition"});
		var _g = 0;
		var __tmp_2527127 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.id == id) {
				__tmp_2527127.push(e);
			}
		}
		var _g12 = __tmp_2527127;
		while(_g < _g12.length) {
			var e1 = _g12[_g];
			++_g;
			_gthis.output.onEditItemDone(id,e1.title);
			_gthis._updateCount();
		}
	}
	,toggleAllItems: function(isCompleted) {
		var _gthis = this;
		this.logger.debug("{}(isCompleted='{}')",["toggleAllItems",isCompleted],{ fileName : "TodoModel.hx", lineNumber : 79, className : "todomvc.model.TodoModel", methodName : "toggleAllItems"});
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.completed = isCompleted;
			_gthis.output.onSetItemCompleted(e.id,e.completed);
		}
		this._updateCount();
	}
	,_updateCount: function() {
		this.logger.debug("{}()",["_updateCount"],{ fileName : "TodoModel.hx", lineNumber : 86, className : "todomvc.model.TodoModel", methodName : "_updateCount"});
		var itemCount = this._items.length;
		var __tmp_16688055 = 0;
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.completed == true) {
				++__tmp_16688055;
			}
		}
		var completedItemCount = __tmp_16688055;
		this.output.onUpdateItemCount(itemCount - completedItemCount);
		this.output.onClearCompletedButton(completedItemCount,completedItemCount > 0);
		this.output.onToggleAll(completedItemCount == itemCount);
		this.output.onChangeFooterVisibility(itemCount > 0);
	}
	,__class__: todomvc_model_TodoModel
};
var todomvc_module_TodoModule = function(serviceMapping,viewMapping) {
	hex_module_ContextModule.call(this);
	this._map(todomvc_control_ITodoController,todomvc_control_TodoController,"",true);
	this._map(todomvc_model_ITodoModel,todomvc_model_TodoModel,"",true);
	this._map(todomvc_model_IFilterModel,todomvc_model_FilterModel,"",true);
	var __injectInto__ = this.__map([serviceMapping],Type.resolveClass("todomvc.module.TodoModule"));
	__injectInto__ = this.__map([viewMapping],Type.resolveClass("todomvc.module.TodoModule"),__injectInto__);
	this.__injectInto(__injectInto__);
};
$hxClasses["todomvc.module.TodoModule"] = todomvc_module_TodoModule;
todomvc_module_TodoModule.__name__ = ["todomvc","module","TodoModule"];
todomvc_module_TodoModule.__interfaces__ = [hex_di_mapping_IDependencyOwner];
todomvc_module_TodoModule.__super__ = hex_module_ContextModule;
todomvc_module_TodoModule.prototype = $extend(hex_module_ContextModule.prototype,{
	_onInitialisation: function() {
		this._get(todomvc_model_ITodoModel).output.connect(this._get(todomvc_view_ITodoView));
		this._get(todomvc_model_IFilterModel).output.connect(this._get(todomvc_view_ITodoView));
		this._get(todomvc_control_ITodoController).populateModel();
	}
	,__map: function(mappings,target,injectInto) {
		mappings = hex_di_mapping_MappingChecker.filter(target,mappings);
		if(injectInto == null) {
			injectInto = [];
		}
		var _g = 0;
		while(_g < mappings.length) {
			var mapping = mappings[_g];
			++_g;
			if(mapping.toValue != null) {
				this.getInjector().mapClassNameToValue(mapping.fromType,mapping.toValue,mapping.withName);
			} else if(mapping.asSingleton) {
				this.getInjector().mapClassNameToSingleton(mapping.fromType,mapping.toClass,mapping.withName);
			} else {
				this.getInjector().mapClassNameToType(mapping.fromType,mapping.toClass,mapping.withName);
			}
			if(mapping.injectInto) {
				injectInto.push(mapping);
			}
		}
		return injectInto;
	}
	,__injectInto: function(injectInto) {
		var _g = 0;
		while(_g < injectInto.length) {
			var mapping = injectInto[_g];
			++_g;
			this.getInjector().injectInto(mapping.toValue);
		}
	}
	,__class__: todomvc_module_TodoModule
});
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
configuration_TodoLocalStorage.STORAGE_ID = "todos-hexMachina";
configuration_TodoLocalStorage.__INJECTION_DATA = { c : { a : []}, p : [{ p : "logger", t : "hex.log.ILogger", n : "", o : true}], m : [], pc : [], pd : []};
haxe_Template.splitter = new EReg("(::[A-Za-z0-9_ ()&|!+=/><*.\"-]+::|\\$\\$([A-Za-z0-9_-]+)\\()","");
haxe_Template.expr_splitter = new EReg("(\\(|\\)|[ \r\n\t]*\"[^\"]*\"[ \r\n\t]*|[!+=/><*.&|-]+)","");
haxe_Template.expr_trim = new EReg("^[ ]*([^ ]+)[ ]*$","");
haxe_Template.expr_int = new EReg("^[0-9]+$","");
haxe_Template.expr_float = new EReg("^([+-]?)(?=\\d|,\\d)\\d*(,\\d*)?([Ee]([+-]?\\d+))?$","");
haxe_Template.globals = { };
haxe_ds_ObjectMap.count = 0;
hex_compiletime_CodeLocator._M = new haxe_ds_StringMap();
hex_core_ApplicationAssemblerMessage.CONTEXT_PARSED = (function($this) {
	var $r;
	var this1 = "onContextParsed";
	$r = this1;
	return $r;
}(this));
hex_core_ApplicationAssemblerMessage.ASSEMBLING_START = (function($this) {
	var $r;
	var this1 = "onAssemblingStart";
	$r = this1;
	return $r;
}(this));
hex_core_ApplicationAssemblerMessage.OBJECTS_BUILT = (function($this) {
	var $r;
	var this1 = "onObjectsBuilt";
	$r = this1;
	return $r;
}(this));
hex_core_ApplicationAssemblerMessage.METHODS_CALLED = (function($this) {
	var $r;
	var this1 = "onMethodsCalled";
	$r = this1;
	return $r;
}(this));
hex_core_ApplicationAssemblerMessage.MODULES_INITIALIZED = (function($this) {
	var $r;
	var this1 = "onModulesInitialized";
	$r = this1;
	return $r;
}(this));
hex_core_ApplicationAssemblerMessage.ASSEMBLING_END = (function($this) {
	var $r;
	var this1 = "onAssemblingEnd";
	$r = this1;
	return $r;
}(this));
hex_core_HashCodeFactory._nKEY = 0;
hex_core_HashCodeFactory._M = new haxe_ds_ObjectMap();
hex_domain_Domain._domains = new haxe_ds_StringMap();
hex_error_NullPointerException.__meta__ = { obj : { IgnoreCover : null}};
hex_error_IllegalArgumentException.__meta__ = { obj : { IgnoreCover : null}};
hex_domain_TopLevelDomain.DOMAIN = hex_domain_Domain.getDomain("TopLevelDomain");
hex_domain_ApplicationDomainDispatcher._Instance = new hex_domain_ApplicationDomainDispatcher();
hex_domain_DefaultDomain.DOMAIN = hex_domain_Domain.getDomain("DefaultDomain");
hex_domain_DomainExpert._Instance = new hex_domain_DomainExpert();
hex_domain_DomainExpert._DomainIndex = 0;
hex_domain_NoDomain.DOMAIN = hex_domain_Domain.getDomain("NoDomain");
hex_error_IllegalStateException.__meta__ = { obj : { IgnoreCover : null}};
hex_error_UnsupportedOperationException.__meta__ = { obj : { IgnoreCover : null}};
hex_log__$LogLevel_LogLevel_$Impl_$._ALL = hex_log__$LogLevel_LogLevel_$Impl_$._new(999999);
hex_log__$LogLevel_LogLevel_$Impl_$._DEBUG = hex_log__$LogLevel_LogLevel_$Impl_$._new(5000);
hex_log__$LogLevel_LogLevel_$Impl_$._WARN = hex_log__$LogLevel_LogLevel_$Impl_$._new(3000);
hex_log__$LogLevel_LogLevel_$Impl_$._ERROR = hex_log__$LogLevel_LogLevel_$Impl_$._new(2000);
hex_log_LogManager.context = new hex_log_LoggerContext();
hex_log_message_ParameterFormatter.DELIM_START = "{";
hex_log_message_ParameterFormatter.DELIM_STOP = "}";
hex_metadata_AnnotationProvider._initialized = false;
hex_metadata_AnnotationProvider._Domains = new haxe_ds_ObjectMap();
js_Boot.__toStr = ({ }).toString;
js_TodoViewJS.__INJECTION_DATA = { c : { a : []}, p : [{ p : "_controller", t : "todomvc.control.ITodoController", n : "", o : false},{ p : "logger", t : "hex.log.ILogger", n : "", o : true}], m : [], pc : [{ m : "_do", a : [], o : 0}], pd : []};
todomvc_control_TodoController.__INJECTION_DATA = { c : { a : []}, p : [{ p : "model", t : "todomvc.model.ITodoModel", n : "", o : false},{ p : "filterModel", t : "todomvc.model.IFilterModel", n : "", o : false},{ p : "service", t : "todomvc.service.ITodoService", n : "", o : false},{ p : "logger", t : "hex.log.ILogger", n : "", o : true}], m : [], pc : [], pd : []};
todomvc_model_FilterModel.__INJECTION_DATA = { c : { a : []}, p : [{ p : "logger", t : "hex.log.ILogger", n : "", o : true}], m : [], pc : [], pd : []};
todomvc_model_TodoModel.__INJECTION_DATA = { c : { a : []}, p : [{ p : "logger", t : "hex.log.ILogger", n : "", o : true}], m : [], pc : [], pd : []};
todomvc_module_TodoModule.__DEP__ = ["todomvc.view.ITodoView|","todomvc.service.ITodoService|"];
todomvc_module_TodoModule.__INJECTION_DATA = { c : { a : []}, p : [], m : [], pc : [], pd : []};
TodoMVC.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=MainTodoMVC.js.map