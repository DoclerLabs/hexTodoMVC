// Generated by Haxe 3.3.0 (git build development @ 3fe3fab)
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $iterator(it)();
		while(_.hasNext()) {
			_.next();
			++n;
		}
	} else {
		var x = $iterator(it)();
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var TodoMVC = function() { };
$hxClasses["TodoMVC"] = TodoMVC;
TodoMVC.__name__ = ["TodoMVC"];
TodoMVC.main = function() {
	var proxy = new hex_log_layout_LogProxyLayout();
	proxy.addListener(new hex_log_layout_JavaScriptConsoleLayout());
	var applicationAssembler = new hex_runtime_ApplicationAssembler();
	var applicationContext = applicationAssembler.getApplicationContext("todomvc",hex_ioc_assembler_ApplicationContext);
	applicationContext.dispatch(hex_ioc_assembler_ApplicationAssemblerMessage.CONTEXT_PARSED);
	var __applicationContextInjector = applicationContext.getInjector();
	var coreFactory = applicationContext.getCoreFactory();
	__applicationContextInjector.getInstance(hex_metadata_IAnnotationProvider);
	applicationContext.dispatch(hex_ioc_assembler_ApplicationAssemblerMessage.STATE_TRANSITIONS_BUILT);
	applicationContext.dispatch(hex_ioc_assembler_ApplicationAssemblerMessage.ASSEMBLING_START);
	var todoServiceLocator = new hex_ioc_di_MappingConfiguration();
	todoServiceLocator.addMapping(todomvc_service_ITodoService,configuration_TodoLocalStorage,null,false,false);
	coreFactory.register("todoServiceLocator",todoServiceLocator);
	var footer = window.document.querySelector(".footer");
	coreFactory.register("footer",footer);
	var main = window.document.querySelector(".main");
	coreFactory.register("main",main);
	var todoItemCounter = window.document.querySelector(".todo-count");
	coreFactory.register("todoItemCounter",todoItemCounter);
	var newTodo = window.document.querySelector(".new-todo");
	coreFactory.register("newTodo",newTodo);
	var todoList = window.document.querySelector(".todo-list");
	coreFactory.register("todoList",todoList);
	var clearCompleted = window.document.querySelector(".clear-completed");
	coreFactory.register("clearCompleted",clearCompleted);
	var toggleAll = window.document.querySelector(".toggle-all");
	coreFactory.register("toggleAll",toggleAll);
	var view = new js_TodoViewJS(todoList,todoItemCounter,clearCompleted,main,footer,toggleAll,newTodo);
	coreFactory.register("view",view);
	var viewConfig = new hex_ioc_di_MappingConfiguration();
	viewConfig.addMapping(todomvc_view_ITodoView,view,null,false,true);
	coreFactory.register("viewConfig",viewConfig);
	hex_domain_DomainExpert.getInstance().registerDomain(hex_domain_DomainUtil.getDomain("module",hex_domain_Domain));
	hex_metadata_AnnotationProvider.registerToParentDomain(hex_domain_DomainUtil.getDomain("module",hex_domain_Domain),hex_domain_DomainUtil.getDomain("todomvc",hex_domain_Domain));
	var module = new todomvc_module_TodoModule(todoServiceLocator,viewConfig);
	coreFactory.register("module",module);
	applicationContext.dispatch(hex_ioc_assembler_ApplicationAssemblerMessage.OBJECTS_BUILT);
	applicationContext.dispatch(hex_ioc_assembler_ApplicationAssemblerMessage.DOMAIN_LISTENERS_ASSIGNED);
	applicationContext.dispatch(hex_ioc_assembler_ApplicationAssemblerMessage.METHODS_CALLED);
	module.initialize();
	applicationContext.dispatch(hex_ioc_assembler_ApplicationAssemblerMessage.MODULES_INITIALIZED);
	applicationContext.dispatch(hex_ioc_assembler_ApplicationAssemblerMessage.ASSEMBLING_END);
	applicationContext.dispatch(hex_ioc_assembler_ApplicationAssemblerMessage.IDLE_MODE);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
var common_Filter = { __ename__ : true, __constructs__ : ["ALL","ACTIVE","COMPLETED"] };
common_Filter.ALL = ["ALL",0];
common_Filter.ALL.toString = $estr;
common_Filter.ALL.__enum__ = common_Filter;
common_Filter.ACTIVE = ["ACTIVE",1];
common_Filter.ACTIVE.toString = $estr;
common_Filter.ACTIVE.__enum__ = common_Filter;
common_Filter.COMPLETED = ["COMPLETED",2];
common_Filter.COMPLETED.toString = $estr;
common_Filter.COMPLETED.__enum__ = common_Filter;
var common_IFilterConnection = function() { };
$hxClasses["common.IFilterConnection"] = common_IFilterConnection;
common_IFilterConnection.__name__ = ["common","IFilterConnection"];
common_IFilterConnection.prototype = {
	__class__: common_IFilterConnection
};
var common_ITodoConnection = function() { };
$hxClasses["common.ITodoConnection"] = common_ITodoConnection;
common_ITodoConnection.__name__ = ["common","ITodoConnection"];
common_ITodoConnection.prototype = {
	__class__: common_ITodoConnection
};
var hex_event_ITrigger = function() { };
$hxClasses["hex.event.ITrigger"] = hex_event_ITrigger;
hex_event_ITrigger.__name__ = ["hex","event","ITrigger"];
hex_event_ITrigger.prototype = {
	__class__: hex_event_ITrigger
};
var common__$_$Trigger_$Class_$For_$_$IFilterConnection = function() {
	this._inputs = [];
};
$hxClasses["common.__Trigger_Class_For__IFilterConnection"] = common__$_$Trigger_$Class_$For_$_$IFilterConnection;
common__$_$Trigger_$Class_$For_$_$IFilterConnection.__name__ = ["common","__Trigger_Class_For__IFilterConnection"];
common__$_$Trigger_$Class_$For_$_$IFilterConnection.__interfaces__ = [common_IFilterConnection,hex_event_ITrigger];
common__$_$Trigger_$Class_$For_$_$IFilterConnection.prototype = {
	connect: function(input) {
		if(this._inputs.indexOf(input) == -1) {
			this._inputs.push(input);
			return true;
		} else {
			return false;
		}
	}
	,disconnect: function(input) {
		var index = this._inputs.indexOf(input);
		if(index > -1) {
			this._inputs.splice(index,1);
			return true;
		} else {
			return false;
		}
	}
	,changeFilter: function(currentFilter) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.changeFilter(currentFilter);
		}
	}
	,__class__: common__$_$Trigger_$Class_$For_$_$IFilterConnection
};
var common__$_$Trigger_$Class_$For_$_$ITodoConnection = function() {
	this._inputs = [];
};
$hxClasses["common.__Trigger_Class_For__ITodoConnection"] = common__$_$Trigger_$Class_$For_$_$ITodoConnection;
common__$_$Trigger_$Class_$For_$_$ITodoConnection.__name__ = ["common","__Trigger_Class_For__ITodoConnection"];
common__$_$Trigger_$Class_$For_$_$ITodoConnection.__interfaces__ = [common_ITodoConnection,hex_event_ITrigger];
common__$_$Trigger_$Class_$For_$_$ITodoConnection.prototype = {
	connect: function(input) {
		if(this._inputs.indexOf(input) == -1) {
			this._inputs.push(input);
			return true;
		} else {
			return false;
		}
	}
	,disconnect: function(input) {
		var index = this._inputs.indexOf(input);
		if(index > -1) {
			this._inputs.splice(index,1);
			return true;
		} else {
			return false;
		}
	}
	,onShowEntries: function(entries) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onShowEntries(entries);
		}
	}
	,onRemoveItem: function(id) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onRemoveItem(id);
		}
	}
	,onUpdateItemCount: function(activeItems) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onUpdateItemCount(activeItems);
		}
	}
	,onClearCompletedButton: function(completedCount,visible) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onClearCompletedButton(completedCount,visible);
		}
	}
	,onChangeFooterVisibility: function(isVisible) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onChangeFooterVisibility(isVisible);
		}
	}
	,onToggleAll: function(isChecked) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onToggleAll(isChecked);
		}
	}
	,onClearNewTodo: function() {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onClearNewTodo();
		}
	}
	,onSetItemCompleted: function(id,isCompleted) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onSetItemCompleted(id,isCompleted);
		}
	}
	,onEditItem: function(id,title) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onEditItem(id,title);
		}
	}
	,onEditItemDone: function(id,title) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onEditItemDone(id,title);
		}
	}
	,__class__: common__$_$Trigger_$Class_$For_$_$ITodoConnection
};
var todomvc_service_ITodoService = function() { };
$hxClasses["todomvc.service.ITodoService"] = todomvc_service_ITodoService;
todomvc_service_ITodoService.__name__ = ["todomvc","service","ITodoService"];
todomvc_service_ITodoService.prototype = {
	__class__: todomvc_service_ITodoService
};
var configuration_TodoLocalStorage = function() {
};
$hxClasses["configuration.TodoLocalStorage"] = configuration_TodoLocalStorage;
configuration_TodoLocalStorage.__name__ = ["configuration","TodoLocalStorage"];
configuration_TodoLocalStorage.__interfaces__ = [todomvc_service_ITodoService];
configuration_TodoLocalStorage.prototype = {
	load: function() {
		return null;
	}
	,save: function(todos) {
	}
	,__class__: configuration_TodoLocalStorage
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe__$Template_TemplateExpr = { __ename__ : true, __constructs__ : ["OpVar","OpExpr","OpIf","OpStr","OpBlock","OpForeach","OpMacro"] };
haxe__$Template_TemplateExpr.OpVar = function(v) { var $x = ["OpVar",0,v]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpExpr = function(expr) { var $x = ["OpExpr",1,expr]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpIf = function(expr,eif,eelse) { var $x = ["OpIf",2,expr,eif,eelse]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpStr = function(str) { var $x = ["OpStr",3,str]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpBlock = function(l) { var $x = ["OpBlock",4,l]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpForeach = function(expr,loop) { var $x = ["OpForeach",5,expr,loop]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
haxe__$Template_TemplateExpr.OpMacro = function(name,params) { var $x = ["OpMacro",6,name,params]; $x.__enum__ = haxe__$Template_TemplateExpr; $x.toString = $estr; return $x; };
var haxe_Template = function(str) {
	var tokens = this.parseTokens(str);
	this.expr = this.parseBlock(tokens);
	if(!tokens.isEmpty()) {
		throw new js__$Boot_HaxeError("Unexpected '" + Std.string(tokens.first().s) + "'");
	}
};
$hxClasses["haxe.Template"] = haxe_Template;
haxe_Template.__name__ = ["haxe","Template"];
haxe_Template.prototype = {
	execute: function(context,macros) {
		this.macros = macros == null?{ }:macros;
		this.context = context;
		this.stack = new List();
		this.buf = new StringBuf();
		this.run(this.expr);
		return this.buf.b;
	}
	,resolve: function(v) {
		if(v == "__current__") {
			return this.context;
		}
		var o = this.context;
		var tmp;
		var value;
		if(o == null) {
			value = null;
		} else {
			var value1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + v];
				value1 = tmp;
			} else {
				value1 = false;
			}
			if(value1) {
				value = o[tmp]();
			} else {
				value = o[v];
			}
		}
		if(value != null || Object.prototype.hasOwnProperty.call(this.context,v)) {
			return value;
		}
		var _g_head = this.stack.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var ctx = val;
			var tmp1;
			var value2;
			if(ctx == null) {
				value2 = null;
			} else {
				var value3;
				if(ctx.__properties__) {
					tmp1 = ctx.__properties__["get_" + v];
					value3 = tmp1;
				} else {
					value3 = false;
				}
				if(value3) {
					value2 = ctx[tmp1]();
				} else {
					value2 = ctx[v];
				}
			}
			value = value2;
			if(value != null || Object.prototype.hasOwnProperty.call(ctx,v)) {
				return value;
			}
		}
		return Reflect.field(haxe_Template.globals,v);
	}
	,parseTokens: function(data) {
		var tokens = new List();
		while(haxe_Template.splitter.match(data)) {
			var p = haxe_Template.splitter.matchedPos();
			if(p.pos > 0) {
				tokens.add({ p : HxOverrides.substr(data,0,p.pos), s : true, l : null});
			}
			if(HxOverrides.cca(data,p.pos) == 58) {
				tokens.add({ p : HxOverrides.substr(data,p.pos + 2,p.len - 4), s : false, l : null});
				data = haxe_Template.splitter.matchedRight();
				continue;
			}
			var parp = p.pos + p.len;
			var npar = 1;
			var params = [];
			var part = "";
			while(true) {
				var c = HxOverrides.cca(data,parp);
				++parp;
				if(c == 40) {
					++npar;
				} else if(c == 41) {
					--npar;
					if(npar <= 0) {
						break;
					}
				} else if(c == null) {
					throw new js__$Boot_HaxeError("Unclosed macro parenthesis");
				}
				if(c == 44 && npar == 1) {
					params.push(part);
					part = "";
				} else {
					part += String.fromCharCode(c);
				}
			}
			params.push(part);
			tokens.add({ p : haxe_Template.splitter.matched(2), s : false, l : params});
			data = HxOverrides.substr(data,parp,data.length - parp);
		}
		if(data.length > 0) {
			tokens.add({ p : data, s : true, l : null});
		}
		return tokens;
	}
	,parseBlock: function(tokens) {
		var l = new List();
		while(true) {
			var t = tokens.first();
			if(t == null) {
				break;
			}
			if(!t.s && (t.p == "end" || t.p == "else" || HxOverrides.substr(t.p,0,7) == "elseif ")) {
				break;
			}
			l.add(this.parse(tokens));
		}
		if(l.length == 1) {
			return l.first();
		}
		return haxe__$Template_TemplateExpr.OpBlock(l);
	}
	,parse: function(tokens) {
		var t = tokens.pop();
		var p = t.p;
		if(t.s) {
			return haxe__$Template_TemplateExpr.OpStr(p);
		}
		if(t.l != null) {
			var pe = new List();
			var _g = 0;
			var _g1 = t.l;
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				pe.add(this.parseBlock(this.parseTokens(p1)));
			}
			return haxe__$Template_TemplateExpr.OpMacro(p,pe);
		}
		if(HxOverrides.substr(p,0,3) == "if ") {
			p = HxOverrides.substr(p,3,p.length - 3);
			var e = this.parseExpr(p);
			var eif = this.parseBlock(tokens);
			var t1 = tokens.first();
			var eelse;
			if(t1 == null) {
				throw new js__$Boot_HaxeError("Unclosed 'if'");
			}
			if(t1.p == "end") {
				tokens.pop();
				eelse = null;
			} else if(t1.p == "else") {
				tokens.pop();
				eelse = this.parseBlock(tokens);
				t1 = tokens.pop();
				if(t1 == null || t1.p != "end") {
					throw new js__$Boot_HaxeError("Unclosed 'else'");
				}
			} else {
				t1.p = HxOverrides.substr(t1.p,4,t1.p.length - 4);
				eelse = this.parse(tokens);
			}
			return haxe__$Template_TemplateExpr.OpIf(e,eif,eelse);
		}
		if(HxOverrides.substr(p,0,8) == "foreach ") {
			p = HxOverrides.substr(p,8,p.length - 8);
			var e1 = this.parseExpr(p);
			var efor = this.parseBlock(tokens);
			var t2 = tokens.pop();
			if(t2 == null || t2.p != "end") {
				throw new js__$Boot_HaxeError("Unclosed 'foreach'");
			}
			return haxe__$Template_TemplateExpr.OpForeach(e1,efor);
		}
		if(haxe_Template.expr_splitter.match(p)) {
			return haxe__$Template_TemplateExpr.OpExpr(this.parseExpr(p));
		}
		return haxe__$Template_TemplateExpr.OpVar(p);
	}
	,parseExpr: function(data) {
		var l = new List();
		var expr = data;
		while(haxe_Template.expr_splitter.match(data)) {
			var p = haxe_Template.expr_splitter.matchedPos();
			if(p.pos != 0) {
				l.add({ p : HxOverrides.substr(data,0,p.pos), s : true});
			}
			var p1 = haxe_Template.expr_splitter.matched(0);
			l.add({ p : p1, s : p1.indexOf("\"") >= 0});
			data = haxe_Template.expr_splitter.matchedRight();
		}
		if(data.length != 0) {
			l.add({ p : data, s : true});
		}
		var e;
		try {
			e = this.makeExpr(l);
			if(!l.isEmpty()) {
				throw new js__$Boot_HaxeError(l.first().p);
			}
		} catch( s ) {
			if (s instanceof js__$Boot_HaxeError) s = s.val;
			if( js_Boot.__instanceof(s,String) ) {
				throw new js__$Boot_HaxeError("Unexpected '" + s + "' in " + expr);
			} else throw(s);
		}
		return function() {
			try {
				return e();
			} catch( exc ) {
				if (exc instanceof js__$Boot_HaxeError) exc = exc.val;
				throw new js__$Boot_HaxeError("Error : " + Std.string(exc) + " in " + expr);
			}
		};
	}
	,makeConst: function(v) {
		haxe_Template.expr_trim.match(v);
		v = haxe_Template.expr_trim.matched(1);
		if(HxOverrides.cca(v,0) == 34) {
			var str = HxOverrides.substr(v,1,v.length - 2);
			return function() {
				return str;
			};
		}
		if(haxe_Template.expr_int.match(v)) {
			var i = Std.parseInt(v);
			return function() {
				return i;
			};
		}
		if(haxe_Template.expr_float.match(v)) {
			var f = parseFloat(v);
			return function() {
				return f;
			};
		}
		var me = this;
		return function() {
			return me.resolve(v);
		};
	}
	,makePath: function(e,l) {
		var p = l.first();
		if(p == null || p.p != ".") {
			return e;
		}
		l.pop();
		var field = l.pop();
		if(field == null || !field.s) {
			throw new js__$Boot_HaxeError(field.p);
		}
		var f = field.p;
		haxe_Template.expr_trim.match(f);
		f = haxe_Template.expr_trim.matched(1);
		return this.makePath(function() {
			return Reflect.field(e(),f);
		},l);
	}
	,makeExpr: function(l) {
		return this.makePath(this.makeExpr2(l),l);
	}
	,makeExpr2: function(l) {
		var p = l.pop();
		if(p == null) {
			throw new js__$Boot_HaxeError("<eof>");
		}
		if(p.s) {
			return this.makeConst(p.p);
		}
		var _g = p.p;
		switch(_g) {
		case "!":
			var e = this.makeExpr(l);
			return function() {
				var v = e();
				if(v != null) {
					return v == false;
				} else {
					return true;
				}
			};
		case "(":
			var e1 = this.makeExpr(l);
			var p1 = l.pop();
			if(p1 == null || p1.s) {
				throw new js__$Boot_HaxeError(p1);
			}
			if(p1.p == ")") {
				return e1;
			}
			var e2 = this.makeExpr(l);
			var p2 = l.pop();
			if(p2 == null || p2.p != ")") {
				throw new js__$Boot_HaxeError(p2);
			}
			var _g1 = p1.p;
			switch(_g1) {
			case "!=":
				return function() {
					return e1() != e2();
				};
			case "&&":
				return function() {
					return e1() && e2();
				};
			case "*":
				return function() {
					return e1() * e2();
				};
			case "+":
				return function() {
					return e1() + e2();
				};
			case "-":
				return function() {
					return e1() - e2();
				};
			case "/":
				return function() {
					return e1() / e2();
				};
			case "<":
				return function() {
					return e1() < e2();
				};
			case "<=":
				return function() {
					return e1() <= e2();
				};
			case "==":
				return function() {
					return e1() == e2();
				};
			case ">":
				return function() {
					return e1() > e2();
				};
			case ">=":
				return function() {
					return e1() >= e2();
				};
			case "||":
				return function() {
					return e1() || e2();
				};
			default:
				throw new js__$Boot_HaxeError("Unknown operation " + p1.p);
			}
			break;
		case "-":
			var e3 = this.makeExpr(l);
			return function() {
				return -e3();
			};
		}
		throw new js__$Boot_HaxeError(p.p);
	}
	,run: function(e) {
		switch(e[1]) {
		case 0:
			var v = e[2];
			var _this = this.buf;
			var x = Std.string(this.resolve(v));
			_this.b += Std.string(x);
			break;
		case 1:
			var e1 = e[2];
			var _this1 = this.buf;
			var x1 = Std.string(e1());
			_this1.b += Std.string(x1);
			break;
		case 2:
			var eelse = e[4];
			var eif = e[3];
			var e2 = e[2];
			var v1 = e2();
			if(v1 == null || v1 == false) {
				if(eelse != null) {
					this.run(eelse);
				}
			} else {
				this.run(eif);
			}
			break;
		case 3:
			var str = e[2];
			this.buf.b += str == null?"null":"" + str;
			break;
		case 4:
			var l = e[2];
			var _g_head = l.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				this.run(val);
			}
			break;
		case 5:
			var loop = e[3];
			var e3 = e[2];
			var v2 = e3();
			try {
				var x2 = $iterator(v2)();
				if(x2.hasNext == null) {
					throw new js__$Boot_HaxeError(null);
				}
				v2 = x2;
			} catch( e4 ) {
				try {
					if(v2.hasNext == null) {
						throw new js__$Boot_HaxeError(null);
					}
				} catch( e5 ) {
					throw new js__$Boot_HaxeError("Cannot iter on " + Std.string(v2));
				}
			}
			this.stack.push(this.context);
			var v3 = v2;
			while(v3.hasNext()) {
				var ctx = v3.next();
				this.context = ctx;
				this.run(loop);
			}
			this.context = this.stack.pop();
			break;
		case 6:
			var params = e[3];
			var m = e[2];
			var v4 = Reflect.field(this.macros,m);
			var pl = [];
			var old = this.buf;
			pl.push($bind(this,this.resolve));
			var _g_head1 = params.h;
			while(_g_head1 != null) {
				var val1 = _g_head1.item;
				_g_head1 = _g_head1.next;
				if(val1[1] == 0) {
					var v5 = val1[2];
					pl.push(this.resolve(v5));
				} else {
					this.buf = new StringBuf();
					this.run(val1);
					pl.push(this.buf.b);
				}
			}
			this.buf = old;
			try {
				var _this2 = this.buf;
				var x3 = Std.string(v4.apply(this.macros,pl));
				_this2.b += Std.string(x3);
			} catch( e6 ) {
				if (e6 instanceof js__$Boot_HaxeError) e6 = e6.val;
				var plstr;
				try {
					plstr = pl.join(",");
				} catch( e7 ) {
					plstr = "???";
				}
				var msg = "Macro call " + m + "(" + plstr + ") failed (" + Std.string(e6) + ")";
				throw new js__$Boot_HaxeError(msg);
			}
			break;
		}
	}
	,__class__: haxe_Template
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	get: function(key) {
		return this.h[key];
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_macro_Constant = { __ename__ : true, __constructs__ : ["CInt","CFloat","CString","CIdent","CRegexp"] };
haxe_macro_Constant.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CIdent = function(s) { var $x = ["CIdent",3,s]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CRegexp = function(r,opt) { var $x = ["CRegexp",4,r,opt]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
var haxe_macro_Binop = { __ename__ : true, __constructs__ : ["OpAdd","OpMult","OpDiv","OpSub","OpAssign","OpEq","OpNotEq","OpGt","OpGte","OpLt","OpLte","OpAnd","OpOr","OpXor","OpBoolAnd","OpBoolOr","OpShl","OpShr","OpUShr","OpMod","OpAssignOp","OpInterval","OpArrow"] };
haxe_macro_Binop.OpAdd = ["OpAdd",0];
haxe_macro_Binop.OpAdd.toString = $estr;
haxe_macro_Binop.OpAdd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMult = ["OpMult",1];
haxe_macro_Binop.OpMult.toString = $estr;
haxe_macro_Binop.OpMult.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpDiv = ["OpDiv",2];
haxe_macro_Binop.OpDiv.toString = $estr;
haxe_macro_Binop.OpDiv.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpSub = ["OpSub",3];
haxe_macro_Binop.OpSub.toString = $estr;
haxe_macro_Binop.OpSub.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssign = ["OpAssign",4];
haxe_macro_Binop.OpAssign.toString = $estr;
haxe_macro_Binop.OpAssign.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpEq = ["OpEq",5];
haxe_macro_Binop.OpEq.toString = $estr;
haxe_macro_Binop.OpEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpNotEq = ["OpNotEq",6];
haxe_macro_Binop.OpNotEq.toString = $estr;
haxe_macro_Binop.OpNotEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGt = ["OpGt",7];
haxe_macro_Binop.OpGt.toString = $estr;
haxe_macro_Binop.OpGt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGte = ["OpGte",8];
haxe_macro_Binop.OpGte.toString = $estr;
haxe_macro_Binop.OpGte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLt = ["OpLt",9];
haxe_macro_Binop.OpLt.toString = $estr;
haxe_macro_Binop.OpLt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLte = ["OpLte",10];
haxe_macro_Binop.OpLte.toString = $estr;
haxe_macro_Binop.OpLte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAnd = ["OpAnd",11];
haxe_macro_Binop.OpAnd.toString = $estr;
haxe_macro_Binop.OpAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpOr = ["OpOr",12];
haxe_macro_Binop.OpOr.toString = $estr;
haxe_macro_Binop.OpOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpXor = ["OpXor",13];
haxe_macro_Binop.OpXor.toString = $estr;
haxe_macro_Binop.OpXor.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolAnd = ["OpBoolAnd",14];
haxe_macro_Binop.OpBoolAnd.toString = $estr;
haxe_macro_Binop.OpBoolAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolOr = ["OpBoolOr",15];
haxe_macro_Binop.OpBoolOr.toString = $estr;
haxe_macro_Binop.OpBoolOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShl = ["OpShl",16];
haxe_macro_Binop.OpShl.toString = $estr;
haxe_macro_Binop.OpShl.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShr = ["OpShr",17];
haxe_macro_Binop.OpShr.toString = $estr;
haxe_macro_Binop.OpShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpUShr = ["OpUShr",18];
haxe_macro_Binop.OpUShr.toString = $estr;
haxe_macro_Binop.OpUShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMod = ["OpMod",19];
haxe_macro_Binop.OpMod.toString = $estr;
haxe_macro_Binop.OpMod.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssignOp = function(op) { var $x = ["OpAssignOp",20,op]; $x.__enum__ = haxe_macro_Binop; $x.toString = $estr; return $x; };
haxe_macro_Binop.OpInterval = ["OpInterval",21];
haxe_macro_Binop.OpInterval.toString = $estr;
haxe_macro_Binop.OpInterval.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpArrow = ["OpArrow",22];
haxe_macro_Binop.OpArrow.toString = $estr;
haxe_macro_Binop.OpArrow.__enum__ = haxe_macro_Binop;
var haxe_macro_Unop = { __ename__ : true, __constructs__ : ["OpIncrement","OpDecrement","OpNot","OpNeg","OpNegBits"] };
haxe_macro_Unop.OpIncrement = ["OpIncrement",0];
haxe_macro_Unop.OpIncrement.toString = $estr;
haxe_macro_Unop.OpIncrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpDecrement = ["OpDecrement",1];
haxe_macro_Unop.OpDecrement.toString = $estr;
haxe_macro_Unop.OpDecrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNot = ["OpNot",2];
haxe_macro_Unop.OpNot.toString = $estr;
haxe_macro_Unop.OpNot.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNeg = ["OpNeg",3];
haxe_macro_Unop.OpNeg.toString = $estr;
haxe_macro_Unop.OpNeg.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNegBits = ["OpNegBits",4];
haxe_macro_Unop.OpNegBits.toString = $estr;
haxe_macro_Unop.OpNegBits.__enum__ = haxe_macro_Unop;
var haxe_macro_ExprDef = { __ename__ : true, __constructs__ : ["EConst","EArray","EBinop","EField","EParenthesis","EObjectDecl","EArrayDecl","ECall","ENew","EUnop","EVars","EFunction","EBlock","EFor","EIn","EIf","EWhile","ESwitch","ETry","EReturn","EBreak","EContinue","EUntyped","EThrow","ECast","EDisplay","EDisplayNew","ETernary","ECheckType","EMeta"] };
haxe_macro_ExprDef.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EArray = function(e1,e2) { var $x = ["EArray",1,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBinop = function(op,e1,e2) { var $x = ["EBinop",2,op,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EField = function(e,field) { var $x = ["EField",3,e,field]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EParenthesis = function(e) { var $x = ["EParenthesis",4,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EObjectDecl = function(fields) { var $x = ["EObjectDecl",5,fields]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EArrayDecl = function(values) { var $x = ["EArrayDecl",6,values]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECall = function(e,params) { var $x = ["ECall",7,e,params]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ENew = function(t,params) { var $x = ["ENew",8,t,params]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EUnop = function(op,postFix,e) { var $x = ["EUnop",9,op,postFix,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EVars = function(vars) { var $x = ["EVars",10,vars]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EFunction = function(name,f) { var $x = ["EFunction",11,name,f]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBlock = function(exprs) { var $x = ["EBlock",12,exprs]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EFor = function(it,expr) { var $x = ["EFor",13,it,expr]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EIn = function(e1,e2) { var $x = ["EIn",14,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EIf = function(econd,eif,eelse) { var $x = ["EIf",15,econd,eif,eelse]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EWhile = function(econd,e,normalWhile) { var $x = ["EWhile",16,econd,e,normalWhile]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ESwitch = function(e,cases,edef) { var $x = ["ESwitch",17,e,cases,edef]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ETry = function(e,catches) { var $x = ["ETry",18,e,catches]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EReturn = function(e) { var $x = ["EReturn",19,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBreak = ["EBreak",20];
haxe_macro_ExprDef.EBreak.toString = $estr;
haxe_macro_ExprDef.EBreak.__enum__ = haxe_macro_ExprDef;
haxe_macro_ExprDef.EContinue = ["EContinue",21];
haxe_macro_ExprDef.EContinue.toString = $estr;
haxe_macro_ExprDef.EContinue.__enum__ = haxe_macro_ExprDef;
haxe_macro_ExprDef.EUntyped = function(e) { var $x = ["EUntyped",22,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EThrow = function(e) { var $x = ["EThrow",23,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECast = function(e,t) { var $x = ["ECast",24,e,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EDisplay = function(e,isCall) { var $x = ["EDisplay",25,e,isCall]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EDisplayNew = function(t) { var $x = ["EDisplayNew",26,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ETernary = function(econd,eif,eelse) { var $x = ["ETernary",27,econd,eif,eelse]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECheckType = function(e,t) { var $x = ["ECheckType",28,e,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EMeta = function(s,e) { var $x = ["EMeta",29,s,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
var haxe_macro_ComplexType = { __ename__ : true, __constructs__ : ["TPath","TFunction","TAnonymous","TParent","TExtend","TOptional"] };
haxe_macro_ComplexType.TPath = function(p) { var $x = ["TPath",0,p]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TFunction = function(args,ret) { var $x = ["TFunction",1,args,ret]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TAnonymous = function(fields) { var $x = ["TAnonymous",2,fields]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TParent = function(t) { var $x = ["TParent",3,t]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TExtend = function(p,fields) { var $x = ["TExtend",4,p,fields]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TOptional = function(t) { var $x = ["TOptional",5,t]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = ["haxe","rtti","Meta"];
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var hex_collection_IHashMap = function() { };
$hxClasses["hex.collection.IHashMap"] = hex_collection_IHashMap;
hex_collection_IHashMap.__name__ = ["hex","collection","IHashMap"];
hex_collection_IHashMap.prototype = {
	__class__: hex_collection_IHashMap
};
var hex_collection_HashMap = function() {
	this._init();
};
$hxClasses["hex.collection.HashMap"] = hex_collection_HashMap;
hex_collection_HashMap.__name__ = ["hex","collection","HashMap"];
hex_collection_HashMap.__interfaces__ = [hex_collection_IHashMap];
hex_collection_HashMap.prototype = {
	_init: function() {
		this._keys = new haxe_ds_StringMap();
		this._values = new haxe_ds_StringMap();
		this._size = 0;
	}
	,clear: function() {
		this._init();
	}
	,containsKey: function(key) {
		if(key != null) {
			var this1 = this._keys;
			var key1 = this._getName(key);
			var _this = this1;
			if(__map_reserved[key1] != null) {
				return _this.existsReserved(key1);
			} else {
				return _this.h.hasOwnProperty(key1);
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException(Std.string(this) + ".containsKey() failed. key can't be null",{ fileName : "HashMap.hx", lineNumber : 57, className : "hex.collection.HashMap", methodName : "containsKey"}));
		}
	}
	,containsValue: function(value) {
		if(value != null) {
			var this1 = this._values;
			var key = this._getName(value);
			var _this = this1;
			if(__map_reserved[key] != null) {
				return _this.existsReserved(key);
			} else {
				return _this.h.hasOwnProperty(key);
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException(Std.string(this) + ".containsValue() failed. value can't be null",{ fileName : "HashMap.hx", lineNumber : 80, className : "hex.collection.HashMap", methodName : "containsValue"}));
		}
	}
	,get: function(key) {
		if(key != null) {
			var this1 = this._keys;
			var key1 = this._getName(key);
			var _this = this1;
			if(__map_reserved[key1] != null) {
				return _this.getReserved(key1);
			} else {
				return _this.h[key1];
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException(Std.string(this) + ".get() failed. key can't be null",{ fileName : "HashMap.hx", lineNumber : 112, className : "hex.collection.HashMap", methodName : "get"}));
		}
	}
	,isEmpty: function() {
		return this._size == 0;
	}
	,put: function(key,value) {
		var oldValue = null;
		if(key == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException(Std.string(this) + ".put() failed. key can't be null",{ fileName : "HashMap.hx", lineNumber : 147, className : "hex.collection.HashMap", methodName : "put"}));
		} else if(value == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException(Std.string(this) + ".put() failed. value can't be null",{ fileName : "HashMap.hx", lineNumber : 151, className : "hex.collection.HashMap", methodName : "put"}));
		} else {
			if(this.containsKey(key)) {
				oldValue = this.remove(key);
			}
			this._size++;
			var this1 = this._keys;
			var key1 = this._getName(key);
			var _this = this1;
			if(__map_reserved[key1] != null) {
				_this.setReserved(key1,value);
			} else {
				_this.h[key1] = value;
			}
			var this2 = this._values;
			var key2 = this._getName(value);
			var _this1 = this2;
			if(__map_reserved[key2] != null) {
				_this1.setReserved(key2,key);
			} else {
				_this1.h[key2] = key;
			}
			return oldValue;
		}
	}
	,_getName: function(o) {
		var s;
		if(typeof(o) == "string") {
			s = "_S" + Std.string(o);
		} else if(typeof(o) == "boolean") {
			s = "_B" + Std.string(o);
		} else if(typeof(o) == "number" || typeof(o) == "number" && ((o | 0) === o)) {
			s = "_N" + Std.string(o);
		} else {
			s = "_O" + hex_core_HashCodeFactory.getKey(o);
		}
		return s;
	}
	,remove: function(key) {
		if(key != null) {
			var sKID = this._getName(key);
			var _this = this._keys;
			if(__map_reserved[sKID] != null?_this.existsReserved(sKID):_this.h.hasOwnProperty(sKID)) {
				var _this1 = this._keys;
				var sVID = this._getName(__map_reserved[sKID] != null?_this1.getReserved(sKID):_this1.h[sKID]);
				var _this2 = this._keys;
				var value = __map_reserved[sKID] != null?_this2.getReserved(sKID):_this2.h[sKID];
				this._values.remove(sVID);
				this._keys.remove(sKID);
				this._size--;
				return value;
			} else {
				return null;
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException(Std.string(this) + ".remove() failed. key can't be null",{ fileName : "HashMap.hx", lineNumber : 236, className : "hex.collection.HashMap", methodName : "remove"}));
		}
	}
	,size: function() {
		return this._size;
	}
	,getKeys: function() {
		var a = [];
		var _this = this._values;
		var it = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(it.hasNext()) a.push(it.next());
		return a;
	}
	,getValues: function() {
		var a = [];
		var _this = this._keys;
		var it = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(it.hasNext()) a.push(it.next());
		return a;
	}
	,__class__: hex_collection_HashMap
};
var hex_event_IObservable = function() { };
$hxClasses["hex.event.IObservable"] = hex_event_IObservable;
hex_event_IObservable.__name__ = ["hex","event","IObservable"];
hex_event_IObservable.prototype = {
	__class__: hex_event_IObservable
};
var hex_collection_ILocator = function() { };
$hxClasses["hex.collection.ILocator"] = hex_collection_ILocator;
hex_collection_ILocator.__name__ = ["hex","collection","ILocator"];
hex_collection_ILocator.__interfaces__ = [hex_event_IObservable];
hex_collection_ILocator.prototype = {
	__class__: hex_collection_ILocator
};
var hex_collection_ILocatorListener = function() { };
$hxClasses["hex.collection.ILocatorListener"] = hex_collection_ILocatorListener;
hex_collection_ILocatorListener.__name__ = ["hex","collection","ILocatorListener"];
hex_collection_ILocatorListener.prototype = {
	__class__: hex_collection_ILocatorListener
};
var hex_collection_Locator = function() {
	this._map = new hex_collection_HashMap();
	this._dispatcher = new hex_event_ClosureDispatcher();
};
$hxClasses["hex.collection.Locator"] = hex_collection_Locator;
hex_collection_Locator.__name__ = ["hex","collection","Locator"];
hex_collection_Locator.__interfaces__ = [hex_collection_ILocator];
hex_collection_Locator.prototype = {
	clear: function() {
		this._map.clear();
	}
	,release: function() {
		this.clear();
		this._dispatcher.removeAllListeners();
	}
	,isEmpty: function() {
		return this._map.size() == 0;
	}
	,keys: function() {
		return this._map.getKeys();
	}
	,values: function() {
		return this._map.getValues();
	}
	,isRegisteredWithKey: function(key) {
		return this._map.containsKey(key);
	}
	,locate: function(key) {
		if(this.isRegisteredWithKey(key)) {
			return this._map.get(key);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NoSuchElementException("Can't find item with '" + Std.string(key) + "' key in " + this.toString(),{ fileName : "Locator.hx", lineNumber : 63, className : "hex.collection.Locator", methodName : "locate"}));
		}
	}
	,add: function(m) {
		var iterator = m.keys();
		while(iterator.hasNext()) {
			var key = iterator.next();
			this.register(key,m.h[key]);
		}
	}
	,register: function(key,element) {
		if(this._map.containsKey(key)) {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("item is already registered with '" + Std.string(key) + "' key in " + this.toString(),{ fileName : "Locator.hx", lineNumber : 82, className : "hex.collection.Locator", methodName : "register"}));
		} else {
			this._map.put(key,element);
			this._dispatchRegisterEvent(key,element);
			return true;
		}
	}
	,unregister: function(key) {
		if(this.isRegisteredWithKey(key)) {
			this._map.remove(key);
			this._dispatchUnregisterEvent(key);
			return true;
		} else {
			return false;
		}
	}
	,addHandler: function(messageType,callback) {
		return this._dispatcher.addHandler(messageType,callback);
	}
	,removeHandler: function(messageType,callback) {
		return this._dispatcher.removeHandler(messageType,callback);
	}
	,addListener: function(listener) {
		var b = this._dispatcher.addHandler("onRegister",$bind(listener,listener.onRegister));
		if(!this._dispatcher.addHandler("onUnregister",$bind(listener,listener.onUnregister))) {
			return b;
		} else {
			return true;
		}
	}
	,removeListener: function(listener) {
		var b = this._dispatcher.removeHandler("onRegister",$bind(listener,listener.onRegister));
		if(!this._dispatcher.removeHandler("onUnregister",$bind(listener,listener.onUnregister))) {
			return b;
		} else {
			return true;
		}
	}
	,toString: function() {
		return hex_log_Stringifier.stringify(this);
	}
	,_dispatchRegisterEvent: function(key,element) {
	}
	,_dispatchUnregisterEvent: function(key) {
	}
	,__class__: hex_collection_Locator
};
var hex_collection_LocatorMessage = function() {
};
$hxClasses["hex.collection.LocatorMessage"] = hex_collection_LocatorMessage;
hex_collection_LocatorMessage.__name__ = ["hex","collection","LocatorMessage"];
hex_collection_LocatorMessage.prototype = {
	__class__: hex_collection_LocatorMessage
};
var hex_compiler_parser_xml_XmlCompiler = function() { };
$hxClasses["hex.compiler.parser.xml.XmlCompiler"] = hex_compiler_parser_xml_XmlCompiler;
hex_compiler_parser_xml_XmlCompiler.__name__ = ["hex","compiler","parser","xml","XmlCompiler"];
var hex_config_stateful_IStatefulConfig = function() { };
$hxClasses["hex.config.stateful.IStatefulConfig"] = hex_config_stateful_IStatefulConfig;
hex_config_stateful_IStatefulConfig.__name__ = ["hex","config","stateful","IStatefulConfig"];
hex_config_stateful_IStatefulConfig.prototype = {
	__class__: hex_config_stateful_IStatefulConfig
};
var hex_config_stateless_IStatelessConfig = function() { };
$hxClasses["hex.config.stateless.IStatelessConfig"] = hex_config_stateless_IStatelessConfig;
hex_config_stateless_IStatelessConfig.__name__ = ["hex","config","stateless","IStatelessConfig"];
hex_config_stateless_IStatelessConfig.prototype = {
	__class__: hex_config_stateless_IStatelessConfig
};
var hex_control_ICompletable = function() { };
$hxClasses["hex.control.ICompletable"] = hex_control_ICompletable;
hex_control_ICompletable.__name__ = ["hex","control","ICompletable"];
hex_control_ICompletable.prototype = {
	__class__: hex_control_ICompletable
};
var hex_control_Request = function(executionPayloads) {
	this._executionPayloads = executionPayloads;
};
$hxClasses["hex.control.Request"] = hex_control_Request;
hex_control_Request.__name__ = ["hex","control","Request"];
hex_control_Request.prototype = {
	getExecutionPayloads: function() {
		return this._executionPayloads;
	}
	,clone: function() {
		return new hex_control_Request(this._executionPayloads);
	}
	,__class__: hex_control_Request
};
var hex_control_ResultResponder = function(result,errorMessage) {
	if(errorMessage == null) {
		errorMessage = "";
	}
	this._result = result;
	this._errorMessage = errorMessage;
};
$hxClasses["hex.control.ResultResponder"] = hex_control_ResultResponder;
hex_control_ResultResponder.__name__ = ["hex","control","ResultResponder"];
hex_control_ResultResponder.__interfaces__ = [hex_control_ICompletable];
hex_control_ResultResponder.prototype = {
	complete: function(result) {
		throw new js__$Boot_HaxeError(new hex_error_VirtualMethodException(Std.string(this) + ".complete must be overridden",{ fileName : "ResultResponder.hx", lineNumber : 23, className : "hex.control.ResultResponder", methodName : "complete"}));
	}
	,fail: function(error) {
		throw new js__$Boot_HaxeError(new hex_error_VirtualMethodException(Std.string(this) + ".fail must be overridden",{ fileName : "ResultResponder.hx", lineNumber : 28, className : "hex.control.ResultResponder", methodName : "fail"}));
	}
	,onComplete: function(callback) {
		callback(this._result);
		return this;
	}
	,onFail: function(callback) {
		callback(this._errorMessage);
		return this;
	}
	,__class__: hex_control_ResultResponder
};
var hex_di_IInjectorContainer = function() { };
$hxClasses["hex.di.IInjectorContainer"] = hex_di_IInjectorContainer;
hex_di_IInjectorContainer.__name__ = ["hex","di","IInjectorContainer"];
var hex_control_command_ICommand = function() { };
$hxClasses["hex.control.command.ICommand"] = hex_control_command_ICommand;
hex_control_command_ICommand.__name__ = ["hex","control","command","ICommand"];
hex_control_command_ICommand.prototype = {
	__class__: hex_control_command_ICommand
};
var hex_control_async_IAsyncCommand = function() { };
$hxClasses["hex.control.async.IAsyncCommand"] = hex_control_async_IAsyncCommand;
hex_control_async_IAsyncCommand.__name__ = ["hex","control","async","IAsyncCommand"];
hex_control_async_IAsyncCommand.__interfaces__ = [hex_control_command_ICommand];
hex_control_async_IAsyncCommand.prototype = {
	__class__: hex_control_async_IAsyncCommand
	,__properties__: {get_isCancelled:"get_isCancelled",get_hasFailed:"get_hasFailed",get_hasCompleted:"get_hasCompleted",get_isRunning:"get_isRunning",get_wasUsed:"get_wasUsed"}
};
var hex_control_async_AsyncCommand = function() {
	this.executeMethodName = "execute";
	this._status = "WAS_NEVER_USED";
	this._dispatcher = new hex_event_ClosureDispatcher();
};
$hxClasses["hex.control.async.AsyncCommand"] = hex_control_async_AsyncCommand;
hex_control_async_AsyncCommand.__name__ = ["hex","control","async","AsyncCommand"];
hex_control_async_AsyncCommand.__interfaces__ = [hex_control_async_IAsyncCommand];
hex_control_async_AsyncCommand.isDetained = function(aSynCommand) {
	return hex_control_async_AsyncCommand._POOL.h.__keys__[aSynCommand.__id__] != null;
};
hex_control_async_AsyncCommand.detain = function(aSynCommand) {
	hex_control_async_AsyncCommand._POOL.set(aSynCommand,true);
};
hex_control_async_AsyncCommand.release = function(aSynCommand) {
	if(hex_control_async_AsyncCommand._POOL.h.__keys__[aSynCommand.__id__] != null) {
		hex_control_async_AsyncCommand._POOL.remove(aSynCommand);
	}
};
hex_control_async_AsyncCommand.prototype = {
	getLogger: function() {
		return this._owner.getLogger();
	}
	,preExecute: function(request) {
		if(this.get_wasUsed()) {
			this._throwExecutionIllegalStateError();
		}
		this._status = "IS_RUNNING";
		hex_control_async_AsyncCommand.detain(this);
	}
	,cancel: function() {
		this._handleCancel();
	}
	,addAsyncCommandListener: function(listener) {
		this.addCompleteHandler($bind(listener,listener.onAsyncCommandComplete));
		this.addFailHandler($bind(listener,listener.onAsyncCommandFail));
		this.addCancelHandler($bind(listener,listener.onAsyncCommandCancel));
	}
	,removeAsyncCommandListener: function(listener) {
		this.removeCompleteHandler($bind(listener,listener.onAsyncCommandComplete));
		this.removeFailHandler($bind(listener,listener.onAsyncCommandFail));
		this.removeCancelHandler($bind(listener,listener.onAsyncCommandCancel));
	}
	,addCompleteHandler: function(callback) {
		if(this.get_hasCompleted()) {
			callback(this);
		} else {
			this._dispatcher.addHandler(hex_control_async_AsyncCommandMessage.COMPLETE,callback);
		}
	}
	,removeCompleteHandler: function(callback) {
		this._dispatcher.removeHandler(hex_control_async_AsyncCommandMessage.COMPLETE,callback);
	}
	,addFailHandler: function(callback) {
		if(this.get_hasFailed()) {
			callback(this);
		} else {
			this._dispatcher.addHandler(hex_control_async_AsyncCommandMessage.FAIL,callback);
		}
	}
	,removeFailHandler: function(callback) {
		this._dispatcher.removeHandler(hex_control_async_AsyncCommandMessage.FAIL,callback);
	}
	,addCancelHandler: function(callback) {
		if(this.get_isCancelled()) {
			callback(this);
		} else {
			this._dispatcher.addHandler(hex_control_async_AsyncCommandMessage.CANCEL,callback);
		}
	}
	,removeCancelHandler: function(callback) {
		this._dispatcher.removeHandler(hex_control_async_AsyncCommandMessage.CANCEL,callback);
	}
	,_handleComplete: function() {
		if(this.get_wasUsed() && this._status != "IS_RUNNING") {
			this._throwIllegalStateError("_handleComplete");
		}
		this._status = "IS_COMPLETED";
		this._dispatcher.dispatch(hex_control_async_AsyncCommandMessage.COMPLETE,[this]);
		this._release();
	}
	,_handleFail: function() {
		if(this.get_wasUsed() && this._status != "IS_RUNNING") {
			this._throwIllegalStateError("_handleFail");
		}
		this._status = "IS_FAILED";
		this._dispatcher.dispatch(hex_control_async_AsyncCommandMessage.FAIL,[this]);
		this._release();
	}
	,_handleCancel: function() {
		if(this.get_wasUsed() && this._status != "IS_RUNNING") {
			this._throwIllegalStateError("_handleCancel");
		}
		this._status = "IS_CANCELLED";
		this._dispatcher.dispatch(hex_control_async_AsyncCommandMessage.CANCEL,[this]);
		this._release();
	}
	,get_wasUsed: function() {
		return this._status != "WAS_NEVER_USED";
	}
	,get_isRunning: function() {
		return this._status == "IS_RUNNING";
	}
	,get_hasCompleted: function() {
		return this._status == "IS_COMPLETED";
	}
	,get_hasFailed: function() {
		return this._status == "IS_FAILED";
	}
	,get_isCancelled: function() {
		return this._status == "IS_CANCELLED";
	}
	,getResult: function() {
		return null;
	}
	,getReturnedExecutionPayload: function() {
		return null;
	}
	,getOwner: function() {
		return this._owner;
	}
	,setOwner: function(owner) {
		if(this._owner == null) {
			this._owner = owner;
		}
	}
	,_removeAllListeners: function() {
		this._dispatcher.removeAllListeners();
	}
	,_throwExecutionIllegalStateError: function() {
		var msg = "";
		if(this.get_isRunning()) {
			msg = "'execute' call failed. This command is already processing.";
		} else if(this.get_isCancelled()) {
			msg = "'execute' call failed. This command is cancelled.";
		} else if(this.get_hasCompleted()) {
			msg = "'execute' call failed. This command is completed and can't be executed twice.";
		} else if(this.get_hasFailed()) {
			msg = "'execute' call failed. This command has failed and can't be executed twice.";
		} else if(!this.get_wasUsed()) {
			msg = "'execute' call failed. 'preExecute' should be called before.";
		}
		this._release();
		throw new js__$Boot_HaxeError(new hex_error_IllegalStateException(msg,{ fileName : "AsyncCommand.hx", lineNumber : 240, className : "hex.control.async.AsyncCommand", methodName : "_throwExecutionIllegalStateError"}));
	}
	,_throwIllegalStateError: function(process) {
		var msg = "";
		if(this.get_isCancelled()) {
			msg = "'" + process + "' call failed in '" + hex_log_Stringifier.stringify(this) + "'. This command was already cancelled.";
		} else if(this.get_hasCompleted()) {
			msg = "'" + process + "' call failed in '" + hex_log_Stringifier.stringify(this) + "'. This command was already completed.";
		} else if(this.get_hasFailed()) {
			msg = "'" + process + "' call failed in '" + hex_log_Stringifier.stringify(this) + "'. This command has already failed.";
		}
		this._release();
		throw new js__$Boot_HaxeError(new hex_error_IllegalStateException(msg,{ fileName : "AsyncCommand.hx", lineNumber : 261, className : "hex.control.async.AsyncCommand", methodName : "_throwIllegalStateError"}));
	}
	,_release: function() {
		this._removeAllListeners();
		hex_control_async_AsyncCommand.release(this);
	}
	,__class__: hex_control_async_AsyncCommand
	,__properties__: {get_isCancelled:"get_isCancelled",get_hasFailed:"get_hasFailed",get_hasCompleted:"get_hasCompleted",get_isRunning:"get_isRunning",get_wasUsed:"get_wasUsed"}
};
var hex_control_async_AsyncCommandMessage = function() {
};
$hxClasses["hex.control.async.AsyncCommandMessage"] = hex_control_async_AsyncCommandMessage;
hex_control_async_AsyncCommandMessage.__name__ = ["hex","control","async","AsyncCommandMessage"];
hex_control_async_AsyncCommandMessage.prototype = {
	__class__: hex_control_async_AsyncCommandMessage
};
var hex_control_async_AsyncCommandUtil = function() {
	throw new js__$Boot_HaxeError(new hex_error_PrivateConstructorException("'AsyncCommandUtil' class can't be instantiated.",{ fileName : "AsyncCommandUtil.hx", lineNumber : 15, className : "hex.control.async.AsyncCommandUtil", methodName : "new"}));
};
$hxClasses["hex.control.async.AsyncCommandUtil"] = hex_control_async_AsyncCommandUtil;
hex_control_async_AsyncCommandUtil.__name__ = ["hex","control","async","AsyncCommandUtil"];
hex_control_async_AsyncCommandUtil.addListenersToAsyncCommand = function(handlers,methodToAddListener) {
	var _g = 0;
	while(_g < handlers.length) {
		var handler = handlers[_g];
		++_g;
		methodToAddListener(handler);
	}
};
hex_control_async_AsyncCommandUtil.prototype = {
	__class__: hex_control_async_AsyncCommandUtil
};
var hex_control_async_IAsyncCommandListener = function() { };
$hxClasses["hex.control.async.IAsyncCommandListener"] = hex_control_async_IAsyncCommandListener;
hex_control_async_IAsyncCommandListener.__name__ = ["hex","control","async","IAsyncCommandListener"];
hex_control_async_IAsyncCommandListener.prototype = {
	__class__: hex_control_async_IAsyncCommandListener
};
var hex_control_command_ICommandMapping = function() { };
$hxClasses["hex.control.command.ICommandMapping"] = hex_control_command_ICommandMapping;
hex_control_command_ICommandMapping.__name__ = ["hex","control","command","ICommandMapping"];
hex_control_command_ICommandMapping.prototype = {
	__class__: hex_control_command_ICommandMapping
	,__properties__: {get_hasMappingResult:"get_hasMappingResult",get_hasCancelHandler:"get_hasCancelHandler",get_hasFailHandler:"get_hasFailHandler",get_hasCompleteHandler:"get_hasCompleteHandler",get_hasPayload:"get_hasPayload",get_isFiredOnce:"get_isFiredOnce",get_hasGuard:"get_hasGuard"}
};
var hex_control_command_CommandMapping = function(commandClass) {
	this._commandClass = commandClass;
	this.isFiredOnce = false;
};
$hxClasses["hex.control.command.CommandMapping"] = hex_control_command_CommandMapping;
hex_control_command_CommandMapping.__name__ = ["hex","control","command","CommandMapping"];
hex_control_command_CommandMapping.__interfaces__ = [hex_control_command_ICommandMapping];
hex_control_command_CommandMapping.prototype = {
	getCommandClass: function() {
		return this._commandClass;
	}
	,get_hasGuard: function() {
		return this._guards != null;
	}
	,getGuards: function() {
		return this._guards;
	}
	,withGuard: function(guard) {
		if(this._guards == null) {
			this._guards = [];
		}
		this._guards.push(guard);
		return this;
	}
	,get_isFiredOnce: function() {
		return this.isFiredOnce;
	}
	,once: function() {
		this.isFiredOnce = true;
		return this;
	}
	,get_hasPayload: function() {
		return this._payloads != null;
	}
	,getPayloads: function() {
		return this._payloads;
	}
	,withPayload: function(payload) {
		if(this._payloads == null) {
			this._payloads = [];
		}
		this._payloads.push(payload);
		return this;
	}
	,getCompleteHandlers: function() {
		return this._completeHandlers;
	}
	,get_hasCompleteHandler: function() {
		return this._completeHandlers != null;
	}
	,withCompleteHandler: function(handler) {
		if(this._completeHandlers == null) {
			this._completeHandlers = [];
		}
		this._completeHandlers.push(handler);
		return this;
	}
	,getFailHandlers: function() {
		return this._failHandlers;
	}
	,get_hasFailHandler: function() {
		return this._failHandlers != null;
	}
	,withFailHandler: function(handler) {
		if(this._failHandlers == null) {
			this._failHandlers = [];
		}
		this._failHandlers.push(handler);
		return this;
	}
	,getCancelHandlers: function() {
		return this._cancelHandlers;
	}
	,get_hasCancelHandler: function() {
		return this._cancelHandlers != null;
	}
	,withCancelHandler: function(handler) {
		if(this._cancelHandlers == null) {
			this._cancelHandlers = [];
		}
		this._cancelHandlers.push(handler);
		return this;
	}
	,setContextOwner: function(contextOwner) {
		this._contextOwner = contextOwner;
	}
	,getContextOwner: function() {
		return this._contextOwner;
	}
	,get_hasMappingResult: function() {
		return this._mappingResults != null;
	}
	,withMappingResult: function(mappingResult) {
		if(this._mappingResults == null) {
			this._mappingResults = [];
		}
		this._mappingResults.push(mappingResult);
		return this;
	}
	,setLastCommandInstance: function(command) {
		this._command = command;
	}
	,getPayloadResult: function() {
		var payload = [];
		if(this._mappingResults != null) {
			var _g = 0;
			var _g1 = this._mappingResults;
			while(_g < _g1.length) {
				var mapping = _g1[_g];
				++_g;
				var command = (js_Boot.__cast(mapping , hex_control_command_CommandMapping))._command;
				if(command != null) {
					var returnedExecutionPayload = command.getReturnedExecutionPayload();
					if(returnedExecutionPayload != null) {
						payload = payload.concat(command.getReturnedExecutionPayload());
					}
				}
			}
		}
		if(payload.length > 0) {
			return payload;
		} else {
			return null;
		}
	}
	,__class__: hex_control_command_CommandMapping
	,__properties__: {get_hasMappingResult:"get_hasMappingResult",get_hasCancelHandler:"get_hasCancelHandler",get_hasFailHandler:"get_hasFailHandler",get_hasCompleteHandler:"get_hasCompleteHandler",get_hasPayload:"get_hasPayload",get_isFiredOnce:"get_isFiredOnce",get_hasGuard:"get_hasGuard"}
};
var hex_control_guard_GuardUtil = function() {
	throw new js__$Boot_HaxeError(new hex_error_PrivateConstructorException("'GuardUtil' class can't be instantiated.",{ fileName : "GuardUtil.hx", lineNumber : 14, className : "hex.control.guard.GuardUtil", methodName : "new"}));
};
$hxClasses["hex.control.guard.GuardUtil"] = hex_control_guard_GuardUtil;
hex_control_guard_GuardUtil.__name__ = ["hex","control","guard","GuardUtil"];
hex_control_guard_GuardUtil.guardsApprove = function(guards,injector) {
	if(guards != null) {
		var b = true;
		var _g = 0;
		while(_g < guards.length) {
			var guard = guards[_g];
			++_g;
			if(js_Boot.__instanceof(guard,Class)) {
				var scope = injector != null?injector.instantiateUnmapped(guard):Type.createInstance(guard,[]);
				b = Reflect.field(scope,"approve").apply(scope,[]);
			} else if(Object.prototype.hasOwnProperty.call(guard,"approve")) {
				guard = Reflect.field(guard,"approve");
			}
			if(Reflect.isFunction(guard)) {
				b = guard();
			}
			if(!b) {
				return false;
			}
		}
	}
	return true;
};
hex_control_guard_GuardUtil.prototype = {
	__class__: hex_control_guard_GuardUtil
};
var hex_control_macro_IMacroExecutor = function() { };
$hxClasses["hex.control.macro.IMacroExecutor"] = hex_control_macro_IMacroExecutor;
hex_control_macro_IMacroExecutor.__name__ = ["hex","control","macro","IMacroExecutor"];
hex_control_macro_IMacroExecutor.prototype = {
	__class__: hex_control_macro_IMacroExecutor
	,__properties__: {get_commandIndex:"get_commandIndex",get_hasRunEveryCommand:"get_hasRunEveryCommand",get_hasNextCommandMapping:"get_hasNextCommandMapping"}
};
var hex_control_macro_Macro = function() {
	hex_control_async_AsyncCommand.call(this);
	this.set_isAtomic(true);
	this.set_isInSequenceMode(true);
};
$hxClasses["hex.control.macro.Macro"] = hex_control_macro_Macro;
hex_control_macro_Macro.__name__ = ["hex","control","macro","Macro"];
hex_control_macro_Macro.__interfaces__ = [hex_control_async_IAsyncCommandListener];
hex_control_macro_Macro.__super__ = hex_control_async_AsyncCommand;
hex_control_macro_Macro.prototype = $extend(hex_control_async_AsyncCommand.prototype,{
	_prepare: function() {
		throw new js__$Boot_HaxeError(new hex_error_VirtualMethodException(Std.string(this) + ".execute must be overridden",{ fileName : "Macro.hx", lineNumber : 34, className : "hex.control.macro.Macro", methodName : "_prepare"}));
	}
	,preExecute: function(request) {
		if(this.macroExecutor != null) {
			this.macroExecutor.setAsyncCommandListener(this);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("macroExecutor can't be null in '" + hex_log_Stringifier.stringify(this) + "'",{ fileName : "Macro.hx", lineNumber : 45, className : "hex.control.macro.Macro", methodName : "preExecute"}));
		}
		if(request != null) {
			this._request = request;
		}
		this._prepare();
		hex_control_async_AsyncCommand.prototype.preExecute.call(this,request);
	}
	,execute: function(request) {
		if(!this.get_isRunning()) {
			this._throwExecutionIllegalStateError();
		}
		this._executeNextCommand();
	}
	,add: function(commandClass) {
		return this.macroExecutor.add(commandClass);
	}
	,addMapping: function(mapping) {
		return this.macroExecutor.addMapping(mapping);
	}
	,_executeCommand: function() {
		var command = this.macroExecutor.executeNextCommand(this._request);
		if(command != null) {
			var isAsync = js_Boot.__instanceof(command,hex_control_async_IAsyncCommand);
			if(!isAsync || this.get_isInParallelMode()) {
				this._executeNextCommand();
			}
		}
	}
	,_executeNextCommand: function() {
		if(this.macroExecutor.get_hasNextCommandMapping()) {
			this._executeCommand();
		} else if(this.macroExecutor.get_hasRunEveryCommand()) {
			this._handleComplete();
		}
	}
	,get_isAtomic: function() {
		return this.isAtomic;
	}
	,set_isAtomic: function(value) {
		this.isAtomic = value;
		return value;
	}
	,get_isInSequenceMode: function() {
		return this.isInSequenceMode;
	}
	,set_isInSequenceMode: function(value) {
		this.isInSequenceMode = value;
		return value;
	}
	,get_isInParallelMode: function() {
		return !this.get_isInSequenceMode();
	}
	,set_isInParallelMode: function(value) {
		this.set_isInSequenceMode(!value);
		return this.get_isInSequenceMode();
	}
	,onAsyncCommandComplete: function(cmd) {
		this.macroExecutor.asyncCommandCalled(cmd);
		this._executeNextCommand();
	}
	,onAsyncCommandFail: function(cmd) {
		if(cmd != null) {
			this.macroExecutor.asyncCommandCalled(cmd);
		}
		if(this.get_isAtomic()) {
			if(this.get_isRunning()) {
				this._handleFail();
			}
		} else {
			this._executeNextCommand();
		}
	}
	,onAsyncCommandCancel: function(cmd) {
		this.macroExecutor.asyncCommandCalled(cmd);
		if(this.get_isAtomic()) {
			this.cancel();
		} else {
			this._executeNextCommand();
		}
	}
	,toString: function() {
		return hex_log_Stringifier.stringify(this);
	}
	,__class__: hex_control_macro_Macro
	,__properties__: $extend(hex_control_async_AsyncCommand.prototype.__properties__,{set_isInParallelMode:"set_isInParallelMode",get_isInParallelMode:"get_isInParallelMode",set_isInSequenceMode:"set_isInSequenceMode",get_isInSequenceMode:"get_isInSequenceMode",set_isAtomic:"set_isAtomic",get_isAtomic:"get_isAtomic"})
});
var hex_control_macro_MacroExecutor = function() {
	this._commandMappingCollection = [];
	this._runningAsyncCommandList = [];
	this._commandIndex = 0;
	this._commandCalledCount = 0;
};
$hxClasses["hex.control.macro.MacroExecutor"] = hex_control_macro_MacroExecutor;
hex_control_macro_MacroExecutor.__name__ = ["hex","control","macro","MacroExecutor"];
hex_control_macro_MacroExecutor.__interfaces__ = [hex_control_macro_IMacroExecutor];
hex_control_macro_MacroExecutor.prototype = {
	executeCommand: function(mapping,request) {
		var injector = null;
		var contextOwner = mapping.getContextOwner();
		if(contextOwner != null) {
			injector = contextOwner.getInjector();
		} else {
			injector = this.injector;
		}
		var payloads = mapping.getPayloads();
		if(request != null) {
			var requestPayloads = request.getExecutionPayloads();
			if(requestPayloads != null) {
				if(payloads != null) {
					payloads = payloads.concat(request.getExecutionPayloads());
				} else {
					payloads = requestPayloads;
				}
			}
		}
		if(mapping.get_hasMappingResult()) {
			if(payloads != null) {
				payloads = payloads.concat(mapping.getPayloadResult());
			} else {
				payloads = mapping.getPayloadResult();
			}
		}
		if(payloads != null) {
			hex_control_payload_PayloadUtil.mapPayload(payloads,injector);
		}
		var command = null;
		if(!mapping.get_hasGuard() || hex_control_guard_GuardUtil.guardsApprove(mapping.getGuards(),injector)) {
			command = injector.getOrCreateNewInstance(mapping.getCommandClass());
			mapping.setLastCommandInstance(command);
		} else {
			this._commandCalledCount++;
			this._asyncCommandListener.onAsyncCommandFail(null);
			return null;
		}
		if(payloads != null) {
			hex_control_payload_PayloadUtil.unmapPayload(payloads,injector);
		}
		if(command != null) {
			if(injector.hasMapping(hex_module_IModule)) {
				command.setOwner(injector.getInstance(hex_module_IModule));
			}
			var isAsync = js_Boot.__instanceof(command,hex_control_async_IAsyncCommand);
			if(isAsync) {
				var aSyncCommand = js_Boot.__cast(command , hex_control_async_IAsyncCommand);
				aSyncCommand.preExecute(request);
				if(mapping.get_hasCompleteHandler()) {
					hex_control_async_AsyncCommandUtil.addListenersToAsyncCommand(mapping.getCompleteHandlers(),$bind(aSyncCommand,aSyncCommand.addCompleteHandler));
				}
				if(mapping.get_hasFailHandler()) {
					hex_control_async_AsyncCommandUtil.addListenersToAsyncCommand(mapping.getFailHandlers(),$bind(aSyncCommand,aSyncCommand.addFailHandler));
				}
				if(mapping.get_hasCancelHandler()) {
					hex_control_async_AsyncCommandUtil.addListenersToAsyncCommand(mapping.getCancelHandlers(),$bind(aSyncCommand,aSyncCommand.addCancelHandler));
				}
				aSyncCommand.addAsyncCommandListener(this._asyncCommandListener);
				this._runningAsyncCommandList.push(aSyncCommand);
			}
			Reflect.field(command,command.executeMethodName).apply(command,request != null?[request]:[]);
			if(!isAsync) {
				this._commandCalledCount++;
			}
		}
		return command;
	}
	,get_commandIndex: function() {
		return this._commandIndex;
	}
	,get_hasRunEveryCommand: function() {
		return this._commandCalledCount == this._commandMappingCollection.length;
	}
	,setAsyncCommandListener: function(listener) {
		this._asyncCommandListener = listener;
	}
	,get_hasNextCommandMapping: function() {
		if(this._commandMappingCollection != null) {
			return this._commandIndex < this._commandMappingCollection.length;
		} else {
			return false;
		}
	}
	,add: function(commandClass) {
		var mapping = new hex_control_command_CommandMapping(commandClass);
		this._commandMappingCollection.push(mapping);
		return mapping;
	}
	,addMapping: function(mapping) {
		this._commandMappingCollection.push(mapping);
		return mapping;
	}
	,executeNextCommand: function(request) {
		return this.executeCommand(this._commandMappingCollection[this._commandIndex++],request);
	}
	,asyncCommandCalled: function(asyncCommand) {
		var index = this._runningAsyncCommandList.indexOf(asyncCommand);
		if(index > -1) {
			this._runningAsyncCommandList.splice(index,1);
			this._commandCalledCount++;
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("Following command was not running: " + Std.string(asyncCommand),{ fileName : "MacroExecutor.hx", lineNumber : 185, className : "hex.control.macro.MacroExecutor", methodName : "asyncCommandCalled"}));
		}
	}
	,__class__: hex_control_macro_MacroExecutor
	,__properties__: {get_hasNextCommandMapping:"get_hasNextCommandMapping",get_hasRunEveryCommand:"get_hasRunEveryCommand",get_commandIndex:"get_commandIndex"}
};
var hex_control_payload_ExecutionPayload = function(data,type,name) {
	if(name == null) {
		name = "";
	}
	if(data == null) {
		throw new js__$Boot_HaxeError(new hex_error_NullPointerException("ExecutionPayload data can't be null",{ fileName : "ExecutionPayload.hx", lineNumber : 21, className : "hex.control.payload.ExecutionPayload", methodName : "new"}));
	}
	this._data = data;
	if(type != null) {
		this._type = type;
	} else {
		var o = this._data;
		this._type = o == null?null:js_Boot.getClass(o);
	}
	if(!js_Boot.__instanceof(this._data,this._type)) {
		throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("ExecutionPayload data '" + Std.string(this._data) + "' should be an instance of type '" + Std.string(this._type) + "'",{ fileName : "ExecutionPayload.hx", lineNumber : 37, className : "hex.control.payload.ExecutionPayload", methodName : "new"}));
	}
	this._name = name;
};
$hxClasses["hex.control.payload.ExecutionPayload"] = hex_control_payload_ExecutionPayload;
hex_control_payload_ExecutionPayload.__name__ = ["hex","control","payload","ExecutionPayload"];
hex_control_payload_ExecutionPayload.prototype = {
	getData: function() {
		return this._data;
	}
	,getType: function() {
		return this._type;
	}
	,getClassName: function() {
		return this._className;
	}
	,getName: function() {
		return this._name;
	}
	,withName: function(name) {
		this._name = name != null?name:"";
		return this;
	}
	,withClassName: function(className) {
		this._type = Type.resolveClass(className.split("<")[0]);
		if(this._type == null) {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("type '" + className + "' not found",{ fileName : "ExecutionPayload.hx", lineNumber : 78, className : "hex.control.payload.ExecutionPayload", methodName : "withClassName"}));
		}
		this._className = className;
		return this;
	}
	,__class__: hex_control_payload_ExecutionPayload
};
var hex_control_payload_PayloadUtil = function() {
	throw new js__$Boot_HaxeError(new hex_error_PrivateConstructorException("'PayloadUtil' class can't be instantiated.",{ fileName : "PayloadUtil.hx", lineNumber : 14, className : "hex.control.payload.PayloadUtil", methodName : "new"}));
};
$hxClasses["hex.control.payload.PayloadUtil"] = hex_control_payload_PayloadUtil;
hex_control_payload_PayloadUtil.__name__ = ["hex","control","payload","PayloadUtil"];
hex_control_payload_PayloadUtil.mapPayload = function(payloads,injector) {
	var _g = 0;
	while(_g < payloads.length) {
		var payload = payloads[_g];
		++_g;
		var className = payload.getClassName();
		if(className != null) {
			injector.mapClassNameToValue(payload.getClassName(),payload.getData(),payload.getName());
		} else {
			injector.mapToValue(payload.getType(),payload.getData(),payload.getName());
		}
	}
};
hex_control_payload_PayloadUtil.unmapPayload = function(payloads,injector) {
	var _g = 0;
	while(_g < payloads.length) {
		var payload = payloads[_g];
		++_g;
		var className = payload.getClassName();
		if(className != null) {
			injector.unmapClassName(payload.getClassName(),payload.getName());
		} else {
			injector.unmap(payload.getType(),payload.getName());
		}
	}
};
hex_control_payload_PayloadUtil.prototype = {
	__class__: hex_control_payload_PayloadUtil
};
var hex_core_HashCodeFactory = function() {
	throw new js__$Boot_HaxeError(new hex_error_PrivateConstructorException("This class can't be instantiated.",{ fileName : "HashCodeFactory.hx", lineNumber : 15, className : "hex.core.HashCodeFactory", methodName : "new"}));
};
$hxClasses["hex.core.HashCodeFactory"] = hex_core_HashCodeFactory;
hex_core_HashCodeFactory.__name__ = ["hex","core","HashCodeFactory"];
hex_core_HashCodeFactory.getNextKEY = function() {
	return hex_core_HashCodeFactory._nKEY++;
};
hex_core_HashCodeFactory.getNextName = function() {
	return "" + hex_core_HashCodeFactory._nKEY;
};
hex_core_HashCodeFactory.getKey = function(o) {
	if(hex_core_HashCodeFactory._M.h.__keys__[o.__id__] == null) {
		hex_core_HashCodeFactory._M.set(o,hex_core_HashCodeFactory.getNextKEY());
	}
	return hex_core_HashCodeFactory._M.h[o.__id__];
};
hex_core_HashCodeFactory.previewNextKey = function() {
	return hex_core_HashCodeFactory._nKEY;
};
hex_core_HashCodeFactory.prototype = {
	__class__: hex_core_HashCodeFactory
};
var hex_core_IAnnotationParsable = function() { };
$hxClasses["hex.core.IAnnotationParsable"] = hex_core_IAnnotationParsable;
hex_core_IAnnotationParsable.__name__ = ["hex","core","IAnnotationParsable"];
var hex_core_IApplicationAssembler = function() { };
$hxClasses["hex.core.IApplicationAssembler"] = hex_core_IApplicationAssembler;
hex_core_IApplicationAssembler.__name__ = ["hex","core","IApplicationAssembler"];
hex_core_IApplicationAssembler.prototype = {
	__class__: hex_core_IApplicationAssembler
};
var hex_di_IContextOwner = function() { };
$hxClasses["hex.di.IContextOwner"] = hex_di_IContextOwner;
hex_di_IContextOwner.__name__ = ["hex","di","IContextOwner"];
hex_di_IContextOwner.prototype = {
	__class__: hex_di_IContextOwner
};
var hex_core_IApplicationContext = function() { };
$hxClasses["hex.core.IApplicationContext"] = hex_core_IApplicationContext;
hex_core_IApplicationContext.__name__ = ["hex","core","IApplicationContext"];
hex_core_IApplicationContext.__interfaces__ = [hex_di_IContextOwner];
hex_core_IApplicationContext.prototype = {
	__class__: hex_core_IApplicationContext
};
var hex_core_IBuilder = function() { };
$hxClasses["hex.core.IBuilder"] = hex_core_IBuilder;
hex_core_IBuilder.__name__ = ["hex","core","IBuilder"];
hex_core_IBuilder.prototype = {
	__class__: hex_core_IBuilder
};
var hex_core_ICoreFactory = function() { };
$hxClasses["hex.core.ICoreFactory"] = hex_core_ICoreFactory;
hex_core_ICoreFactory.__name__ = ["hex","core","ICoreFactory"];
hex_core_ICoreFactory.__interfaces__ = [hex_collection_ILocator];
hex_core_ICoreFactory.prototype = {
	__class__: hex_core_ICoreFactory
};
var hex_data_GUID = function() { };
$hxClasses["hex.data.GUID"] = hex_data_GUID;
hex_data_GUID.__name__ = ["hex","data","GUID"];
hex_data_GUID.randomIntegerWithinRange = function(min,max) {
	return Math.floor(Math.random() * (1 + max - min) + min);
};
hex_data_GUID.createRandomIdentifier = function(length,radix) {
	if(radix == null) {
		radix = 61;
	}
	var characters = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];
	var id = [];
	if(radix > 61) {
		radix = 61;
	} else {
		radix = radix;
	}
	while(length-- > 0) id.push(characters[Math.floor(Math.random() * (1 + radix))]);
	return id.join("");
};
hex_data_GUID.uuid = function() {
	var specialChars = ["8","9","A","B"];
	return hex_data_GUID.createRandomIdentifier(8,15) + "" + hex_data_GUID.createRandomIdentifier(4,15) + "4" + hex_data_GUID.createRandomIdentifier(3,15) + "" + specialChars[Math.floor(Math.random() * 4)] + hex_data_GUID.createRandomIdentifier(3,15) + "" + hex_data_GUID.createRandomIdentifier(12,15);
};
var hex_di_IBasicInjector = function() { };
$hxClasses["hex.di.IBasicInjector"] = hex_di_IBasicInjector;
hex_di_IBasicInjector.__name__ = ["hex","di","IBasicInjector"];
hex_di_IBasicInjector.prototype = {
	__class__: hex_di_IBasicInjector
};
var hex_di_IDependencyInjector = function() { };
$hxClasses["hex.di.IDependencyInjector"] = hex_di_IDependencyInjector;
hex_di_IDependencyInjector.__name__ = ["hex","di","IDependencyInjector"];
hex_di_IDependencyInjector.__interfaces__ = [hex_di_IBasicInjector];
hex_di_IDependencyInjector.prototype = {
	__class__: hex_di_IDependencyInjector
};
var hex_di_IInjectorListener = function() { };
$hxClasses["hex.di.IInjectorListener"] = hex_di_IInjectorListener;
hex_di_IInjectorListener.__name__ = ["hex","di","IInjectorListener"];
hex_di_IInjectorListener.prototype = {
	__class__: hex_di_IInjectorListener
};
var hex_event_ITriggerOwner = function() { };
$hxClasses["hex.event.ITriggerOwner"] = hex_event_ITriggerOwner;
hex_event_ITriggerOwner.__name__ = ["hex","event","ITriggerOwner"];
var hex_di_Injector = function() {
	this.trigger = new hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener();
	this._classDescriptor = new hex_di_reflect_FastClassDescriptionProvider();
	this._mapping = new haxe_ds_StringMap();
	this._processedMapping = new haxe_ds_StringMap();
	this._managedObjects = new hex_collection_HashMap();
};
$hxClasses["hex.di.Injector"] = hex_di_Injector;
hex_di_Injector.__name__ = ["hex","di","Injector"];
hex_di_Injector.__interfaces__ = [hex_di_IDependencyInjector];
hex_di_Injector.prototype = {
	createChildInjector: function() {
		var injector = new hex_di_Injector();
		injector.setParent(this);
		return injector;
	}
	,setParent: function(injector) {
		this._parentInjector = injector;
	}
	,addListener: function(listener) {
		return this.trigger.connect(listener);
	}
	,removeListener: function(listener) {
		return this.trigger.disconnect(listener);
	}
	,mapToValue: function(clazz,value,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.map(clazz,name);
		var provider = new hex_di_provider_ValueProvider(value,_this._injector);
		if(_this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		_this.provider = provider;
	}
	,mapToType: function(clazz,type,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.map(clazz,name);
		var provider = new hex_di_provider_ClassProvider(type);
		if(_this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		_this.provider = provider;
	}
	,mapToSingleton: function(clazz,type,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.map(clazz,name);
		var provider = new hex_di_provider_SingletonProvider(type,_this._injector);
		if(_this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		_this.provider = provider;
	}
	,getInstance: function(type,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = Type.getClassName(type) + "|" + name;
		var _this = this._mapping;
		var mapping = __map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID];
		if(mapping != null) {
			return mapping.getResult();
		} else if(this._parentInjector != null) {
			return this._parentInjector.getInstance(type,name);
		} else {
			throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to get instance with type '" + Type.getClassName(type) + "' inside instance of '" + hex_log_Stringifier.stringify(this) + "'. Target dependency: '" + mappingID + "'",{ fileName : "Injector.hx", lineNumber : 103, className : "hex.di.Injector", methodName : "getInstance"}));
		}
	}
	,getInstanceWithClassName: function(className,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = className + "|" + name;
		var _this = this._mapping;
		var mapping = __map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID];
		var _this1 = this._mapping;
		if((__map_reserved[mappingID] != null?_this1.getReserved(mappingID):_this1.h[mappingID]) != null) {
			return mapping.getResult();
		} else if(this._parentInjector != null) {
			return this._parentInjector.getInstanceWithClassName(className,name);
		} else {
			throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to get instance with type '" + className + "' inside instance of '" + hex_log_Stringifier.stringify(this) + "'. Target dependency: '" + mappingID + "'",{ fileName : "Injector.hx", lineNumber : 124, className : "hex.di.Injector", methodName : "getInstanceWithClassName"}));
		}
	}
	,getProvider: function(className,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = className + "|" + name;
		var _this = this._mapping;
		var mapping = __map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID];
		var _this1 = this._mapping;
		if((__map_reserved[mappingID] != null?_this1.getReserved(mappingID):_this1.h[mappingID]) != null) {
			return mapping.provider;
		} else if(this._parentInjector != null) {
			return this._parentInjector.getInstance(Type.resolveClass(className.split("<")[0]),name);
		} else {
			return null;
		}
	}
	,instantiateUnmapped: function(type) {
		var classDescription = this._classDescriptor.getClassDescription(type);
		var instance;
		if(classDescription != null && classDescription.c != null) {
			var $arguments = classDescription.c.a;
			var args = [];
			var _g = 0;
			while(_g < $arguments.length) {
				var arg = $arguments[_g];
				++_g;
				var provider = this.getProvider(arg.t,arg.n);
				if(provider != null) {
					args.push(provider.getResult(this));
				} else if(!arg.o) {
					var type1 = arg.t;
					var injectionName = arg.n;
					throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to inject argument" + " with type '" + type1 + "' into constructor of class '" + hex_log_Stringifier.stringify(type) + "'. Target dependency: '" + type1 + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
				}
			}
			instance = Type.createInstance(type,args);
		} else {
			instance = Type.createInstance(type,[]);
		}
		if(classDescription != null) {
			this._applyInjection(instance,type,classDescription);
		}
		return instance;
	}
	,getOrCreateNewInstance: function(type) {
		if(this.satisfies(type)) {
			return this.getInstance(type);
		} else {
			return this.instantiateUnmapped(type);
		}
	}
	,hasMapping: function(type,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = Type.getClassName(type) + "|" + name;
		var _this = this._mapping;
		if((__map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID]) != null) {
			return true;
		} else if(this._parentInjector != null) {
			return this._parentInjector.hasMapping(type,name);
		} else {
			return false;
		}
	}
	,unmap: function(type,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = Type.getClassName(type) + "|" + name;
		var mapping = this._mapping.get(mappingID);
		if(mapping == null) {
			throw new js__$Boot_HaxeError(new hex_di_error_InjectorException("unmap failed with mapping named '" + mappingID + "' @" + hex_log_Stringifier.stringify(this),{ fileName : "Injector.hx", lineNumber : 345, className : "hex.di.Injector", methodName : "_unmap"}));
		}
		mapping.provider.destroy();
		this._mapping.remove(mappingID);
	}
	,unmapClassName: function(className,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = className + "|" + name;
		var mapping = this._mapping.get(mappingID);
		if(mapping == null) {
			throw new js__$Boot_HaxeError(new hex_di_error_InjectorException("unmap failed with mapping named '" + mappingID + "' @" + hex_log_Stringifier.stringify(this),{ fileName : "Injector.hx", lineNumber : 345, className : "hex.di.Injector", methodName : "_unmap"}));
		}
		mapping.provider.destroy();
		this._mapping.remove(mappingID);
	}
	,hasDirectMapping: function(type,name) {
		if(name == null) {
			name = "";
		}
		var this1 = this._mapping;
		var key = Type.getClassName(type) + "|" + name;
		var _this = this1;
		return (__map_reserved[key] != null?_this.getReserved(key):_this.h[key]) != null;
	}
	,satisfies: function(type,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = Type.getClassName(type) + "|" + name;
		var _this = this._mapping;
		var mapping = __map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID];
		var _this1 = this._mapping;
		if((__map_reserved[mappingID] != null?_this1.getReserved(mappingID):_this1.h[mappingID]) != null) {
			return mapping.provider != null;
		} else if(this._parentInjector != null) {
			return this._parentInjector.satisfies(type,name);
		} else {
			return false;
		}
	}
	,satisfiesDirectly: function(type,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = Type.getClassName(type) + "|" + name;
		var _this = this._mapping;
		var mapping = __map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID];
		if(mapping != null) {
			return mapping.provider != null;
		} else {
			return false;
		}
	}
	,injectInto: function(target) {
		var targetType = target == null?null:js_Boot.getClass(target);
		var classDescription = this._classDescriptor.getClassDescription(targetType);
		if(classDescription != null) {
			this._applyInjection(target,targetType,classDescription);
		} else {
			throw new js__$Boot_HaxeError(new hex_di_error_MissingClassDescriptionException("'" + hex_log_Stringifier.stringify(this) + "' is missing a class description to inject into an instance of '" + hex_util_ClassUtil.getClassName(target) + "'. This class should implement IInjectorContainer",{ fileName : "Injector.hx", lineNumber : 253, className : "hex.di.Injector", methodName : "injectInto"}));
		}
	}
	,destroyInstance: function(instance) {
		this._managedObjects.remove(instance);
		var classDescription = this._classDescriptor.getClassDescription(instance == null?null:js_Boot.getClass(instance));
		if(classDescription != null) {
			var _g = 0;
			var _g1 = classDescription.pd;
			while(_g < _g1.length) {
				var preDestroy = _g1[_g];
				++_g;
				var $arguments = preDestroy.a;
				var methodName = preDestroy.m;
				var func = Reflect.field(instance,methodName);
				var args = [];
				var _g2 = 0;
				while(_g2 < $arguments.length) {
					var arg = $arguments[_g2];
					++_g2;
					var provider = this.getProvider(arg.t,arg.n);
					if(provider != null) {
						args.push(provider.getResult(this));
					} else if(!arg.o) {
						if(methodName == "new") {
							var type = arg.t;
							var injectionName = arg.n;
							throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to inject argument" + " with type '" + type + "' into constructor of class '" + hex_log_Stringifier.stringify(instance) + "'. Target dependency: '" + type + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
						} else {
							var type1 = arg.t;
							var injectionName1 = arg.n;
							throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to inject argument into method named '" + methodName + "' with type '" + type1 + "' inside instance of '" + hex_log_Stringifier.stringify(instance) + "'. Target dependency: '" + type1 + "|" + injectionName1 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 104, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
						}
					}
				}
				func.apply(instance,args);
			}
		}
	}
	,map: function(type,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = Type.getClassName(type) + "|" + name;
		var _this = this._mapping;
		if((__map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID]) != null) {
			var _this1 = this._mapping;
			if(__map_reserved[mappingID] != null) {
				return _this1.getReserved(mappingID);
			} else {
				return _this1.h[mappingID];
			}
		} else {
			return this._createMapping(name,mappingID);
		}
	}
	,teardown: function() {
		var _this = this._mapping;
		var mapping = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(mapping.hasNext()) {
			var mapping1 = mapping.next();
			mapping1.provider.destroy();
		}
		var values = this._managedObjects.getValues();
		var _g = 0;
		while(_g < values.length) {
			var value = values[_g];
			++_g;
			this.destroyInstance(value);
		}
		this._mapping = new haxe_ds_StringMap();
		this._processedMapping = new haxe_ds_StringMap();
		this._managedObjects = new hex_collection_HashMap();
	}
	,mapClassName: function(className,name) {
		if(name == null) {
			name = "";
		}
		var mappingID = className + "|" + name;
		var _this = this._mapping;
		if((__map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID]) != null) {
			var _this1 = this._mapping;
			if(__map_reserved[mappingID] != null) {
				return _this1.getReserved(mappingID);
			} else {
				return _this1.h[mappingID];
			}
		} else {
			return this._createMapping(name,mappingID);
		}
	}
	,mapClassNameToValue: function(className,value,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.mapClassName(className,name);
		var provider = new hex_di_provider_ValueProvider(value,_this._injector);
		if(_this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		_this.provider = provider;
	}
	,mapClassNameToType: function(className,type,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.mapClassName(className,name);
		var provider = new hex_di_provider_ClassProvider(type);
		if(_this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		_this.provider = provider;
	}
	,mapClassNameToSingleton: function(className,type,name) {
		if(name == null) {
			name = "";
		}
		var _this = this.mapClassName(className,name);
		var provider = new hex_di_provider_SingletonProvider(type,_this._injector);
		if(_this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + _this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		_this.provider = provider;
	}
	,_unmap: function(mappingID) {
		var _this = this._mapping;
		var mapping = __map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID];
		if(mapping == null) {
			throw new js__$Boot_HaxeError(new hex_di_error_InjectorException("unmap failed with mapping named '" + mappingID + "' @" + hex_log_Stringifier.stringify(this),{ fileName : "Injector.hx", lineNumber : 345, className : "hex.di.Injector", methodName : "_unmap"}));
		}
		mapping.provider.destroy();
		this._mapping.remove(mappingID);
	}
	,_createMapping: function(name,mappingID) {
		var _this = this._processedMapping;
		if(__map_reserved[mappingID] != null?_this.getReserved(mappingID):_this.h[mappingID]) {
			throw new js__$Boot_HaxeError(new hex_di_error_InjectorException("Mapping named '" + mappingID + "' is already processing @" + hex_log_Stringifier.stringify(this),{ fileName : "Injector.hx", lineNumber : 357, className : "hex.di.Injector", methodName : "_createMapping"}));
		}
		var _this1 = this._processedMapping;
		if(__map_reserved[mappingID] != null) {
			_this1.setReserved(mappingID,true);
		} else {
			_this1.h[mappingID] = true;
		}
		var mapping = new hex_di_mapping_InjectionMapping(this,name,mappingID);
		var _this2 = this._mapping;
		if(__map_reserved[mappingID] != null) {
			_this2.setReserved(mappingID,mapping);
		} else {
			_this2.h[mappingID] = mapping;
		}
		this._processedMapping.remove(mappingID);
		return mapping;
	}
	,_applyInjection: function(target,targetType,classDescription) {
		this.trigger.onPreConstruct(this,target,targetType);
		var target1 = target;
		var _g = 0;
		var _g1 = classDescription.p;
		while(_g < _g1.length) {
			var property = _g1[_g];
			++_g;
			var propertyName = property.p;
			var propertyType = property.t;
			var injectionName = property.n;
			var isOptional = property.o;
			var provider = this.getProvider(propertyType,injectionName);
			if(provider != null) {
				var value = provider.getResult(this);
				var tmp;
				var tmp1;
				if(target1.__properties__) {
					tmp = target1.__properties__["set_" + propertyName];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					target1[tmp](value);
				} else {
					target1[propertyName] = value;
				}
			} else if(!isOptional) {
				throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to inject into property named '" + propertyName + "' with type '" + propertyType + "' inside instance of '" + hex_log_Stringifier.stringify(target1) + "'. Target dependency: '" + propertyType + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 58, className : "hex.di.reflect.InjectionUtil", methodName : "applyPropertyInjection"}));
			}
		}
		var _g2 = 0;
		var _g11 = classDescription.m;
		while(_g2 < _g11.length) {
			var method = _g11[_g2];
			++_g2;
			var $arguments = method.a;
			var methodName = method.m;
			var func = Reflect.field(target1,methodName);
			var args = [];
			var _g3 = 0;
			while(_g3 < $arguments.length) {
				var arg = $arguments[_g3];
				++_g3;
				var provider1 = this.getProvider(arg.t,arg.n);
				if(provider1 != null) {
					args.push(provider1.getResult(this));
				} else if(!arg.o) {
					if(methodName == "new") {
						var type = arg.t;
						var injectionName1 = arg.n;
						throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to inject argument" + " with type '" + type + "' into constructor of class '" + hex_log_Stringifier.stringify(target1) + "'. Target dependency: '" + type + "|" + injectionName1 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
					} else {
						var type1 = arg.t;
						var injectionName2 = arg.n;
						throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to inject argument into method named '" + methodName + "' with type '" + type1 + "' inside instance of '" + hex_log_Stringifier.stringify(target1) + "'. Target dependency: '" + type1 + "|" + injectionName2 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 104, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
					}
				}
			}
			func.apply(target1,args);
		}
		var _g4 = 0;
		var _g12 = classDescription.pc;
		while(_g4 < _g12.length) {
			var postConstruct = _g12[_g4];
			++_g4;
			var arguments1 = postConstruct.a;
			var methodName1 = postConstruct.m;
			var func1 = Reflect.field(target1,methodName1);
			var args1 = [];
			var _g5 = 0;
			while(_g5 < arguments1.length) {
				var arg1 = arguments1[_g5];
				++_g5;
				var provider2 = this.getProvider(arg1.t,arg1.n);
				if(provider2 != null) {
					args1.push(provider2.getResult(this));
				} else if(!arg1.o) {
					if(methodName1 == "new") {
						var type2 = arg1.t;
						var injectionName3 = arg1.n;
						throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to inject argument" + " with type '" + type2 + "' into constructor of class '" + hex_log_Stringifier.stringify(target1) + "'. Target dependency: '" + type2 + "|" + injectionName3 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
					} else {
						var type3 = arg1.t;
						var injectionName4 = arg1.n;
						throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(this) + "' is missing a mapping to inject argument into method named '" + methodName1 + "' with type '" + type3 + "' inside instance of '" + hex_log_Stringifier.stringify(target1) + "'. Target dependency: '" + type3 + "|" + injectionName4 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 104, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
					}
				}
			}
			func1.apply(target1,args1);
		}
		if(classDescription.pd.length > 0) {
			this._managedObjects.put(target,target);
		}
		this.trigger.onPostConstruct(this,target,targetType);
	}
	,_getMappingID: function(type,name) {
		if(name == null) {
			name = "";
		}
		return Type.getClassName(type) + "|" + name;
	}
	,__class__: hex_di_Injector
};
var hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener = function() {
	this._inputs = [];
};
$hxClasses["hex.di.__Trigger_Class_For__IInjectorListener"] = hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener;
hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener.__name__ = ["hex","di","__Trigger_Class_For__IInjectorListener"];
hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener.__interfaces__ = [hex_di_IInjectorListener,hex_event_ITrigger];
hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener.prototype = {
	connect: function(input) {
		if(this._inputs.indexOf(input) == -1) {
			this._inputs.push(input);
			return true;
		} else {
			return false;
		}
	}
	,disconnect: function(input) {
		var index = this._inputs.indexOf(input);
		if(index > -1) {
			this._inputs.splice(index,1);
			return true;
		} else {
			return false;
		}
	}
	,onPreConstruct: function(target,instance,instanceType) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onPreConstruct(target,instance,instanceType);
		}
	}
	,onPostConstruct: function(target,instance,instanceType) {
		var _g = 0;
		var _g1 = this._inputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			input.onPostConstruct(target,instance,instanceType);
		}
	}
	,__class__: hex_di__$_$Trigger_$Class_$For_$_$IInjectorListener
};
var hex_error_Exception = function(message,posInfos) {
	this.message = message;
	this.posInfos = posInfos;
	this.name = hex_log_Stringifier.stringify(this);
	hex_log_Logger.error(this.toString(),null,{ fileName : "Exception.hx", lineNumber : 24, className : "hex.error.Exception", methodName : "new"});
};
$hxClasses["hex.error.Exception"] = hex_error_Exception;
hex_error_Exception.__name__ = ["hex","error","Exception"];
hex_error_Exception.prototype = {
	toString: function() {
		return (this.posInfos != null?this.name + " at " + this.posInfos.className + "#" + this.posInfos.methodName + " line:" + this.posInfos.lineNumber + " in file '" + this.posInfos.fileName + "'":this.name) + " | " + this.message;
	}
	,__class__: hex_error_Exception
};
var hex_di_error_InjectorException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.di.error.InjectorException"] = hex_di_error_InjectorException;
hex_di_error_InjectorException.__name__ = ["hex","di","error","InjectorException"];
hex_di_error_InjectorException.__super__ = hex_error_Exception;
hex_di_error_InjectorException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_di_error_InjectorException
});
var hex_di_error_MissingClassDescriptionException = function(message,posInfos) {
	hex_di_error_InjectorException.call(this,message,posInfos);
};
$hxClasses["hex.di.error.MissingClassDescriptionException"] = hex_di_error_MissingClassDescriptionException;
hex_di_error_MissingClassDescriptionException.__name__ = ["hex","di","error","MissingClassDescriptionException"];
hex_di_error_MissingClassDescriptionException.__super__ = hex_di_error_InjectorException;
hex_di_error_MissingClassDescriptionException.prototype = $extend(hex_di_error_InjectorException.prototype,{
	__class__: hex_di_error_MissingClassDescriptionException
});
var hex_di_error_MissingMappingException = function(message,posInfos) {
	hex_di_error_InjectorException.call(this,message,posInfos);
};
$hxClasses["hex.di.error.MissingMappingException"] = hex_di_error_MissingMappingException;
hex_di_error_MissingMappingException.__name__ = ["hex","di","error","MissingMappingException"];
hex_di_error_MissingMappingException.__super__ = hex_di_error_InjectorException;
hex_di_error_MissingMappingException.prototype = $extend(hex_di_error_InjectorException.prototype,{
	__class__: hex_di_error_MissingMappingException
});
var hex_di_mapping_InjectionMapping = function(injector,name,mappingID) {
	this._injector = injector;
	this._name = name;
	this._mappingID = mappingID;
};
$hxClasses["hex.di.mapping.InjectionMapping"] = hex_di_mapping_InjectionMapping;
hex_di_mapping_InjectionMapping.__name__ = ["hex","di","mapping","InjectionMapping"];
hex_di_mapping_InjectionMapping.prototype = {
	getResult: function() {
		if(this.provider == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("can't retrieve result, mapping with id '" + this._mappingID + "' has no provider",{ fileName : "InjectionMapping.hx", lineNumber : 35, className : "hex.di.mapping.InjectionMapping", methodName : "getResult"}));
		}
		return this.provider.getResult(this._injector);
	}
	,toSingleton: function(type) {
		var provider = new hex_di_provider_SingletonProvider(type,this._injector);
		if(this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		this.provider = provider;
		return this;
	}
	,toType: function(type) {
		var provider = new hex_di_provider_ClassProvider(type);
		if(this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		this.provider = provider;
		return this;
	}
	,toValue: function(value) {
		var provider = new hex_di_provider_ValueProvider(value,this._injector);
		if(this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		this.provider = provider;
		return this;
	}
	,_toProvider: function(provider) {
		if(this.provider != null) {
			console.log("Warning: Injector already has a mapping for " + this._mappingID + ".\n " + "If you have overridden this mapping intentionally you can use " + "\"injector.unmap()\" prior to your replacement mapping in order to " + "avoid seeing this message.");
		}
		this.provider = provider;
		return this;
	}
	,__class__: hex_di_mapping_InjectionMapping
};
var hex_di_provider_IDependencyProvider = function() { };
$hxClasses["hex.di.provider.IDependencyProvider"] = hex_di_provider_IDependencyProvider;
hex_di_provider_IDependencyProvider.__name__ = ["hex","di","provider","IDependencyProvider"];
hex_di_provider_IDependencyProvider.prototype = {
	__class__: hex_di_provider_IDependencyProvider
};
var hex_di_provider_ClassProvider = function(type) {
	this._type = type;
};
$hxClasses["hex.di.provider.ClassProvider"] = hex_di_provider_ClassProvider;
hex_di_provider_ClassProvider.__name__ = ["hex","di","provider","ClassProvider"];
hex_di_provider_ClassProvider.__interfaces__ = [hex_di_provider_IDependencyProvider];
hex_di_provider_ClassProvider.prototype = {
	getResult: function(injector) {
		return injector.instantiateUnmapped(this._type);
	}
	,destroy: function() {
	}
	,__class__: hex_di_provider_ClassProvider
};
var hex_di_provider_SingletonProvider = function(type,injector) {
	this._isDestroyed = false;
	this._type = type;
	this._injector = injector;
};
$hxClasses["hex.di.provider.SingletonProvider"] = hex_di_provider_SingletonProvider;
hex_di_provider_SingletonProvider.__name__ = ["hex","di","provider","SingletonProvider"];
hex_di_provider_SingletonProvider.__interfaces__ = [hex_di_provider_IDependencyProvider];
hex_di_provider_SingletonProvider.prototype = {
	getResult: function(injector) {
		if(this._isDestroyed) {
			throw new js__$Boot_HaxeError(new hex_di_error_InjectorException("Forbidden usage of unmapped singleton provider for type '" + Type.getClassName(this._value) + "'",{ fileName : "SingletonProvider.hx", lineNumber : 29, className : "hex.di.provider.SingletonProvider", methodName : "getResult"}));
		} else if(this._value == null) {
			this._value = this._injector.instantiateUnmapped(this._type);
		}
		return this._value;
	}
	,destroy: function() {
		this._isDestroyed = true;
		if(this._value != null) {
			this._injector.destroyInstance(this._value);
		}
		this._injector = null;
		this._value = null;
	}
	,__class__: hex_di_provider_SingletonProvider
};
var hex_di_provider_ValueProvider = function(value,injector) {
	this._value = value;
	this._injector = injector;
};
$hxClasses["hex.di.provider.ValueProvider"] = hex_di_provider_ValueProvider;
hex_di_provider_ValueProvider.__name__ = ["hex","di","provider","ValueProvider"];
hex_di_provider_ValueProvider.__interfaces__ = [hex_di_provider_IDependencyProvider];
hex_di_provider_ValueProvider.prototype = {
	getResult: function(injector) {
		return this._value;
	}
	,destroy: function() {
		this._injector.destroyInstance(this._value);
		this._injector = null;
		this._value = null;
	}
	,__class__: hex_di_provider_ValueProvider
};
var hex_di_reflect_IClassDescriptionProvider = function() { };
$hxClasses["hex.di.reflect.IClassDescriptionProvider"] = hex_di_reflect_IClassDescriptionProvider;
hex_di_reflect_IClassDescriptionProvider.__name__ = ["hex","di","reflect","IClassDescriptionProvider"];
hex_di_reflect_IClassDescriptionProvider.prototype = {
	__class__: hex_di_reflect_IClassDescriptionProvider
};
var hex_di_reflect_FastClassDescriptionProvider = function() {
};
$hxClasses["hex.di.reflect.FastClassDescriptionProvider"] = hex_di_reflect_FastClassDescriptionProvider;
hex_di_reflect_FastClassDescriptionProvider.__name__ = ["hex","di","reflect","FastClassDescriptionProvider"];
hex_di_reflect_FastClassDescriptionProvider.__interfaces__ = [hex_di_reflect_IClassDescriptionProvider];
hex_di_reflect_FastClassDescriptionProvider.prototype = {
	getClassDescription: function(type) {
		if(type == null) {
			throw new js__$Boot_HaxeError(new hex_error_NullPointerException("type cannot be null",{ fileName : "FastClassDescriptionProvider.hx", lineNumber : 20, className : "hex.di.reflect.FastClassDescriptionProvider", methodName : "getClassDescription"}));
		}
		var tmp;
		var tmp1;
		if(type == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(type.__properties__) {
				tmp = type.__properties__["get_" + "__INJECTION_DATA"];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = type[tmp]();
			} else {
				tmp1 = type["__INJECTION_DATA"];
			}
		}
		return tmp1;
	}
	,__class__: hex_di_reflect_FastClassDescriptionProvider
};
var hex_di_reflect_InjectionUtil = function() {
};
$hxClasses["hex.di.reflect.InjectionUtil"] = hex_di_reflect_InjectionUtil;
hex_di_reflect_InjectionUtil.__name__ = ["hex","di","reflect","InjectionUtil"];
hex_di_reflect_InjectionUtil.applyClassInjection = function(target,injector,classDescription) {
	var _g = 0;
	var _g1 = classDescription.p;
	while(_g < _g1.length) {
		var property = _g1[_g];
		++_g;
		var propertyName = property.p;
		var propertyType = property.t;
		var injectionName = property.n;
		var isOptional = property.o;
		var provider = injector.getProvider(propertyType,injectionName);
		if(provider != null) {
			var value = provider.getResult(injector);
			var tmp;
			var tmp1;
			if(target.__properties__) {
				tmp = target.__properties__["set_" + propertyName];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				target[tmp](value);
			} else {
				target[propertyName] = value;
			}
		} else if(!isOptional) {
			throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject into property named '" + propertyName + "' with type '" + propertyType + "' inside instance of '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + propertyType + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 58, className : "hex.di.reflect.InjectionUtil", methodName : "applyPropertyInjection"}));
		}
	}
	var _g2 = 0;
	var _g11 = classDescription.m;
	while(_g2 < _g11.length) {
		var method = _g11[_g2];
		++_g2;
		var $arguments = method.a;
		var methodName = method.m;
		var func = Reflect.field(target,methodName);
		var args = [];
		var _g3 = 0;
		while(_g3 < $arguments.length) {
			var arg = $arguments[_g3];
			++_g3;
			var provider1 = injector.getProvider(arg.t,arg.n);
			if(provider1 != null) {
				args.push(provider1.getResult(injector));
			} else if(!arg.o) {
				if(methodName == "new") {
					var type = arg.t;
					var injectionName1 = arg.n;
					throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument" + " with type '" + type + "' into constructor of class '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type + "|" + injectionName1 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
				} else {
					var type1 = arg.t;
					var injectionName2 = arg.n;
					throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument into method named '" + methodName + "' with type '" + type1 + "' inside instance of '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type1 + "|" + injectionName2 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 104, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
				}
			}
		}
		func.apply(target,args);
	}
	var _g4 = 0;
	var _g12 = classDescription.pc;
	while(_g4 < _g12.length) {
		var postConstruct = _g12[_g4];
		++_g4;
		var arguments1 = postConstruct.a;
		var methodName1 = postConstruct.m;
		var func1 = Reflect.field(target,methodName1);
		var args1 = [];
		var _g5 = 0;
		while(_g5 < arguments1.length) {
			var arg1 = arguments1[_g5];
			++_g5;
			var provider2 = injector.getProvider(arg1.t,arg1.n);
			if(provider2 != null) {
				args1.push(provider2.getResult(injector));
			} else if(!arg1.o) {
				if(methodName1 == "new") {
					var type2 = arg1.t;
					var injectionName3 = arg1.n;
					throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument" + " with type '" + type2 + "' into constructor of class '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type2 + "|" + injectionName3 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
				} else {
					var type3 = arg1.t;
					var injectionName4 = arg1.n;
					throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument into method named '" + methodName1 + "' with type '" + type3 + "' inside instance of '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type3 + "|" + injectionName4 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 104, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
				}
			}
		}
		func1.apply(target,args1);
	}
	return target;
};
hex_di_reflect_InjectionUtil.applyConstructorInjection = function(type,injector,$arguments) {
	var args = [];
	var _g = 0;
	while(_g < $arguments.length) {
		var arg = $arguments[_g];
		++_g;
		var provider = injector.getProvider(arg.t,arg.n);
		if(provider != null) {
			args.push(provider.getResult(injector));
		} else if(!arg.o) {
			var type1 = arg.t;
			var injectionName = arg.n;
			throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument" + " with type '" + type1 + "' into constructor of class '" + hex_log_Stringifier.stringify(type) + "'. Target dependency: '" + type1 + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
		}
	}
	return Type.createInstance(type,args);
};
hex_di_reflect_InjectionUtil.applyPropertyInjection = function(propertyName,propertyType,injectionName,isOptional,target,injector) {
	if(isOptional == null) {
		isOptional = false;
	}
	if(injectionName == null) {
		injectionName = "";
	}
	var provider = injector.getProvider(propertyType,injectionName);
	if(provider != null) {
		var value = provider.getResult(injector);
		var tmp;
		var tmp1;
		if(target.__properties__) {
			tmp = target.__properties__["set_" + propertyName];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			target[tmp](value);
		} else {
			target[propertyName] = value;
		}
	} else if(!isOptional) {
		throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject into property named '" + propertyName + "' with type '" + propertyType + "' inside instance of '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + propertyType + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 58, className : "hex.di.reflect.InjectionUtil", methodName : "applyPropertyInjection"}));
	}
	return target;
};
hex_di_reflect_InjectionUtil.applyMethodInjection = function(target,injector,$arguments,methodName) {
	var func = Reflect.field(target,methodName);
	var args = [];
	var _g = 0;
	while(_g < $arguments.length) {
		var arg = $arguments[_g];
		++_g;
		var provider = injector.getProvider(arg.t,arg.n);
		if(provider != null) {
			args.push(provider.getResult(injector));
		} else if(!arg.o) {
			if(methodName == "new") {
				var type = arg.t;
				var injectionName = arg.n;
				throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument" + " with type '" + type + "' into constructor of class '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
			} else {
				var type1 = arg.t;
				var injectionName1 = arg.n;
				throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument into method named '" + methodName + "' with type '" + type1 + "' inside instance of '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type1 + "|" + injectionName1 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 104, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
			}
		}
	}
	func.apply(target,args);
	return target;
};
hex_di_reflect_InjectionUtil.gatherArgs = function(target,injector,$arguments,methodName) {
	var args = [];
	var _g = 0;
	while(_g < $arguments.length) {
		var arg = $arguments[_g];
		++_g;
		var provider = injector.getProvider(arg.t,arg.n);
		if(provider != null) {
			args.push(provider.getResult(injector));
		} else if(!arg.o) {
			if(methodName == "new") {
				var type = arg.t;
				var injectionName = arg.n;
				throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument" + " with type '" + type + "' into constructor of class '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
			} else {
				var type1 = arg.t;
				var injectionName1 = arg.n;
				throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument into method named '" + methodName + "' with type '" + type1 + "' inside instance of '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type1 + "|" + injectionName1 + "'",{ fileName : "InjectionUtil.hx", lineNumber : 104, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
			}
		}
	}
	return args;
};
hex_di_reflect_InjectionUtil._throwMissingMappingException = function(target,type,injectionName,injector,methodName) {
	throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument into method named '" + methodName + "' with type '" + type + "' inside instance of '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 104, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingException"}));
};
hex_di_reflect_InjectionUtil._throwMissingMappingConstructorException = function(target,type,injectionName,injector) {
	throw new js__$Boot_HaxeError(new hex_di_error_MissingMappingException("'" + hex_log_Stringifier.stringify(injector) + "' is missing a mapping to inject argument" + " with type '" + type + "' into constructor of class '" + hex_log_Stringifier.stringify(target) + "'. Target dependency: '" + type + "|" + injectionName + "'",{ fileName : "InjectionUtil.hx", lineNumber : 114, className : "hex.di.reflect.InjectionUtil", methodName : "_throwMissingMappingConstructorException"}));
};
hex_di_reflect_InjectionUtil.prototype = {
	__class__: hex_di_reflect_InjectionUtil
};
var hex_domain_IDomainDispatcher = function() { };
$hxClasses["hex.domain.IDomainDispatcher"] = hex_domain_IDomainDispatcher;
hex_domain_IDomainDispatcher.__name__ = ["hex","domain","IDomainDispatcher"];
hex_domain_IDomainDispatcher.prototype = {
	__class__: hex_domain_IDomainDispatcher
};
var hex_domain_DomainDispatcher = function(defaultDomain,dispatcherClass) {
	this.clear();
	this.setDefaultDomain(defaultDomain);
	this.setDispatcherClass(dispatcherClass);
};
$hxClasses["hex.domain.DomainDispatcher"] = hex_domain_DomainDispatcher;
hex_domain_DomainDispatcher.__name__ = ["hex","domain","DomainDispatcher"];
hex_domain_DomainDispatcher.__interfaces__ = [hex_domain_IDomainDispatcher];
hex_domain_DomainDispatcher.prototype = {
	setDispatcherClass: function(dispatcherClass) {
		this._dispatcherClass = dispatcherClass != null?dispatcherClass:hex_event_Dispatcher;
	}
	,getDefaultDispatcher: function() {
		return this._domains.h[this._defaultDomain.__id__];
	}
	,getDefaultDomain: function() {
		return this._defaultDomain;
	}
	,setDefaultDomain: function(domain) {
		this._defaultDomain = domain == null?hex_domain_DefaultDomain.DOMAIN:domain;
		this.getDomainDispatcher(this.getDefaultDomain());
	}
	,clear: function() {
		this._domains = new haxe_ds_ObjectMap();
		var domain = this.getDefaultDomain();
		if(domain != null) {
			this.getDomainDispatcher(domain);
		}
	}
	,isRegistered: function(listener,messageType,domain) {
		if(this.hasChannelDispatcher(domain)) {
			return this.getDomainDispatcher(domain).isRegistered(listener,messageType);
		} else {
			return false;
		}
	}
	,hasChannelDispatcher: function(domain) {
		if(domain == null) {
			return this._domains.h.__keys__[this._defaultDomain.__id__] != null;
		} else {
			return this._domains.h.__keys__[domain.__id__] != null;
		}
	}
	,getDomainDispatcher: function(domain) {
		if(this.hasChannelDispatcher(domain)) {
			if(domain == null) {
				return this._domains.h[this._defaultDomain.__id__];
			} else {
				return this._domains.h[domain.__id__];
			}
		} else {
			var dispatcher = new hex_event_Dispatcher();
			this._domains.set(domain,dispatcher);
			return dispatcher;
		}
	}
	,releaseDomainDispatcher: function(domain) {
		if(this.hasChannelDispatcher(domain)) {
			this._domains.h[domain.__id__].removeAllListeners();
			this._domains.remove(domain);
			return true;
		} else {
			return false;
		}
	}
	,addListener: function(listener,domain) {
		return this.getDomainDispatcher(domain).addListener(listener);
	}
	,removeListener: function(listener,domain) {
		return this.getDomainDispatcher(domain).removeListener(listener);
	}
	,addHandler: function(messageType,scope,callback,domain) {
		return this.getDomainDispatcher(domain).addHandler(messageType,scope,callback);
	}
	,removeHandler: function(messageType,scope,callback,domain) {
		return this.getDomainDispatcher(domain).removeHandler(messageType,scope,callback);
	}
	,dispatch: function(messageType,domain,data) {
		this.getDomainDispatcher(domain).dispatch(messageType,data);
		if(domain != this._defaultDomain && domain != null) {
			this.getDefaultDispatcher().dispatch(messageType,data);
		}
	}
	,removeAllListeners: function() {
		var iterator = this._domains.keys();
		while(iterator.hasNext()) {
			var this1 = this._domains;
			var key = iterator.next();
			this1.h[key.__id__].removeAllListeners();
		}
		this.clear();
	}
	,__class__: hex_domain_DomainDispatcher
};
var hex_domain_IApplicationDomainDispatcher = function() { };
$hxClasses["hex.domain.IApplicationDomainDispatcher"] = hex_domain_IApplicationDomainDispatcher;
hex_domain_IApplicationDomainDispatcher.__name__ = ["hex","domain","IApplicationDomainDispatcher"];
hex_domain_IApplicationDomainDispatcher.__interfaces__ = [hex_domain_IDomainDispatcher];
var hex_domain_Domain = function(domainName) {
	if(domainName == null) {
		throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Domain's name can't be null",{ fileName : "Domain.hx", lineNumber : 20, className : "hex.domain.Domain", methodName : "new"}));
	} else {
		var _this = hex_domain_Domain._domainNames;
		if(__map_reserved[domainName] != null?_this.existsReserved(domainName):_this.h.hasOwnProperty(domainName)) {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("Domain has already been registered with name '" + domainName + "'",{ fileName : "Domain.hx", lineNumber : 24, className : "hex.domain.Domain", methodName : "new"}));
		} else {
			var _this1 = hex_domain_Domain._domainNames;
			if(__map_reserved[domainName] != null) {
				_this1.setReserved(domainName,this);
			} else {
				_this1.h[domainName] = this;
			}
			this._domainName = domainName;
		}
	}
};
$hxClasses["hex.domain.Domain"] = hex_domain_Domain;
hex_domain_Domain.__name__ = ["hex","domain","Domain"];
hex_domain_Domain.getDomain = function(domainName) {
	var _this = hex_domain_Domain._domainNames;
	if(!(__map_reserved[domainName] != null?_this.existsReserved(domainName):_this.h.hasOwnProperty(domainName))) {
		return null;
	} else {
		var _this1 = hex_domain_Domain._domainNames;
		if(__map_reserved[domainName] != null) {
			return _this1.getReserved(domainName);
		} else {
			return _this1.h[domainName];
		}
	}
};
hex_domain_Domain.prototype = {
	getName: function() {
		return this._domainName;
	}
	,toString: function() {
		return hex_log_Stringifier.stringify(this) + " with name '" + this.getName() + "'";
	}
	,__class__: hex_domain_Domain
};
var hex_domain_DomainUtil = function() {
};
$hxClasses["hex.domain.DomainUtil"] = hex_domain_DomainUtil;
hex_domain_DomainUtil.__name__ = ["hex","domain","DomainUtil"];
hex_domain_DomainUtil.getDomain = function(domainName,type) {
	var domain = null;
	var _this = hex_domain_DomainUtil._domain;
	if(__map_reserved[domainName] != null?_this.existsReserved(domainName):_this.h.hasOwnProperty(domainName)) {
		var _this1 = hex_domain_DomainUtil._domain;
		if(__map_reserved[domainName] != null) {
			domain = _this1.getReserved(domainName);
		} else {
			domain = _this1.h[domainName];
		}
	} else {
		domain = Type.createInstance(type,[domainName]);
		var _this2 = hex_domain_DomainUtil._domain;
		if(__map_reserved[domainName] != null) {
			_this2.setReserved(domainName,domain);
		} else {
			_this2.h[domainName] = domain;
		}
	}
	return domain;
};
hex_domain_DomainUtil.prototype = {
	__class__: hex_domain_DomainUtil
};
var hex_domain_TopLevelDomain = function(domainName) {
	hex_domain_Domain.call(this,domainName);
};
$hxClasses["hex.domain.TopLevelDomain"] = hex_domain_TopLevelDomain;
hex_domain_TopLevelDomain.__name__ = ["hex","domain","TopLevelDomain"];
hex_domain_TopLevelDomain.__super__ = hex_domain_Domain;
hex_domain_TopLevelDomain.prototype = $extend(hex_domain_Domain.prototype,{
	__class__: hex_domain_TopLevelDomain
});
var hex_event_IDispatcher = function() { };
$hxClasses["hex.event.IDispatcher"] = hex_event_IDispatcher;
hex_event_IDispatcher.__name__ = ["hex","event","IDispatcher"];
hex_event_IDispatcher.prototype = {
	__class__: hex_event_IDispatcher
};
var hex_event_Dispatcher = function() {
	this._isSealed = false;
	this._cachedMethodCalls = [];
	this._listeners = new haxe_ds_ObjectMap();
};
$hxClasses["hex.event.Dispatcher"] = hex_event_Dispatcher;
hex_event_Dispatcher.__name__ = ["hex","event","Dispatcher"];
hex_event_Dispatcher.__interfaces__ = [hex_event_IDispatcher];
hex_event_Dispatcher.prototype = {
	dispatch: function(messageType,data) {
		this._seal(true);
		var parameters = null;
		var iterator = this._listeners.keys();
		while(iterator.hasNext()) {
			var listener = iterator.next();
			var m = this._listeners.h[listener.__id__];
			if(Lambda.count(m) > 0) {
				var key = messageType;
				if(__map_reserved[key] != null?m.existsReserved(key):m.h.hasOwnProperty(key)) {
					var key1 = messageType;
					var handler = __map_reserved[key1] != null?m.getReserved(key1):m.h[key1];
					handler.call(data);
				}
			} else {
				var messageName = messageType;
				var callback = Reflect.field(listener,messageName);
				if(callback != null && messageName != "handleMessage") {
					callback.apply(listener,data);
				} else {
					callback = Reflect.field(listener,"handleMessage");
					if(callback != null) {
						if(parameters == null) {
							parameters = [messageType];
							if(data != null) {
								parameters = parameters.concat(data);
							}
						}
						callback.apply(listener,parameters);
					} else {
						var msg = hex_log_Stringifier.stringify(this) + ".dispatch failed. " + " You must implement '" + messageType + "' or 'handleMessage' method in '" + hex_log_Stringifier.stringify(listener) + "' instance.";
						throw new js__$Boot_HaxeError(new hex_error_UnsupportedOperationException(msg,{ fileName : "Dispatcher.hx", lineNumber : 74, className : "hex.event.Dispatcher", methodName : "dispatch"}));
					}
				}
			}
		}
		this._seal(false);
	}
	,addHandler: function(messageType,scope,callback) {
		if(!this._isSealed) {
			if(this._listeners.h.__keys__[scope.__id__] != null) {
				var m = this._listeners.h[scope.__id__];
				if(Lambda.count(m) == 0) {
					var msg = hex_log_Stringifier.stringify(this) + ".addHandler failed. " + hex_log_Stringifier.stringify(scope) + " is already registered for all message types.";
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException(msg,{ fileName : "Dispatcher.hx", lineNumber : 95, className : "hex.event.Dispatcher", methodName : "addHandler"}));
				} else {
					var key = messageType;
					if(__map_reserved[key] != null?m.existsReserved(key):m.h.hasOwnProperty(key)) {
						var key1 = messageType;
						var handler = __map_reserved[key1] != null?m.getReserved(key1):m.h[key1];
						return handler.add(callback);
					} else {
						var handler1 = new hex_event_CallbackHandler(scope,callback);
						var key2 = messageType;
						if(__map_reserved[key2] != null) {
							m.setReserved(key2,handler1);
						} else {
							m.h[key2] = handler1;
						}
						return true;
					}
				}
			} else {
				var m1 = new haxe_ds_StringMap();
				var handler2 = new hex_event_CallbackHandler(scope,callback);
				var key3 = messageType;
				if(__map_reserved[key3] != null) {
					m1.setReserved(key3,handler2);
				} else {
					m1.h[key3] = handler2;
				}
				this._listeners.set(scope,m1);
				return true;
			}
		} else {
			var f = $bind(this,this.addHandler);
			var a1 = messageType;
			var a2 = scope;
			var a3 = callback;
			var tmp = function() {
				return f(a1,a2,a3);
			};
			this._cachedMethodCalls.push(tmp);
			return false;
		}
	}
	,removeHandler: function(messageType,scope,callback) {
		if(!this._isSealed) {
			if(this._listeners.h.__keys__[scope.__id__] != null) {
				var m = this._listeners.h[scope.__id__];
				if(Lambda.count(m) == 0) {
					var msg = hex_log_Stringifier.stringify(this) + ".removeHandler failed. " + hex_log_Stringifier.stringify(scope) + " is registered for all message types." + " Use 'removeListener' to unsubscribe.";
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException(msg,{ fileName : "Dispatcher.hx", lineNumber : 139, className : "hex.event.Dispatcher", methodName : "removeHandler"}));
				} else {
					var key = messageType;
					if(__map_reserved[key] != null?m.existsReserved(key):m.h.hasOwnProperty(key)) {
						var key1 = messageType;
						var handler = __map_reserved[key1] != null?m.getReserved(key1):m.h[key1];
						var b = handler.remove(callback);
						if(handler.isEmpty()) {
							m.remove(messageType);
							if(Lambda.count(m) == 0) {
								this._listeners.remove(scope);
							}
						}
						return b;
					} else {
						return false;
					}
				}
			} else {
				return false;
			}
		} else {
			var f = $bind(this,this.removeHandler);
			var a1 = messageType;
			var a2 = scope;
			var a3 = callback;
			var tmp = function() {
				return f(a1,a2,a3);
			};
			this._cachedMethodCalls.push(tmp);
			return false;
		}
	}
	,addListener: function(listener) {
		if(!this._isSealed) {
			if(this._listeners.h.__keys__[listener.__id__] != null) {
				var m = this._listeners.h[listener.__id__];
				if(Lambda.count(m) > 0) {
					var msg = hex_log_Stringifier.stringify(this) + ".addListener failed. " + hex_log_Stringifier.stringify(listener) + " is already registered to ";
					var iterator = m.keys();
					while(iterator.hasNext()) msg += "'" + iterator.next() + "' ";
					msg += "message types.";
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException(msg,{ fileName : "Dispatcher.hx", lineNumber : 192, className : "hex.event.Dispatcher", methodName : "addListener"}));
				} else {
					return false;
				}
			} else {
				this._listeners.set(listener,new haxe_ds_StringMap());
				return true;
			}
		} else {
			var f = $bind(this,this.addListener);
			var a1 = listener;
			var tmp = function() {
				return f(a1);
			};
			this._cachedMethodCalls.push(tmp);
			return false;
		}
	}
	,removeListener: function(listener) {
		if(!this._isSealed) {
			if(this._listeners.h.__keys__[listener.__id__] != null) {
				this._listeners.remove(listener);
				return true;
			} else {
				return false;
			}
		} else {
			var f = $bind(this,this.removeListener);
			var a1 = listener;
			var tmp = function() {
				return f(a1);
			};
			this._cachedMethodCalls.push(tmp);
			return false;
		}
	}
	,removeAllListeners: function() {
		if(!this._isSealed) {
			this._listeners = new haxe_ds_ObjectMap();
		} else {
			var f = $bind(this,this.removeAllListeners);
			var tmp = function() {
				f();
			};
			this._cachedMethodCalls.push(tmp);
		}
	}
	,isEmpty: function() {
		return Lambda.count(this._listeners) == 0;
	}
	,isRegistered: function(listener,messageType) {
		if(this._listeners.h.__keys__[listener.__id__] != null) {
			if(messageType == null) {
				return true;
			} else {
				var m = this._listeners.h[listener.__id__];
				var key = messageType;
				if(__map_reserved[key] != null) {
					return m.existsReserved(key);
				} else {
					return m.h.hasOwnProperty(key);
				}
			}
		} else {
			return false;
		}
	}
	,hasHandler: function(messageType,scope) {
		if(scope == null) {
			var iterator = this._listeners.keys();
			while(iterator.hasNext()) {
				var listener = iterator.next();
				var m = this._listeners.h[listener.__id__];
				if(Lambda.count(m) == 0) {
					return true;
				} else {
					var key = messageType;
					if(__map_reserved[key] != null?m.existsReserved(key):m.h.hasOwnProperty(key)) {
						return true;
					}
				}
			}
			return false;
		} else if(this._listeners.h.__keys__[scope.__id__] != null) {
			var m1 = this._listeners.h[scope.__id__];
			if(Lambda.count(m1) == 0) {
				return true;
			} else {
				var key1 = messageType;
				if(__map_reserved[key1] != null?m1.existsReserved(key1):m1.h.hasOwnProperty(key1)) {
					return true;
				}
			}
			return false;
		} else {
			return false;
		}
	}
	,_seal: function(isSealed) {
		if(isSealed != this._isSealed) {
			this._isSealed = isSealed;
			if(!this._isSealed && this._cachedMethodCalls.length > 0) {
				var _g = 0;
				var _g1 = this._cachedMethodCalls;
				while(_g < _g1.length) {
					var cachedMethodCall = _g1[_g];
					++_g;
					cachedMethodCall();
				}
				this._cachedMethodCalls = [];
			}
		}
	}
	,__class__: hex_event_Dispatcher
};
var hex_domain_ApplicationDomainDispatcher = function() {
	hex_domain_DomainDispatcher.call(this,hex_domain_TopLevelDomain.DOMAIN,hex_event_Dispatcher);
};
$hxClasses["hex.domain.ApplicationDomainDispatcher"] = hex_domain_ApplicationDomainDispatcher;
hex_domain_ApplicationDomainDispatcher.__name__ = ["hex","domain","ApplicationDomainDispatcher"];
hex_domain_ApplicationDomainDispatcher.__interfaces__ = [hex_domain_IApplicationDomainDispatcher];
hex_domain_ApplicationDomainDispatcher.getInstance = function() {
	return hex_domain_ApplicationDomainDispatcher._Instance;
};
hex_domain_ApplicationDomainDispatcher.__super__ = hex_domain_DomainDispatcher;
hex_domain_ApplicationDomainDispatcher.prototype = $extend(hex_domain_DomainDispatcher.prototype,{
	getDomainDispatcher: function(domain) {
		if(domain != hex_domain_NoDomain.DOMAIN) {
			return hex_domain_DomainDispatcher.prototype.getDomainDispatcher.call(this,domain);
		} else {
			return null;
		}
	}
	,__class__: hex_domain_ApplicationDomainDispatcher
});
var hex_domain_DefaultDomain = function(domainName) {
	hex_domain_Domain.call(this,domainName);
};
$hxClasses["hex.domain.DefaultDomain"] = hex_domain_DefaultDomain;
hex_domain_DefaultDomain.__name__ = ["hex","domain","DefaultDomain"];
hex_domain_DefaultDomain.__super__ = hex_domain_Domain;
hex_domain_DefaultDomain.prototype = $extend(hex_domain_Domain.prototype,{
	__class__: hex_domain_DefaultDomain
});
var hex_domain_DomainExpert = function() {
	this._registeredDomains = new haxe_ds_IntMap();
	this._subscribedModules = new haxe_ds_ObjectMap();
	this._removedModules = new haxe_ds_StringMap();
};
$hxClasses["hex.domain.DomainExpert"] = hex_domain_DomainExpert;
hex_domain_DomainExpert.__name__ = ["hex","domain","DomainExpert"];
hex_domain_DomainExpert.getInstance = function() {
	return hex_domain_DomainExpert._Instance;
};
hex_domain_DomainExpert.prototype = {
	getDomainFor: function(module) {
		if(this._subscribedModules.h.__keys__[module.__id__] == null) {
			if(this._registeredDomains.h.hasOwnProperty(hex_domain_DomainExpert._DomainIndex)) {
				var moduleDomain = this._registeredDomains.h[hex_domain_DomainExpert._DomainIndex];
				this._registeredDomains.remove(hex_domain_DomainExpert._DomainIndex);
				hex_domain_DomainExpert._DomainIndex++;
				var key = moduleDomain.getName();
				var _this = this._removedModules;
				if(__map_reserved[key] != null) {
					_this.setReserved(key,false);
				} else {
					_this.h[key] = false;
				}
				this._subscribedModules.set(module,moduleDomain);
				return moduleDomain;
			} else {
				var key1 = Type.getClassName(module == null?null:js_Boot.getClass(module)) + hex_core_HashCodeFactory.getKey(module);
				var tmp;
				var _this1 = this._removedModules;
				if(__map_reserved[key1] != null?_this1.existsReserved(key1):_this1.h.hasOwnProperty(key1)) {
					var _this2 = this._removedModules;
					if(__map_reserved[key1] != null) {
						tmp = _this2.getReserved(key1);
					} else {
						tmp = _this2.h[key1];
					}
				} else {
					tmp = false;
				}
				if(tmp) {
					return null;
				} else {
					var domain = hex_domain_DomainUtil.getDomain(key1,hex_domain_Domain);
					var _this3 = this._removedModules;
					if(__map_reserved[key1] != null) {
						_this3.setReserved(key1,false);
					} else {
						_this3.h[key1] = false;
					}
					this._subscribedModules.set(module,domain);
					return domain;
				}
			}
		} else {
			return this._subscribedModules.h[module.__id__];
		}
	}
	,registerDomain: function(domain) {
		this._registeredDomains.h[hex_domain_DomainExpert._DomainIndex] = domain;
	}
	,releaseDomain: function(module) {
		if(module.get_isReleased()) {
			var key = Type.getClassName(module == null?null:js_Boot.getClass(module)) + hex_core_HashCodeFactory.getKey(module);
			var _this = this._removedModules;
			if(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key)) {
				var _this1 = this._removedModules;
				if(__map_reserved[key] != null) {
					_this1.setReserved(key,true);
				} else {
					_this1.h[key] = true;
				}
			} else {
				var this1 = this._removedModules;
				var key1 = module.getDomain().getName();
				var _this2 = this1;
				if(__map_reserved[key1] != null) {
					_this2.setReserved(key1,true);
				} else {
					_this2.h[key1] = true;
				}
			}
			this._subscribedModules.remove(module);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("Illegal call, '" + Std.string(module) + "' is not released.",{ fileName : "DomainExpert.hx", lineNumber : 93, className : "hex.domain.DomainExpert", methodName : "releaseDomain"}));
		}
	}
	,__class__: hex_domain_DomainExpert
};
var hex_domain_NoDomain = function(domainName) {
	hex_domain_Domain.call(this,domainName);
};
$hxClasses["hex.domain.NoDomain"] = hex_domain_NoDomain;
hex_domain_NoDomain.__name__ = ["hex","domain","NoDomain"];
hex_domain_NoDomain.__super__ = hex_domain_Domain;
hex_domain_NoDomain.prototype = $extend(hex_domain_Domain.prototype,{
	__class__: hex_domain_NoDomain
});
var hex_error_IllegalArgumentException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.IllegalArgumentException"] = hex_error_IllegalArgumentException;
hex_error_IllegalArgumentException.__name__ = ["hex","error","IllegalArgumentException"];
hex_error_IllegalArgumentException.__super__ = hex_error_Exception;
hex_error_IllegalArgumentException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_IllegalArgumentException
});
var hex_error_IllegalStateException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.IllegalStateException"] = hex_error_IllegalStateException;
hex_error_IllegalStateException.__name__ = ["hex","error","IllegalStateException"];
hex_error_IllegalStateException.__super__ = hex_error_Exception;
hex_error_IllegalStateException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_IllegalStateException
});
var hex_error_NoSuchElementException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.NoSuchElementException"] = hex_error_NoSuchElementException;
hex_error_NoSuchElementException.__name__ = ["hex","error","NoSuchElementException"];
hex_error_NoSuchElementException.__super__ = hex_error_Exception;
hex_error_NoSuchElementException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_NoSuchElementException
});
var hex_error_NullPointerException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.NullPointerException"] = hex_error_NullPointerException;
hex_error_NullPointerException.__name__ = ["hex","error","NullPointerException"];
hex_error_NullPointerException.__super__ = hex_error_Exception;
hex_error_NullPointerException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_NullPointerException
});
var hex_error_PrivateConstructorException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.PrivateConstructorException"] = hex_error_PrivateConstructorException;
hex_error_PrivateConstructorException.__name__ = ["hex","error","PrivateConstructorException"];
hex_error_PrivateConstructorException.__super__ = hex_error_Exception;
hex_error_PrivateConstructorException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_PrivateConstructorException
});
var hex_error_UnsupportedOperationException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.UnsupportedOperationException"] = hex_error_UnsupportedOperationException;
hex_error_UnsupportedOperationException.__name__ = ["hex","error","UnsupportedOperationException"];
hex_error_UnsupportedOperationException.__super__ = hex_error_Exception;
hex_error_UnsupportedOperationException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_UnsupportedOperationException
});
var hex_error_VirtualMethodException = function(message,posInfos) {
	hex_error_Exception.call(this,message,posInfos);
};
$hxClasses["hex.error.VirtualMethodException"] = hex_error_VirtualMethodException;
hex_error_VirtualMethodException.__name__ = ["hex","error","VirtualMethodException"];
hex_error_VirtualMethodException.__super__ = hex_error_Exception;
hex_error_VirtualMethodException.prototype = $extend(hex_error_Exception.prototype,{
	__class__: hex_error_VirtualMethodException
});
var hex_event_CallbackHandler = function(scope,callback) {
	this.callbacks = [];
	this.scope = scope;
	this.callbacks.push(callback);
};
$hxClasses["hex.event.CallbackHandler"] = hex_event_CallbackHandler;
hex_event_CallbackHandler.__name__ = ["hex","event","CallbackHandler"];
hex_event_CallbackHandler.prototype = {
	call: function(data) {
		var _g = 0;
		var _g1 = this.callbacks;
		while(_g < _g1.length) {
			var callback = _g1[_g];
			++_g;
			callback.apply(this.scope,data);
		}
	}
	,add: function(callback) {
		if(this.callbacks.indexOf(callback) == -1) {
			this.callbacks.push(callback);
			return true;
		} else {
			return false;
		}
	}
	,remove: function(callback) {
		var index = this.callbacks.indexOf(callback);
		if(index != -1) {
			this.callbacks.splice(index,1);
			return true;
		} else {
			return false;
		}
	}
	,isEmpty: function() {
		return this.callbacks.length == 0;
	}
	,__class__: hex_event_CallbackHandler
};
var hex_event_ClassAdapter = function() {
};
$hxClasses["hex.event.ClassAdapter"] = hex_event_ClassAdapter;
hex_event_ClassAdapter.__name__ = ["hex","event","ClassAdapter"];
hex_event_ClassAdapter.prototype = {
	setCallBackMethod: function(callbackTarget,callbackMethod) {
		this._callbackTarget = callbackTarget;
		this._callbackMethod = callbackMethod;
	}
	,setAdapterClass: function(adapterClass,adapterMethodName) {
		if(adapterMethodName == null) {
			adapterMethodName = "adapt";
		}
		this._adapterClass = adapterClass;
		this._adapterMethodName = adapterMethodName;
	}
	,setFactoryMethod: function(factoryTarget,factoryMethod) {
		this._factoryTarget = factoryTarget;
		this._factoryMethod = factoryMethod;
	}
	,setAnnotationProvider: function(annotationProvider) {
		this._annotationProvider = annotationProvider;
	}
	,getCallbackAdapter: function() {
		var annotationProvider = this._annotationProvider;
		var callbackTarget = this._callbackTarget;
		var callbackMethod = this._callbackMethod;
		var adapterInstance = null;
		var adapterClass = null;
		var adapterMethodName = this._adapterMethodName;
		var factoryTarget = null;
		var factoryMethod = null;
		var isEventAdapterStrategyMacro = false;
		if(this._adapterClass != null) {
			adapterClass = this._adapterClass;
			factoryTarget = this._factoryTarget;
			factoryMethod = this._factoryMethod;
			isEventAdapterStrategyMacro = hex_util_ClassUtil.classExtendsOrImplements(this._adapterClass,hex_event_MacroAdapterStrategy);
			if(!isEventAdapterStrategyMacro) {
				adapterInstance = this._adapterInstance = this._factoryMethod != null?this._factoryMethod(this._adapterClass):Type.createInstance(this._adapterClass,[]);
			}
		}
		var f = function(rest) {
			var result = null;
			if(isEventAdapterStrategyMacro) {
				var aSyncCommand;
				if(factoryTarget != null && factoryMethod != null) {
					aSyncCommand = factoryMethod(adapterClass);
				} else {
					aSyncCommand = Type.createInstance(adapterClass,[]);
				}
				if(!js_Boot.__instanceof(aSyncCommand,hex_event_IAdapterStrategy)) {
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("adapterInstance class should extend AdapterStrategy. Check if you passed the correct class",{ fileName : "ClassAdapter.hx", lineNumber : 108, className : "hex.event.ClassAdapter", methodName : "getCallbackAdapter"}));
				}
				if(js_Boot.__instanceof(aSyncCommand,hex_core_IAnnotationParsable)) {
					annotationProvider.parse(aSyncCommand);
				}
				adapterInstance = aSyncCommand;
				$bind(aSyncCommand,aSyncCommand.adapt).apply(aSyncCommand,rest);
				aSyncCommand.preExecute();
				var handler = new hex_event__$ClassAdapter_MacroAdapterStrategyHandler(callbackTarget,callbackMethod);
				aSyncCommand.addCompleteHandler($bind(handler,handler.onAsyncCommandComplete));
				aSyncCommand.execute();
				return;
			} else if(adapterInstance != null) {
				if(js_Boot.__instanceof(adapterInstance,hex_core_IAnnotationParsable)) {
					annotationProvider.parse(adapterInstance);
				}
				result = Reflect.field(adapterInstance,adapterMethodName).apply(adapterInstance,rest);
			}
			var args = (result instanceof Array) && result.__enum__ == null?result:[result];
			callbackMethod.apply(callbackTarget,args);
		};
		return Reflect.makeVarArgs(f);
	}
	,__class__: hex_event_ClassAdapter
};
var hex_event__$ClassAdapter_MacroAdapterStrategyHandler = function(scope,callback) {
	this.scope = scope;
	this.callback = callback;
};
$hxClasses["hex.event._ClassAdapter.MacroAdapterStrategyHandler"] = hex_event__$ClassAdapter_MacroAdapterStrategyHandler;
hex_event__$ClassAdapter_MacroAdapterStrategyHandler.__name__ = ["hex","event","_ClassAdapter","MacroAdapterStrategyHandler"];
hex_event__$ClassAdapter_MacroAdapterStrategyHandler.prototype = {
	onAsyncCommandComplete: function(command) {
		if(this.callback != null) {
			this.callback.apply(this.scope,[command.getResult()]);
		}
	}
	,__class__: hex_event__$ClassAdapter_MacroAdapterStrategyHandler
};
var hex_event_IClosureDispatcher = function() { };
$hxClasses["hex.event.IClosureDispatcher"] = hex_event_IClosureDispatcher;
hex_event_IClosureDispatcher.__name__ = ["hex","event","IClosureDispatcher"];
hex_event_IClosureDispatcher.prototype = {
	__class__: hex_event_IClosureDispatcher
};
var hex_event_ClosureDispatcher = function() {
	this._callbacks = new haxe_ds_StringMap();
	this._callbackSize = 0;
};
$hxClasses["hex.event.ClosureDispatcher"] = hex_event_ClosureDispatcher;
hex_event_ClosureDispatcher.__name__ = ["hex","event","ClosureDispatcher"];
hex_event_ClosureDispatcher.__interfaces__ = [hex_event_IClosureDispatcher];
hex_event_ClosureDispatcher.prototype = {
	dispatch: function(messageType,data) {
		var _this = this._callbacks;
		var key = messageType;
		if(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key)) {
			var _this1 = this._callbacks;
			var key1 = messageType;
			var callbacks = (__map_reserved[key1] != null?_this1.getReserved(key1):_this1.h[key1]).slice();
			var _g = 0;
			while(_g < callbacks.length) {
				var f = callbacks[_g];
				++_g;
				f.apply(null,data);
			}
		}
	}
	,addHandler: function(messageType,callback) {
		var _this = this._callbacks;
		var key = messageType;
		if(!(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key))) {
			var _this1 = this._callbacks;
			var key1 = messageType;
			var value = [];
			if(__map_reserved[key1] != null) {
				_this1.setReserved(key1,value);
			} else {
				_this1.h[key1] = value;
			}
		}
		var _this2 = this._callbacks;
		var key2 = messageType;
		var callbacks = __map_reserved[key2] != null?_this2.getReserved(key2):_this2.h[key2];
		var index = callbacks.indexOf(callback);
		if(index == -1) {
			callbacks.push(callback);
			this._callbackSize++;
			return true;
		} else {
			return false;
		}
	}
	,removeHandler: function(messageType,callback) {
		var _this = this._callbacks;
		var key = messageType;
		if(!(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key))) {
			return false;
		}
		var _this1 = this._callbacks;
		var key1 = messageType;
		var callbacks = __map_reserved[key1] != null?_this1.getReserved(key1):_this1.h[key1];
		var index = callbacks.indexOf(callback);
		if(index == -1) {
			return false;
		} else {
			callbacks.splice(index,1);
			this._callbackSize--;
			if(callbacks.length == 0) {
				this._callbacks.remove(messageType);
			}
			return true;
		}
	}
	,removeAllListeners: function() {
		this._callbacks = new haxe_ds_StringMap();
		this._callbackSize = 0;
	}
	,isEmpty: function() {
		return this._callbackSize == 0;
	}
	,hasHandler: function(messageType,callback) {
		var _this = this._callbacks;
		var key = messageType;
		if(!(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key))) {
			return false;
		}
		if(callback == null) {
			return true;
		} else {
			var _this1 = this._callbacks;
			var key1 = messageType;
			return (__map_reserved[key1] != null?_this1.getReserved(key1):_this1.h[key1]).indexOf(callback) != -1;
		}
	}
	,__class__: hex_event_ClosureDispatcher
};
var hex_event_CompositeDispatcher = function() {
	this._isSealed = false;
	this._cachedMethodCalls = [];
	this._dispatchers = [];
};
$hxClasses["hex.event.CompositeDispatcher"] = hex_event_CompositeDispatcher;
hex_event_CompositeDispatcher.__name__ = ["hex","event","CompositeDispatcher"];
hex_event_CompositeDispatcher.prototype = {
	dispatch: function(messageType,data) {
		this._seal(true);
		var _g = 0;
		var _g1 = this._dispatchers;
		while(_g < _g1.length) {
			var dispatcher = _g1[_g];
			++_g;
			dispatcher.dispatch(messageType,data);
		}
		this._seal(false);
	}
	,addListener: function(listener) {
		throw new js__$Boot_HaxeError(new hex_error_UnsupportedOperationException("'addListener' is not supported in '" + hex_log_Stringifier.stringify(this) + "'",{ fileName : "CompositeDispatcher.hx", lineNumber : 75, className : "hex.event.CompositeDispatcher", methodName : "addListener"}));
	}
	,removeListener: function(listener) {
		throw new js__$Boot_HaxeError(new hex_error_UnsupportedOperationException("'removeListener' is not supported in '" + hex_log_Stringifier.stringify(this) + "'",{ fileName : "CompositeDispatcher.hx", lineNumber : 80, className : "hex.event.CompositeDispatcher", methodName : "removeListener"}));
	}
	,removeAllListeners: function() {
		if(!this._isSealed) {
			var _g = 0;
			var _g1 = this._dispatchers;
			while(_g < _g1.length) {
				var dispatcher = _g1[_g];
				++_g;
				dispatcher.removeAllListeners();
			}
		} else {
			var f = $bind(this,this.removeAllListeners);
			var tmp = function() {
				f();
			};
			this._cachedMethodCalls.push(tmp);
		}
	}
	,isEmpty: function() {
		var _g = 0;
		var _g1 = this._dispatchers;
		while(_g < _g1.length) {
			var dispatcher = _g1[_g];
			++_g;
			if(!dispatcher.isEmpty()) {
				return false;
			}
		}
		return true;
	}
	,isRegistered: function(listener,messageType) {
		throw new js__$Boot_HaxeError(new hex_error_UnsupportedOperationException("'isRegistered' is not supported in '" + hex_log_Stringifier.stringify(this) + "'",{ fileName : "CompositeDispatcher.hx", lineNumber : 112, className : "hex.event.CompositeDispatcher", methodName : "isRegistered"}));
	}
	,hasHandler: function(messageType,scope) {
		var b = false;
		var _g = 0;
		var _g1 = this._dispatchers;
		while(_g < _g1.length) {
			var dispatcher = _g1[_g];
			++_g;
			if(!dispatcher.hasHandler(messageType,scope)) {
				b = b;
			} else {
				b = true;
			}
		}
		return b;
	}
	,add: function(dispatcher) {
		if(!this._isSealed) {
			if(this._dispatchers.indexOf(dispatcher) == -1) {
				this._dispatchers.push(dispatcher);
				return true;
			} else {
				return false;
			}
		} else {
			var f = $bind(this,this.add);
			var a1 = dispatcher;
			var tmp = function() {
				return f(a1);
			};
			this._cachedMethodCalls.push(tmp);
			return false;
		}
	}
	,remove: function(dispatcher) {
		if(!this._isSealed) {
			var index = this._dispatchers.indexOf(dispatcher);
			if(index != -1) {
				this._dispatchers.splice(index,1);
				return true;
			} else {
				return false;
			}
		} else {
			var f = $bind(this,this.remove);
			var a1 = dispatcher;
			var tmp = function() {
				return f(a1);
			};
			this._cachedMethodCalls.push(tmp);
			return false;
		}
	}
	,_seal: function(isSealed) {
		if(isSealed != this._isSealed) {
			this._isSealed = isSealed;
			if(!this._isSealed && this._cachedMethodCalls.length > 0) {
				var _g = 0;
				var _g1 = this._cachedMethodCalls;
				while(_g < _g1.length) {
					var cachedMethodCall = _g1[_g];
					++_g;
					cachedMethodCall();
				}
				this._cachedMethodCalls = [];
			}
		}
	}
	,__class__: hex_event_CompositeDispatcher
};
var hex_event_EventProxy = function(scope,method) {
	this.scope = scope;
	this.callback = method;
};
$hxClasses["hex.event.EventProxy"] = hex_event_EventProxy;
hex_event_EventProxy.__name__ = ["hex","event","EventProxy"];
hex_event_EventProxy.prototype = {
	handleCallback: function(args) {
		if(this.scope != null && this.callback != null) {
			this.callback.apply(this.scope,args);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("handleCallback call failed with method '" + Std.string(this.callback) + " and scope '" + Std.string(this.scope) + "'",{ fileName : "EventProxy.hx", lineNumber : 28, className : "hex.event.EventProxy", methodName : "handleCallback"}));
		}
	}
	,__class__: hex_event_EventProxy
};
var hex_event_IAdapterStrategy = function() { };
$hxClasses["hex.event.IAdapterStrategy"] = hex_event_IAdapterStrategy;
hex_event_IAdapterStrategy.__name__ = ["hex","event","IAdapterStrategy"];
hex_event_IAdapterStrategy.prototype = {
	__class__: hex_event_IAdapterStrategy
};
var hex_event_MacroAdapterStrategy = function(target,method) {
	this._target = target;
	this._method = method;
	hex_control_macro_Macro.call(this);
};
$hxClasses["hex.event.MacroAdapterStrategy"] = hex_event_MacroAdapterStrategy;
hex_event_MacroAdapterStrategy.__name__ = ["hex","event","MacroAdapterStrategy"];
hex_event_MacroAdapterStrategy.__interfaces__ = [hex_event_IAdapterStrategy];
hex_event_MacroAdapterStrategy.__super__ = hex_control_macro_Macro;
hex_event_MacroAdapterStrategy.prototype = $extend(hex_control_macro_Macro.prototype,{
	adapt: function(args) {
		return this._method.apply(this._target,args);
	}
	,getResult: function() {
		return this._result;
	}
	,__class__: hex_event_MacroAdapterStrategy
});
var hex_event__$MessageType_MessageType_$Impl_$ = {};
$hxClasses["hex.event._MessageType.MessageType_Impl_"] = hex_event__$MessageType_MessageType_$Impl_$;
hex_event__$MessageType_MessageType_$Impl_$.__name__ = ["hex","event","_MessageType","MessageType_Impl_"];
hex_event__$MessageType_MessageType_$Impl_$._new = function(name) {
	if(name == null) {
		name = "handleMessage";
	}
	return name;
};
hex_event__$MessageType_MessageType_$Impl_$.fromString = function(s) {
	return s;
};
hex_event__$MessageType_MessageType_$Impl_$.toString = function(this1) {
	return this1;
};
var hex_ioc_assembler_AbstractApplicationContext = function(coreFactory,name) {
	this._coreFactory = coreFactory;
	this._name = name;
	this._domain = hex_domain_DomainUtil.getDomain(name,hex_domain_Domain);
};
$hxClasses["hex.ioc.assembler.AbstractApplicationContext"] = hex_ioc_assembler_AbstractApplicationContext;
hex_ioc_assembler_AbstractApplicationContext.__name__ = ["hex","ioc","assembler","AbstractApplicationContext"];
hex_ioc_assembler_AbstractApplicationContext.__interfaces__ = [hex_core_IApplicationContext];
hex_ioc_assembler_AbstractApplicationContext.prototype = {
	getName: function() {
		return this._name;
	}
	,getDomain: function() {
		return this._domain;
	}
	,dispatch: function(messageType,data) {
		throw new js__$Boot_HaxeError(new hex_error_VirtualMethodException(hex_log_Stringifier.stringify(this) + ".dispatch is not implemented",{ fileName : "AbstractApplicationContext.hx", lineNumber : 41, className : "hex.ioc.assembler.AbstractApplicationContext", methodName : "dispatch"}));
	}
	,getCoreFactory: function() {
		return this._coreFactory;
	}
	,getInjector: function() {
		return this._coreFactory.getInjector();
	}
	,dispose: function() {
	}
	,__class__: hex_ioc_assembler_AbstractApplicationContext
};
var hex_ioc_assembler_ApplicationAssemblerMessage = function() {
	throw new js__$Boot_HaxeError(new hex_error_PrivateConstructorException("This class can't be instantiated.",{ fileName : "ApplicationAssemblerMessage.hx", lineNumber : 25, className : "hex.ioc.assembler.ApplicationAssemblerMessage", methodName : "new"}));
};
$hxClasses["hex.ioc.assembler.ApplicationAssemblerMessage"] = hex_ioc_assembler_ApplicationAssemblerMessage;
hex_ioc_assembler_ApplicationAssemblerMessage.__name__ = ["hex","ioc","assembler","ApplicationAssemblerMessage"];
hex_ioc_assembler_ApplicationAssemblerMessage.prototype = {
	__class__: hex_ioc_assembler_ApplicationAssemblerMessage
};
var hex_ioc_assembler_ApplicationContext = function(applicationContextName) {
	var domain = hex_domain_DomainUtil.getDomain(applicationContextName,hex_domain_Domain);
	var contextDispatcher = hex_domain_ApplicationDomainDispatcher.getInstance().getDomainDispatcher(domain);
	var injector = Type.createInstance(Type.resolveClass("hex.di.Injector"),[]);
	injector.mapToValue(hex_di_IBasicInjector,injector);
	injector.mapToValue(hex_di_IDependencyInjector,injector);
	injector.mapToType(hex_control_macro_IMacroExecutor,hex_control_macro_MacroExecutor);
	var logger = new hex_log_DomainLogger(domain);
	injector.mapToValue(hex_log_ILogger,logger);
	var annotationProvider = hex_metadata_AnnotationProvider.getAnnotationProvider(hex_domain_DomainUtil.getDomain(applicationContextName,hex_domain_Domain));
	annotationProvider.registerInjector(injector);
	injector.mapToValue(hex_metadata_IAnnotationProvider,annotationProvider);
	var coreFactory = new hex_ioc_core_CoreFactory(injector,annotationProvider);
	injector.mapToValue(hex_core_IApplicationContext,this);
	coreFactory.register(applicationContextName,this);
	hex_ioc_assembler_AbstractApplicationContext.call(this,coreFactory,applicationContextName);
	coreFactory.getInjector().mapClassNameToValue("hex.event.IDispatcher<{}>",contextDispatcher,applicationContextName);
	this._dispatcher = contextDispatcher;
	this._initStateMachine();
};
$hxClasses["hex.ioc.assembler.ApplicationContext"] = hex_ioc_assembler_ApplicationContext;
hex_ioc_assembler_ApplicationContext.__name__ = ["hex","ioc","assembler","ApplicationContext"];
hex_ioc_assembler_ApplicationContext.__super__ = hex_ioc_assembler_AbstractApplicationContext;
hex_ioc_assembler_ApplicationContext.prototype = $extend(hex_ioc_assembler_AbstractApplicationContext.prototype,{
	_initStateList: function() {
		this.state = new hex_ioc_assembler_ApplicationContextStateList();
	}
	,_initStateMachine: function() {
		this._initStateList();
		this._stateMachine = new hex_state_StateMachine(this.state.CONTEXT_INITIALIZED);
		this._stateController = new hex_state_control_StateController(this.getInjector(),this._stateMachine);
		this._dispatcher.addListener(this._stateController);
	}
	,dispatch: function(messageType,data) {
		this._dispatcher.dispatch(messageType,data);
	}
	,getCurrentState: function() {
		return this._stateController.getCurrentState();
	}
	,dispose: function() {
		var injector = this.getInjector();
		var annotationProvider = hex_metadata_AnnotationProvider.getAnnotationProvider(hex_domain_DomainUtil.getDomain(this.getName(),hex_domain_Domain));
		annotationProvider.unregisterInjector(injector);
		hex_metadata_AnnotationProvider.release();
		hex_ioc_assembler_AbstractApplicationContext.prototype.dispose.call(this);
	}
	,__class__: hex_ioc_assembler_ApplicationContext
});
var hex_ioc_assembler_ApplicationContextStateList = function() {
	this.ASSEMBLING_END = new hex_state_State("onAssemblingEnd");
	this.MODULES_INITIALIZED = new hex_state_State("onModulesInitialized");
	this.METHODS_CALLED = new hex_state_State("onMethodsCalled");
	this.DOMAIN_LISTENERS_ASSIGNED = new hex_state_State("onDomainListenersAssigned");
	this.OBJECTS_BUILT = new hex_state_State("onObjectsBuilt");
	this.ASSEMBLING_START = new hex_state_State("onAssemblingStart");
	this.STATE_TRANSITIONS_BUILT = new hex_state_State("onStateTransitionsBuilt");
	this.CONTEXT_PARSED = new hex_state_State("onContextParsed");
	this.CONTEXT_INITIALIZED = new hex_state_State("onContextInitialized");
	this.CONTEXT_INITIALIZED.addTransition(hex_ioc_assembler_ApplicationAssemblerMessage.CONTEXT_PARSED,this.CONTEXT_PARSED);
	this.CONTEXT_PARSED.addTransition(hex_ioc_assembler_ApplicationAssemblerMessage.STATE_TRANSITIONS_BUILT,this.STATE_TRANSITIONS_BUILT);
	this.STATE_TRANSITIONS_BUILT.addTransition(hex_ioc_assembler_ApplicationAssemblerMessage.ASSEMBLING_START,this.ASSEMBLING_START);
	this.ASSEMBLING_START.addTransition(hex_ioc_assembler_ApplicationAssemblerMessage.OBJECTS_BUILT,this.OBJECTS_BUILT);
	this.OBJECTS_BUILT.addTransition(hex_ioc_assembler_ApplicationAssemblerMessage.DOMAIN_LISTENERS_ASSIGNED,this.DOMAIN_LISTENERS_ASSIGNED);
	this.DOMAIN_LISTENERS_ASSIGNED.addTransition(hex_ioc_assembler_ApplicationAssemblerMessage.METHODS_CALLED,this.METHODS_CALLED);
	this.METHODS_CALLED.addTransition(hex_ioc_assembler_ApplicationAssemblerMessage.MODULES_INITIALIZED,this.MODULES_INITIALIZED);
	this.MODULES_INITIALIZED.addTransition(hex_ioc_assembler_ApplicationAssemblerMessage.ASSEMBLING_END,this.ASSEMBLING_END);
	this.ASSEMBLING_END.addTransition(hex_ioc_assembler_ApplicationAssemblerMessage.STATE_TRANSITIONS_BUILT,this.STATE_TRANSITIONS_BUILT);
};
$hxClasses["hex.ioc.assembler.ApplicationContextStateList"] = hex_ioc_assembler_ApplicationContextStateList;
hex_ioc_assembler_ApplicationContextStateList.__name__ = ["hex","ioc","assembler","ApplicationContextStateList"];
hex_ioc_assembler_ApplicationContextStateList.prototype = {
	__class__: hex_ioc_assembler_ApplicationContextStateList
};
var hex_util_FastEval = function() {
};
$hxClasses["hex.util.FastEval"] = hex_util_FastEval;
hex_util_FastEval.__name__ = ["hex","util","FastEval"];
hex_util_FastEval.fromTarget = function(target,toEval,coreFactory) {
	var members = toEval.split(".");
	var result;
	while(members.length > 0) {
		var member = members.shift();
		result = Reflect.field(target,member);
		if(result == null) {
			if(js_Boot.__instanceof(target,hex_ioc_assembler_ApplicationContext) && coreFactory.isRegisteredWithKey(member)) {
				result = coreFactory.locate(member);
			} else if(js_Boot.__instanceof(target,HTMLElement)) {
				result = (js_Boot.__cast(target , HTMLElement)).getElementsByClassName(member)[0];
			} else {
				throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("ObjectUtil.fastEvalFromTarget(" + Std.string(target) + ", " + toEval + ", " + Std.string(coreFactory) + ") failed.",{ fileName : "FastEval.hx", lineNumber : 42, className : "hex.util.FastEval", methodName : "fromTarget"}));
			}
		}
		target = result;
	}
	return target;
};
hex_util_FastEval.prototype = {
	__class__: hex_util_FastEval
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class?o.__name__ != null:false) {
			return true;
		}
		if(cl == Enum?o.__ename__ != null:false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var hex_log_Stringifier = function() {
	throw new js__$Boot_HaxeError(new hex_error_PrivateConstructorException("Stringifier class can't be instantiated.",{ fileName : "Stringifier.hx", lineNumber : 15, className : "hex.log.Stringifier", methodName : "new"}));
};
$hxClasses["hex.log.Stringifier"] = hex_log_Stringifier;
hex_log_Stringifier.__name__ = ["hex","log","Stringifier"];
hex_log_Stringifier.setStringifier = function(o) {
	hex_log_Stringifier._STRATEGY = o;
};
hex_log_Stringifier.getStringifier = function() {
	return hex_log_Stringifier._STRATEGY;
};
hex_log_Stringifier.stringify = function(target) {
	if(hex_log_Stringifier._STRATEGY == null) {
		hex_log_Stringifier._STRATEGY = new hex_log_BasicStringifierStrategy();
	}
	return hex_log_Stringifier._STRATEGY.stringify(target);
};
hex_log_Stringifier.getPosInfos = function(posInfos) {
	return posInfos;
};
hex_log_Stringifier.prototype = {
	__class__: hex_log_Stringifier
};
var hex_log_IStringifierStrategy = function() { };
$hxClasses["hex.log.IStringifierStrategy"] = hex_log_IStringifierStrategy;
hex_log_IStringifierStrategy.__name__ = ["hex","log","IStringifierStrategy"];
hex_log_IStringifierStrategy.prototype = {
	__class__: hex_log_IStringifierStrategy
};
var hex_log_BasicStringifierStrategy = function() {
};
$hxClasses["hex.log.BasicStringifierStrategy"] = hex_log_BasicStringifierStrategy;
hex_log_BasicStringifierStrategy.__name__ = ["hex","log","BasicStringifierStrategy"];
hex_log_BasicStringifierStrategy.__interfaces__ = [hex_log_IStringifierStrategy];
hex_log_BasicStringifierStrategy.prototype = {
	stringify: function(target) {
		var type = target == null?null:js_Boot.getClass(target);
		if(type != null) {
			return Type.getClassName(type);
		} else {
			return "Dynamic";
		}
	}
	,toString: function() {
		return hex_log_Stringifier.stringify(this);
	}
	,__class__: hex_log_BasicStringifierStrategy
};
var hex_log_Logger = function() {
	this.setLevel(hex_log_LogLevel._ALL);
	this._dispatcher = new hex_domain_DomainDispatcher();
};
$hxClasses["hex.log.Logger"] = hex_log_Logger;
hex_log_Logger.__name__ = ["hex","log","Logger"];
hex_log_Logger.getInstance = function() {
	if(hex_log_Logger._Instance == null) {
		hex_log_Logger._Instance = new hex_log_Logger();
	}
	return hex_log_Logger._Instance;
};
hex_log_Logger.debug = function(o,domain,posInfos) {
	hex_log_Logger.getInstance().log(o,hex_log_LogLevel._DEBUG,domain,posInfos);
};
hex_log_Logger.info = function(o,domain,posInfos) {
	hex_log_Logger.getInstance().log(o,hex_log_LogLevel._INFO,domain,posInfos);
};
hex_log_Logger.warn = function(o,domain,posInfos) {
	hex_log_Logger.getInstance().log(o,hex_log_LogLevel._WARN,domain,posInfos);
};
hex_log_Logger.error = function(o,domain,posInfos) {
	hex_log_Logger.getInstance().log(o,hex_log_LogLevel._ERROR,domain,posInfos);
};
hex_log_Logger.fatal = function(o,domain,posInfos) {
	hex_log_Logger.getInstance().log(o,hex_log_LogLevel._FATAL,domain,posInfos);
};
hex_log_Logger.clear_all = function(domain) {
	hex_log_Logger.getInstance().clear();
};
hex_log_Logger.prototype = {
	setLevel: function(level) {
		this._level = level;
	}
	,getLevel: function() {
		return this._level;
	}
	,clear: function() {
		this._dispatcher.dispatch("onClear");
	}
	,log: function(o,level,domain,posInfos) {
		if(this._level.get_value() <= level.get_value()) {
			this._dispatcher.dispatch("onLog",domain,[new hex_log_LoggerMessage(o,level,domain == null?hex_domain_NoDomain.DOMAIN:domain,posInfos)]);
		}
	}
	,addListener: function(listener,domain) {
		this._dispatcher.addHandler("onLog",listener,$bind(listener,listener.onLog),domain);
		return this._dispatcher.addHandler("onClear",listener,$bind(listener,listener.onClear),domain);
	}
	,removeListener: function(listener,domain) {
		this._dispatcher.removeHandler("onLog",listener,$bind(listener,listener.onLog),domain);
		return this._dispatcher.removeHandler("onClear",listener,$bind(listener,listener.onClear),domain);
	}
	,isRegistered: function(listener,domain) {
		return this._dispatcher.isRegistered(listener,"onLog",domain);
	}
	,removeAllListeners: function() {
		this._dispatcher.removeAllListeners();
	}
	,toString: function() {
		return hex_log_Stringifier.stringify(this);
	}
	,__class__: hex_log_Logger
};
var hex_log_LogLevel = function(value) {
	this.value = value;
};
$hxClasses["hex.log.LogLevel"] = hex_log_LogLevel;
hex_log_LogLevel.__name__ = ["hex","log","LogLevel"];
hex_log_LogLevel.__properties__ = {get_OFF:"get_OFF",get_FATAL:"get_FATAL",get_ERROR:"get_ERROR",get_WARN:"get_WARN",get_INFO:"get_INFO",get_DEBUG:"get_DEBUG",get_ALL:"get_ALL",get_LEVELS:"get_LEVELS"}
hex_log_LogLevel.get_LEVELS = function() {
	return [hex_log_LogLevel._ALL,hex_log_LogLevel._DEBUG,hex_log_LogLevel._INFO,hex_log_LogLevel._WARN,hex_log_LogLevel._ERROR,hex_log_LogLevel._FATAL,hex_log_LogLevel._OFF];
};
hex_log_LogLevel.get_ALL = function() {
	return hex_log_LogLevel._ALL;
};
hex_log_LogLevel.get_DEBUG = function() {
	return hex_log_LogLevel._DEBUG;
};
hex_log_LogLevel.get_INFO = function() {
	return hex_log_LogLevel._INFO;
};
hex_log_LogLevel.get_WARN = function() {
	return hex_log_LogLevel._WARN;
};
hex_log_LogLevel.get_ERROR = function() {
	return hex_log_LogLevel._ERROR;
};
hex_log_LogLevel.get_FATAL = function() {
	return hex_log_LogLevel._FATAL;
};
hex_log_LogLevel.get_OFF = function() {
	return hex_log_LogLevel._OFF;
};
hex_log_LogLevel.prototype = {
	get_value: function() {
		return this.value;
	}
	,toString: function() {
		var _g = this.get_value();
		switch(_g) {
		case 0:
			return "ALL";
		case 10000:
			return "DEBUG";
		case 20000:
			return "INFO";
		case 30000:
			return "WARN";
		case 40000:
			return "ERROR";
		case 50000:
			return "FATAL";
		case 60000:
			return "OFF";
		}
		return "";
	}
	,__class__: hex_log_LogLevel
	,__properties__: {get_value:"get_value"}
};
var hex_ioc_core_CoreFactory = function(injector,annotationProvider) {
	this._injector = injector;
	this._annotationProvider = annotationProvider;
	this._dispatcher = new hex_event_ClosureDispatcher();
	this._map = new haxe_ds_StringMap();
	this._classPaths = new haxe_ds_StringMap();
	this.addProxyFactoryMethod("hex.event.MessageType",this,$bind(this,this._makeMessageType));
};
$hxClasses["hex.ioc.core.CoreFactory"] = hex_ioc_core_CoreFactory;
hex_ioc_core_CoreFactory.__name__ = ["hex","ioc","core","CoreFactory"];
hex_ioc_core_CoreFactory.__interfaces__ = [hex_core_ICoreFactory];
hex_ioc_core_CoreFactory.setFastEvalMethod = function(method) {
	hex_ioc_core_CoreFactory._fastEvalMethod = method;
};
hex_ioc_core_CoreFactory.prototype = {
	_makeMessageType: function(s) {
		return s;
	}
	,addHandler: function(messageType,callback) {
		return this._dispatcher.addHandler(messageType,callback);
	}
	,removeHandler: function(messageType,callback) {
		return this._dispatcher.removeHandler(messageType,callback);
	}
	,addListener: function(listener) {
		var b = this._dispatcher.addHandler("onRegister",$bind(listener,listener.onRegister));
		if(!this._dispatcher.addHandler("onUnregister",$bind(listener,listener.onUnregister))) {
			return b;
		} else {
			return true;
		}
	}
	,removeListener: function(listener) {
		var b = this._dispatcher.removeHandler("onRegister",$bind(listener,listener.onRegister));
		if(!this._dispatcher.removeHandler("onUnregister",$bind(listener,listener.onUnregister))) {
			return b;
		} else {
			return true;
		}
	}
	,keys: function() {
		var a = [];
		var it = this._map.keys();
		while(it.hasNext()) a.push(it.next());
		return a;
	}
	,values: function() {
		var a = [];
		var _this = this._map;
		var it = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(it.hasNext()) a.push(it.next());
		return a;
	}
	,locate: function(key) {
		var _this = this._map;
		if(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key)) {
			var _this1 = this._map;
			if(__map_reserved[key] != null) {
				return _this1.getReserved(key);
			} else {
				return _this1.h[key];
			}
		} else if(key.indexOf(".") != -1) {
			var props = key.split(".");
			var baseKey = props.shift();
			var _this2 = this._map;
			if(__map_reserved[baseKey] != null?_this2.existsReserved(baseKey):_this2.h.hasOwnProperty(baseKey)) {
				var _this3 = this._map;
				var target = __map_reserved[baseKey] != null?_this3.getReserved(baseKey):_this3.h[baseKey];
				return this.fastEvalFromTarget(target,props.join("."));
			}
		}
		throw new js__$Boot_HaxeError(new hex_error_NoSuchElementException("Can't find item with '" + key + "' key in " + hex_log_Stringifier.stringify(this),{ fileName : "CoreFactory.hx", lineNumber : 104, className : "hex.ioc.core.CoreFactory", methodName : "locate"}));
	}
	,isRegisteredWithKey: function(key) {
		var _this = this._map;
		var key1 = key;
		if(__map_reserved[key1] != null) {
			return _this.existsReserved(key1);
		} else {
			return _this.h.hasOwnProperty(key1);
		}
	}
	,isInstanceRegistered: function(instance) {
		return this.values().indexOf(instance) != -1;
	}
	,register: function(key,element) {
		var _this = this._map;
		if(!(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key))) {
			var _this1 = this._map;
			var value = element;
			if(__map_reserved[key] != null) {
				_this1.setReserved(key,value);
			} else {
				_this1.h[key] = value;
			}
			this._dispatcher.dispatch("onRegister",[key,element]);
			return true;
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("register fails, key is already registered.",{ fileName : "CoreFactory.hx", lineNumber : 127, className : "hex.ioc.core.CoreFactory", methodName : "register"}));
		}
	}
	,unregisterWithKey: function(key) {
		var _this = this._map;
		if(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key)) {
			__map_reserved;
			this._map.remove(key);
			this._dispatcher.dispatch("onUnregister",[key]);
			return true;
		} else {
			return false;
		}
	}
	,unregister: function(instance) {
		var key = this.getKeyOfInstance(instance);
		if(key != null) {
			return this.unregisterWithKey(key);
		} else {
			return false;
		}
	}
	,getKeyOfInstance: function(instance) {
		var iterator = this._map.keys();
		while(iterator.hasNext()) {
			var key = iterator.next();
			var _this = this._map;
			if((__map_reserved[key] != null?_this.getReserved(key):_this.h[key]) == instance) {
				return key;
			}
		}
		return null;
	}
	,add: function(map) {
		var iterator = map.keys();
		while(iterator.hasNext()) {
			var key = iterator.next();
			try {
				this.register(key,__map_reserved[key] != null?map.getReserved(key):map.h[key]);
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if( js_Boot.__instanceof(e,hex_error_IllegalArgumentException) ) {
					e.message = "add() fails. " + e.message;
					throw new js__$Boot_HaxeError(e);
				} else throw(e);
			}
		}
	}
	,buildInstance: function(constructorVO) {
		var qualifiedClassName = constructorVO.className;
		var args = constructorVO["arguments"];
		var factoryMethod = constructorVO.factory;
		var staticCall = constructorVO.staticCall;
		var staticRef = constructorVO.staticRef;
		var injectorCreation = constructorVO.injectorCreation;
		var injectInto = constructorVO.injectInto;
		var classReference = null;
		var classFactory = null;
		var _this = this._classPaths;
		if(__map_reserved[qualifiedClassName] != null?_this.existsReserved(qualifiedClassName):_this.h.hasOwnProperty(qualifiedClassName)) {
			var _this1 = this._classPaths;
			if(__map_reserved[qualifiedClassName] != null) {
				classFactory = _this1.getReserved(qualifiedClassName);
			} else {
				classFactory = _this1.h[qualifiedClassName];
			}
		} else {
			try {
				classReference = hex_util_ClassUtil.getClassReference(qualifiedClassName);
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if( js_Boot.__instanceof(e,hex_error_IllegalArgumentException) ) {
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("'" + qualifiedClassName + "' class is not available in current domain",{ fileName : "CoreFactory.hx", lineNumber : 211, className : "hex.ioc.core.CoreFactory", methodName : "buildInstance"}));
				} else throw(e);
			}
		}
		var obj = null;
		if(injectorCreation) {
			obj = this._injector.instantiateUnmapped(classReference);
		} else if(factoryMethod != null) {
			if(staticRef != null) {
				var staticReference = Reflect.field(classReference,staticRef);
				if(staticReference != null) {
					var methodReference = Reflect.field(staticReference,factoryMethod);
					if(methodReference != null) {
						obj = methodReference.apply(staticReference,args);
					} else {
						throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException(qualifiedClassName + "." + staticReference + "." + factoryMethod + "()' factory method call failed.",{ fileName : "CoreFactory.hx", lineNumber : 240, className : "hex.ioc.core.CoreFactory", methodName : "buildInstance"}));
					}
				} else {
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException(qualifiedClassName + "." + staticReference + "' is not available.",{ fileName : "CoreFactory.hx", lineNumber : 246, className : "hex.ioc.core.CoreFactory", methodName : "buildInstance"}));
				}
			} else if(staticCall != null) {
				var inst = null;
				var staticCallRef = Reflect.field(classReference,staticCall);
				if(staticCallRef != null) {
					inst = staticCallRef();
				} else {
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException(qualifiedClassName + "." + staticCall + "()' static method call failed.",{ fileName : "CoreFactory.hx", lineNumber : 260, className : "hex.ioc.core.CoreFactory", methodName : "buildInstance"}));
				}
				var methodReference1 = Reflect.field(inst,factoryMethod);
				if(methodReference1 != null) {
					obj = methodReference1.apply(inst,args);
				} else {
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException(qualifiedClassName + "." + staticCall + "()." + factoryMethod + "()' factory method call failed.",{ fileName : "CoreFactory.hx", lineNumber : 270, className : "hex.ioc.core.CoreFactory", methodName : "buildInstance"}));
				}
			} else {
				throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("'" + factoryMethod + "' method cannot be called on '" + constructorVO.className + "' class. Add static method or variable to make it working.",{ fileName : "CoreFactory.hx", lineNumber : 275, className : "hex.ioc.core.CoreFactory", methodName : "buildInstance"}));
			}
		} else if(staticCall != null) {
			var staticCallReference = Reflect.field(classReference,staticCall);
			if(staticCallReference != null) {
				obj = staticCallReference.apply(classReference,args);
			} else {
				throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException(qualifiedClassName + "." + staticCall + "()' static method call failed.",{ fileName : "CoreFactory.hx", lineNumber : 288, className : "hex.ioc.core.CoreFactory", methodName : "buildInstance"}));
			}
		} else {
			if(args == null) {
				args = [];
			}
			if(classReference != null) {
				try {
					obj = Type.createInstance(classReference,args);
				} catch( e1 ) {
					if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("Instantiation of class '" + qualifiedClassName + "' failed with arguments: " + Std.string(args) + " : " + Std.string(e1),{ fileName : "CoreFactory.hx", lineNumber : 306, className : "hex.ioc.core.CoreFactory", methodName : "buildInstance"}));
				}
			} else {
				try {
					obj = classFactory.factoryMethod.apply(classFactory.scope,args);
				} catch( e2 ) {
					if (e2 instanceof js__$Boot_HaxeError) e2 = e2.val;
					throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("Instantiation of class '" + qualifiedClassName + "' failed with class factory and arguments: " + Std.string(args) + " : " + Std.string(e2),{ fileName : "CoreFactory.hx", lineNumber : 318, className : "hex.ioc.core.CoreFactory", methodName : "buildInstance"}));
				}
			}
			if(injectInto) {
				this._injector.injectInto(obj);
			}
			if(js_Boot.__instanceof(obj,hex_core_IAnnotationParsable)) {
				this._annotationProvider.parse(obj);
			}
			if(js_Boot.__instanceof(obj,hex_service_IService)) {
				obj.createConfiguration();
			}
		}
		return obj;
	}
	,clear: function() {
		this._map = new haxe_ds_StringMap();
		this._classPaths = new haxe_ds_StringMap();
	}
	,getInjector: function() {
		return this._injector;
	}
	,addProxyFactoryMethod: function(classPath,scope,factoryMethod) {
		var _this = this._classPaths;
		if(!(__map_reserved[classPath] != null?_this.existsReserved(classPath):_this.h.hasOwnProperty(classPath))) {
			var _this1 = this._classPaths;
			var value = { scope : scope, factoryMethod : factoryMethod};
			if(__map_reserved[classPath] != null) {
				_this1.setReserved(classPath,value);
			} else {
				_this1.h[classPath] = value;
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("registerClassPath(" + classPath + ", " + Std.string(factoryMethod) + ") fails, classPath is already registered.",{ fileName : "CoreFactory.hx", lineNumber : 361, className : "hex.ioc.core.CoreFactory", methodName : "addProxyFactoryMethod"}));
		}
	}
	,removeProxyFactoryMethod: function(classPath) {
		var _this = this._classPaths;
		if(__map_reserved[classPath] != null?_this.existsReserved(classPath):_this.h.hasOwnProperty(classPath)) {
			this._classPaths.remove(classPath);
			return true;
		} else {
			return false;
		}
	}
	,hasProxyFactoryMethod: function(className) {
		var _this = this._classPaths;
		if(__map_reserved[className] != null) {
			return _this.existsReserved(className);
		} else {
			return _this.h.hasOwnProperty(className);
		}
	}
	,fastEvalFromTarget: function(target,toEval) {
		return hex_ioc_core_CoreFactory._fastEvalMethod(target,toEval,this);
	}
	,__class__: hex_ioc_core_CoreFactory
};
var hex_ioc_di_MappingConfiguration = function() {
	this._mapping = new hex_collection_HashMap();
	hex_collection_Locator.call(this);
};
$hxClasses["hex.ioc.di.MappingConfiguration"] = hex_ioc_di_MappingConfiguration;
hex_ioc_di_MappingConfiguration.__name__ = ["hex","ioc","di","MappingConfiguration"];
hex_ioc_di_MappingConfiguration.__interfaces__ = [hex_config_stateful_IStatefulConfig];
hex_ioc_di_MappingConfiguration.__super__ = hex_collection_Locator;
hex_ioc_di_MappingConfiguration.prototype = $extend(hex_collection_Locator.prototype,{
	configure: function(injector,dispatcher,module) {
		var keys = this.keys();
		var _g = 0;
		while(_g < keys.length) {
			var className = keys[_g];
			++_g;
			var separatorIndex = className.indexOf("#");
			var classKey;
			if(separatorIndex != -1) {
				classKey = Type.resolveClass(HxOverrides.substr(className,separatorIndex + 1,null));
			} else {
				classKey = Type.resolveClass(className);
			}
			var helper = this.locate(className);
			var mapped = helper.value;
			if(js_Boot.__instanceof(mapped,Class)) {
				if(helper.isSingleton) {
					injector.mapToSingleton(classKey,mapped,helper.mapName);
				} else {
					injector.mapToType(classKey,mapped,helper.mapName);
				}
			} else {
				if(js_Boot.__instanceof(mapped,hex_service_stateful_IStatefulService)) {
					var serviceDispatcher = mapped.getDispatcher();
					if(serviceDispatcher != null) {
						serviceDispatcher.add(dispatcher);
					}
				}
				if(helper.injectInto) {
					injector.injectInto(mapped);
				}
				injector.mapToValue(classKey,mapped,helper.mapName);
			}
			this._mapping.put(classKey,mapped);
		}
	}
	,addMapping: function(type,value,mapName,asSingleton,injectInto) {
		if(injectInto == null) {
			injectInto = false;
		}
		if(asSingleton == null) {
			asSingleton = false;
		}
		if(mapName == null) {
			mapName = "";
		}
		return this._registerMapping(type,new hex_ioc_di__$MappingConfiguration_Helper(value,mapName,asSingleton,injectInto),mapName);
	}
	,getMapping: function() {
		return this._mapping;
	}
	,_registerMapping: function(type,helper,mapName) {
		if(mapName == null) {
			mapName = "";
		}
		var className = (mapName != ""?mapName + "#":"") + Type.getClassName(type);
		return this.register(className,helper);
	}
	,_dispatchRegisterEvent: function(key,element) {
		this._dispatcher.dispatch("onRegister",[key,element]);
	}
	,_dispatchUnregisterEvent: function(key) {
		this._dispatcher.dispatch("onUnregister",[key]);
	}
	,__class__: hex_ioc_di_MappingConfiguration
});
var hex_ioc_di__$MappingConfiguration_Helper = function(value,mapName,isSingleton,injectInto) {
	this.value = value;
	this.mapName = mapName;
	this.isSingleton = isSingleton;
	this.injectInto = injectInto;
};
$hxClasses["hex.ioc.di._MappingConfiguration.Helper"] = hex_ioc_di__$MappingConfiguration_Helper;
hex_ioc_di__$MappingConfiguration_Helper.__name__ = ["hex","ioc","di","_MappingConfiguration","Helper"];
hex_ioc_di__$MappingConfiguration_Helper.prototype = {
	toString: function() {
		return "Helper( value:" + Std.string(this.value) + ", mapName:" + this.mapName + ", isSingleton:" + Std.string(this.isSingleton) + ", injectInto:" + Std.string(this.injectInto) + " )";
	}
	,__class__: hex_ioc_di__$MappingConfiguration_Helper
};
var hex_log_ILogger = function() { };
$hxClasses["hex.log.ILogger"] = hex_log_ILogger;
hex_log_ILogger.__name__ = ["hex","log","ILogger"];
hex_log_ILogger.prototype = {
	__class__: hex_log_ILogger
};
var hex_log_DomainLogger = function(domain) {
	if(domain == null) {
		throw new js__$Boot_HaxeError(new hex_error_NullPointerException("Domain should be specified for contructor call",{ fileName : "DomainLogger.hx", lineNumber : 21, className : "hex.log.DomainLogger", methodName : "new"}));
	}
	this._domain = domain;
	this._logger = hex_log_Logger.getInstance();
};
$hxClasses["hex.log.DomainLogger"] = hex_log_DomainLogger;
hex_log_DomainLogger.__name__ = ["hex","log","DomainLogger"];
hex_log_DomainLogger.__interfaces__ = [hex_log_ILogger];
hex_log_DomainLogger.prototype = {
	clear: function() {
		this._logger.clear();
	}
	,debug: function(o,posInfos) {
		this._logger.log(o,hex_log_LogLevel._DEBUG,this._domain,posInfos);
	}
	,info: function(o,posInfos) {
		this._logger.log(o,hex_log_LogLevel._INFO,this._domain,posInfos);
	}
	,warn: function(o,posInfos) {
		this._logger.log(o,hex_log_LogLevel._WARN,this._domain,posInfos);
	}
	,error: function(o,posInfos) {
		this._logger.log(o,hex_log_LogLevel._ERROR,this._domain,posInfos);
	}
	,fatal: function(o,posInfos) {
		this._logger.log(o,hex_log_LogLevel._FATAL,this._domain,posInfos);
	}
	,getDomain: function() {
		return this._domain;
	}
	,__class__: hex_log_DomainLogger
};
var hex_log_ILogListener = function() { };
$hxClasses["hex.log.ILogListener"] = hex_log_ILogListener;
hex_log_ILogListener.__name__ = ["hex","log","ILogListener"];
hex_log_ILogListener.prototype = {
	__class__: hex_log_ILogListener
};
var hex_log_IsLoggable = function() { };
$hxClasses["hex.log.IsLoggable"] = hex_log_IsLoggable;
hex_log_IsLoggable.__name__ = ["hex","log","IsLoggable"];
var hex_log_LoggerMessage = function(message,level,domain,posInfos) {
	this.message = message;
	this.level = level;
	this.domain = domain;
	this.posInfos = posInfos;
};
$hxClasses["hex.log.LoggerMessage"] = hex_log_LoggerMessage;
hex_log_LoggerMessage.__name__ = ["hex","log","LoggerMessage"];
hex_log_LoggerMessage.prototype = {
	__class__: hex_log_LoggerMessage
};
var hex_log_layout_JavaScriptConsoleLayout = function() {
};
$hxClasses["hex.log.layout.JavaScriptConsoleLayout"] = hex_log_layout_JavaScriptConsoleLayout;
hex_log_layout_JavaScriptConsoleLayout.__name__ = ["hex","log","layout","JavaScriptConsoleLayout"];
hex_log_layout_JavaScriptConsoleLayout.__interfaces__ = [hex_log_ILogListener];
hex_log_layout_JavaScriptConsoleLayout.prototype = {
	onLog: function(message) {
		var posInfos = message.posInfos;
		var info = posInfos != null?" at " + posInfos.className + "::" + posInfos.methodName + " line " + posInfos.lineNumber + " in file " + posInfos.fileName:"";
		var m;
		if(message.level.get_value() == hex_log_LogLevel._DEBUG.get_value()) {
			m = ($_=window.console,$bind($_,$_.debug));
		} else if(message.level.get_value() == hex_log_LogLevel._INFO.get_value()) {
			m = ($_=window.console,$bind($_,$_.info));
		} else if(message.level.get_value() == hex_log_LogLevel._WARN.get_value()) {
			m = ($_=window.console,$bind($_,$_.warn));
		} else if(message.level.get_value() == hex_log_LogLevel._FATAL.get_value() || message.level.get_value() == hex_log_LogLevel._ERROR.get_value()) {
			m = ($_=window.console,$bind($_,$_.error));
		} else {
			m = ($_=window.console,$bind($_,$_.log));
		}
		m(message.message,"[" + message.domain.getName() + "]" + info);
	}
	,onClear: function() {
		window.console.clear();
	}
	,__class__: hex_log_layout_JavaScriptConsoleLayout
};
var hex_log_layout_LogProxyLayout = function() {
	this._searchedWord = "";
	this._dispatcher = new hex_log_layout_LogProxyLayoutDispatcher();
	this._messages = [];
	this._filteredLevel = hex_log_LogLevel._ALL;
	this._filteredDomain = hex_log_layout_AllDomain.DOMAIN;
	hex_log_Logger.getInstance().addListener(this);
};
$hxClasses["hex.log.layout.LogProxyLayout"] = hex_log_layout_LogProxyLayout;
hex_log_layout_LogProxyLayout.__name__ = ["hex","log","layout","LogProxyLayout"];
hex_log_layout_LogProxyLayout.__interfaces__ = [hex_log_ILogListener];
hex_log_layout_LogProxyLayout.prototype = {
	onClear: function() {
		this._dispatcher.onClear();
	}
	,onLog: function(message) {
		this._messages.push(message);
		if((this._filteredDomain == hex_log_layout_AllDomain.DOMAIN || this._filteredDomain == message.domain) && (this._filteredLevel == hex_log_LogLevel._ALL || this._filteredLevel == message.level)) {
			this._dispatcher.onLog(message);
		}
	}
	,addListener: function(listener) {
		return this._dispatcher.addListener(listener);
	}
	,removeListener: function(listener) {
		return this._dispatcher.removeListener(listener);
	}
	,filter: function(level,domain) {
		this._filteredLevel = level == null?hex_log_LogLevel._ALL:level;
		this._filteredDomain = domain == null?hex_log_layout_AllDomain.DOMAIN:domain;
		this._dispatcher.onClear();
		this._render();
	}
	,searchFor: function(word,leftSearchSeparator,rightSearchSeparator) {
		if(word == null) {
			word = "";
		}
		this._searchedWord = word;
		this._leftSearchSeparator = leftSearchSeparator;
		this._rightSearchSeparator = rightSearchSeparator;
		this._dispatcher.onClear();
		return this._render();
	}
	,_render: function() {
		var searchLength = 0;
		var _g = 0;
		var _g1 = this._messages;
		while(_g < _g1.length) {
			var message = _g1[_g];
			++_g;
			if((this._filteredDomain == hex_log_layout_AllDomain.DOMAIN || this._filteredDomain == message.domain) && (this._filteredLevel == hex_log_LogLevel._ALL || this._filteredLevel == message.level)) {
				var messageContent = "" + Std.string(message.message);
				if(this._searchedWord.length > 0 && messageContent.indexOf(this._searchedWord) != -1) {
					messageContent = messageContent.split(this._searchedWord).join(this._getLeftSeparator(searchLength,this._leftSearchSeparator) + this._searchedWord + this._rightSearchSeparator);
					++searchLength;
				}
				this._dispatcher.onLog(new hex_log_LoggerMessage(messageContent,message.level,message.domain,message.posInfos));
			}
		}
		return searchLength;
	}
	,_getLeftSeparator: function(index,separator) {
		return separator.split(">").join(" id='searchedWord" + index) + "'>";
	}
	,__class__: hex_log_layout_LogProxyLayout
};
var hex_log_layout_AllDomain = function(domainName) {
	hex_domain_Domain.call(this,domainName);
};
$hxClasses["hex.log.layout.AllDomain"] = hex_log_layout_AllDomain;
hex_log_layout_AllDomain.__name__ = ["hex","log","layout","AllDomain"];
hex_log_layout_AllDomain.__super__ = hex_domain_Domain;
hex_log_layout_AllDomain.prototype = $extend(hex_domain_Domain.prototype,{
	__class__: hex_log_layout_AllDomain
});
var hex_model_ModelDispatcher = function() {
	this._listeners = [];
};
$hxClasses["hex.model.ModelDispatcher"] = hex_model_ModelDispatcher;
hex_model_ModelDispatcher.__name__ = ["hex","model","ModelDispatcher"];
hex_model_ModelDispatcher.prototype = {
	addListener: function(listener) {
		if(this._listeners.indexOf(listener) == -1) {
			this._listeners.push(listener);
			return true;
		} else {
			return false;
		}
	}
	,removeListener: function(listener) {
		var index = this._listeners.indexOf(listener);
		if(index > -1) {
			this._listeners.splice(index,1);
			return true;
		} else {
			return false;
		}
	}
	,__class__: hex_model_ModelDispatcher
};
var hex_log_layout_LogProxyLayoutDispatcher = function() {
	hex_model_ModelDispatcher.call(this);
};
$hxClasses["hex.log.layout.LogProxyLayoutDispatcher"] = hex_log_layout_LogProxyLayoutDispatcher;
hex_log_layout_LogProxyLayoutDispatcher.__name__ = ["hex","log","layout","LogProxyLayoutDispatcher"];
hex_log_layout_LogProxyLayoutDispatcher.__interfaces__ = [hex_log_ILogListener];
hex_log_layout_LogProxyLayoutDispatcher.__super__ = hex_model_ModelDispatcher;
hex_log_layout_LogProxyLayoutDispatcher.prototype = $extend(hex_model_ModelDispatcher.prototype,{
	onClear: function() {
		var _g = 0;
		var _g1 = this._listeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener.onClear();
		}
	}
	,onLog: function(message) {
		var _g = 0;
		var _g1 = this._listeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener.onLog(message);
		}
	}
	,__class__: hex_log_layout_LogProxyLayoutDispatcher
});
var hex_mdvc_config_stateless_StatelessModuleConfig = function() {
};
$hxClasses["hex.mdvc.config.stateless.StatelessModuleConfig"] = hex_mdvc_config_stateless_StatelessModuleConfig;
hex_mdvc_config_stateless_StatelessModuleConfig.__name__ = ["hex","mdvc","config","stateless","StatelessModuleConfig"];
hex_mdvc_config_stateless_StatelessModuleConfig.__interfaces__ = [hex_config_stateless_IStatelessConfig];
hex_mdvc_config_stateless_StatelessModuleConfig.prototype = {
	configure: function() {
		throw new js__$Boot_HaxeError(new hex_error_VirtualMethodException(Std.string(this) + ".configure must be overridden",{ fileName : "StatelessModuleConfig.hx", lineNumber : 24, className : "hex.mdvc.config.stateless.StatelessModuleConfig", methodName : "configure"}));
	}
	,get: function(type,name) {
		if(name == null) {
			name = "";
		}
		return this.injector.getInstance(type);
	}
	,mapController: function(controllerInterface,controllerClass,name,asSingleton) {
		if(asSingleton == null) {
			asSingleton = false;
		}
		if(name == null) {
			name = "";
		}
		if(!asSingleton) {
			this.injector.mapToSingleton(controllerInterface,controllerClass,name);
		} else {
			this.injector.mapToType(controllerInterface,controllerClass,name);
		}
	}
	,mapModel: function(modelInterface,modelClass,name,asSingleton) {
		if(asSingleton == null) {
			asSingleton = false;
		}
		if(name == null) {
			name = "";
		}
		if(!asSingleton) {
			this.injector.mapToSingleton(modelInterface,modelClass,name);
		} else {
			this.injector.mapToType(modelInterface,modelClass,name);
		}
	}
	,mapDriver: function(driverInterface,driverClass,name,asSingleton) {
		if(asSingleton == null) {
			asSingleton = false;
		}
		if(name == null) {
			name = "";
		}
		if(!asSingleton) {
			this.injector.mapToSingleton(driverInterface,driverClass,name);
		} else {
			this.injector.mapToType(driverInterface,driverClass,name);
		}
	}
	,__class__: hex_mdvc_config_stateless_StatelessModuleConfig
};
var hex_mdvc_driver_IForwarder = function() { };
$hxClasses["hex.mdvc.driver.IForwarder"] = hex_mdvc_driver_IForwarder;
hex_mdvc_driver_IForwarder.__name__ = ["hex","mdvc","driver","IForwarder"];
var hex_mdvc_driver_IInputOwner = function() { };
$hxClasses["hex.mdvc.driver.IInputOwner"] = hex_mdvc_driver_IInputOwner;
hex_mdvc_driver_IInputOwner.__name__ = ["hex","mdvc","driver","IInputOwner"];
var hex_module_IModule = function() { };
$hxClasses["hex.module.IModule"] = hex_module_IModule;
hex_module_IModule.__name__ = ["hex","module","IModule"];
hex_module_IModule.__interfaces__ = [hex_di_IContextOwner];
hex_module_IModule.prototype = {
	__class__: hex_module_IModule
	,__properties__: {get_isReleased:"get_isReleased",get_isInitialized:"get_isInitialized"}
};
var hex_mdvc_module_Module = function() {
	this._injector = new hex_di_Injector();
	this._injector.mapToValue(hex_di_IBasicInjector,this._injector);
	this._injector.mapToValue(hex_di_IDependencyInjector,this._injector);
	this._domainDispatcher = hex_domain_ApplicationDomainDispatcher.getInstance().getDomainDispatcher(this.getDomain());
	this._annotationProvider = hex_metadata_AnnotationProvider.getAnnotationProvider(this.getDomain());
	this._annotationProvider.registerInjector(this._injector);
	this._internalDispatcher = new hex_event_Dispatcher();
	this._injector.mapToValue(hex_event_IDispatcher,this._internalDispatcher);
	this._injector.mapToValue(hex_module_IModule,this);
	this.logger = new hex_log_DomainLogger(this.getDomain());
	this._injector.mapToValue(hex_log_ILogger,this.logger);
};
$hxClasses["hex.mdvc.module.Module"] = hex_mdvc_module_Module;
hex_mdvc_module_Module.__name__ = ["hex","mdvc","module","Module"];
hex_mdvc_module_Module.__interfaces__ = [hex_module_IModule];
hex_mdvc_module_Module.prototype = {
	initialize: function() {
		if(!this.get_isInitialized()) {
			this._onInitialisation();
			this.isInitialized = true;
			this._fireInitialisationEvent();
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("initialize can't be called more than once. Check your code.",{ fileName : "Module.hx", lineNumber : 67, className : "hex.mdvc.module.Module", methodName : "initialize"}));
		}
	}
	,get_isInitialized: function() {
		return this.isInitialized;
	}
	,get_isReleased: function() {
		return this.isReleased;
	}
	,getDomain: function() {
		return hex_domain_DomainExpert.getInstance().getDomainFor(this);
	}
	,dispatchPublicMessage: function(messageType,data) {
		if(this._domainDispatcher != null) {
			this._domainDispatcher.dispatch(messageType,data);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("Domain dispatcher is null. Try to use 'Module.registerInternalDomain' before calling super constructor to fix the problem",{ fileName : "Module.hx", lineNumber : 114, className : "hex.mdvc.module.Module", methodName : "dispatchPublicMessage"}));
		}
	}
	,addHandler: function(messageType,scope,callback) {
		if(this._domainDispatcher != null) {
			this._domainDispatcher.addHandler(messageType,scope,callback);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("Domain dispatcher is null. Try to use 'Module.registerInternalDomain' before calling super constructor to fix the problem",{ fileName : "Module.hx", lineNumber : 129, className : "hex.mdvc.module.Module", methodName : "addHandler"}));
		}
	}
	,removeHandler: function(messageType,scope,callback) {
		if(this._domainDispatcher != null) {
			this._domainDispatcher.removeHandler(messageType,scope,callback);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("Domain dispatcher is null. Try to use 'Module.registerInternalDomain' before calling super constructor to fix the problem",{ fileName : "Module.hx", lineNumber : 144, className : "hex.mdvc.module.Module", methodName : "removeHandler"}));
		}
	}
	,_dispatchPrivateMessage: function(messageType,data) {
		this._internalDispatcher.dispatch(messageType,data);
	}
	,release: function() {
		if(!this.get_isReleased()) {
			this.isReleased = true;
			this._fireReleaseEvent();
			if(this._domainDispatcher != null) {
				this._domainDispatcher.removeAllListeners();
			}
			this._internalDispatcher.removeAllListeners();
			hex_domain_DomainExpert.getInstance().releaseDomain(this);
			this._annotationProvider.unregisterInjector(this._injector);
			this._injector.destroyInstance(this);
			this._injector.teardown();
			this.logger = null;
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException(Std.string(this) + ".release can't be called more than once. Check your code.",{ fileName : "Module.hx", lineNumber : 181, className : "hex.mdvc.module.Module", methodName : "release"}));
		}
	}
	,getInjector: function() {
		return this._injector;
	}
	,getLogger: function() {
		return this.logger;
	}
	,_fireInitialisationEvent: function() {
		if(this.get_isInitialized()) {
			this.dispatchPublicMessage("onModuleInitialisation",[this]);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException(Std.string(this) + ".fireModuleInitialisationNote can't be called with previous initialize call.",{ fileName : "Module.hx", lineNumber : 207, className : "hex.mdvc.module.Module", methodName : "_fireInitialisationEvent"}));
		}
	}
	,_fireReleaseEvent: function() {
		if(this.get_isReleased()) {
			this.dispatchPublicMessage("onModuleRelease",[this]);
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException(Std.string(this) + ".fireModuleReleaseNote can't be called with previous release call.",{ fileName : "Module.hx", lineNumber : 223, className : "hex.mdvc.module.Module", methodName : "_fireReleaseEvent"}));
		}
	}
	,_onInitialisation: function() {
	}
	,_onRelease: function() {
	}
	,_getDependencyInjector: function() {
		return this._injector;
	}
	,_addStatelessConfigClasses: function(configurations) {
		var _g = 0;
		while(_g < configurations.length) {
			var configurationClass = configurations[_g];
			++_g;
			var config = this._injector.instantiateUnmapped(configurationClass);
			config.configure();
		}
	}
	,_addStatefulConfigs: function(configurations) {
		var _g = 0;
		while(_g < configurations.length) {
			var configuration = configurations[_g];
			++_g;
			configuration.configure(this._injector,this._internalDispatcher,this);
		}
	}
	,_get: function(type) {
		return this._injector.getInstance(type);
	}
	,__class__: hex_mdvc_module_Module
	,__properties__: {get_isReleased:"get_isReleased",get_isInitialized:"get_isInitialized"}
};
var hex_metadata_IAnnotationProvider = function() { };
$hxClasses["hex.metadata.IAnnotationProvider"] = hex_metadata_IAnnotationProvider;
hex_metadata_IAnnotationProvider.__name__ = ["hex","metadata","IAnnotationProvider"];
hex_metadata_IAnnotationProvider.prototype = {
	__class__: hex_metadata_IAnnotationProvider
};
var hex_metadata_AnnotationProvider = function(domain,parent) {
	this._domain = domain;
	this._parent = parent;
	this._cache = new hex_collection_HashMap();
	this._metadata = new haxe_ds_StringMap();
	this._instances = new haxe_ds_StringMap();
};
$hxClasses["hex.metadata.AnnotationProvider"] = hex_metadata_AnnotationProvider;
hex_metadata_AnnotationProvider.__name__ = ["hex","metadata","AnnotationProvider"];
hex_metadata_AnnotationProvider.__interfaces__ = [hex_metadata_IAnnotationProvider,hex_di_IInjectorListener];
hex_metadata_AnnotationProvider.release = function() {
	hex_metadata_AnnotationProvider._initialized = false;
	hex_metadata_AnnotationProvider._Domains = new haxe_ds_ObjectMap();
	hex_metadata_AnnotationProvider._Parents = new haxe_ds_ObjectMap();
};
hex_metadata_AnnotationProvider.getAnnotationProvider = function(domain,parentDomain) {
	if(!hex_metadata_AnnotationProvider._initialized) {
		hex_metadata_AnnotationProvider._initialized = true;
		var provider = new hex_metadata_AnnotationProvider(hex_domain_TopLevelDomain.DOMAIN,null);
		hex_metadata_AnnotationProvider._Domains.set(hex_domain_TopLevelDomain.DOMAIN,provider);
	}
	if(domain == null) {
		domain = hex_domain_TopLevelDomain.DOMAIN;
	}
	if(parentDomain == null && domain != hex_domain_TopLevelDomain.DOMAIN) {
		if(hex_metadata_AnnotationProvider._Parents.h.__keys__[domain.__id__] == null) {
			parentDomain = hex_domain_TopLevelDomain.DOMAIN;
		} else {
			parentDomain = hex_metadata_AnnotationProvider._Parents.h[domain.__id__];
		}
	}
	if(hex_metadata_AnnotationProvider._Domains.h.__keys__[domain.__id__] == null) {
		hex_metadata_AnnotationProvider._Domains.set(domain,new hex_metadata_AnnotationProvider(domain,hex_metadata_AnnotationProvider._Domains.h[parentDomain.__id__]));
	}
	return hex_metadata_AnnotationProvider._Domains.h[domain.__id__];
};
hex_metadata_AnnotationProvider.registerToParentDomain = function(domain,parentDomain) {
	if(hex_metadata_AnnotationProvider._Parents.h.__keys__[domain.__id__] == null) {
		hex_metadata_AnnotationProvider._Parents.set(domain,parentDomain);
	} else {
		throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("'" + domain.getName() + "' cannot be registered to '" + parentDomain.getName() + "' parent domain, it's already registered to '" + hex_metadata_AnnotationProvider._Parents.h[domain.__id__].getName() + "' parent domain",{ fileName : "AnnotationProvider.hx", lineNumber : 101, className : "hex.metadata.AnnotationProvider", methodName : "registerToParentDomain"}));
	}
};
hex_metadata_AnnotationProvider._unregisterInstances = function(metaDataName,provider) {
	provider._instances.remove(metaDataName);
	if(provider._parent != null) {
		hex_metadata_AnnotationProvider._unregisterInstances(metaDataName,provider._parent);
	}
};
hex_metadata_AnnotationProvider.prototype = {
	dispose: function() {
		this._cache = new hex_collection_HashMap();
		this._metadata = new haxe_ds_StringMap();
		this._instances = new haxe_ds_StringMap();
		hex_metadata_AnnotationProvider._Domains.remove(this._domain);
		hex_metadata_AnnotationProvider._Parents.remove(this._domain);
	}
	,registerMetaData: function(metaDataName,providerMethod) {
		var _this = this._metadata;
		if(!(__map_reserved[metaDataName] != null?_this.existsReserved(metaDataName):_this.h.hasOwnProperty(metaDataName))) {
			var _this1 = this._metadata;
			if(__map_reserved[metaDataName] != null) {
				_this1.setReserved(metaDataName,providerMethod);
			} else {
				_this1.h[metaDataName] = providerMethod;
			}
			var _this2 = this._instances;
			var voCollection = __map_reserved[metaDataName] != null?_this2.getReserved(metaDataName):_this2.h[metaDataName];
			if(voCollection != null) {
				var _g = 0;
				while(_g < voCollection.length) {
					var vo = voCollection[_g];
					++_g;
					if(vo.metaDataName == metaDataName) {
						var o = vo.owner;
						var field = vo.propertyName;
						var value = providerMethod(vo.metaDataValue);
						var tmp;
						var tmp1;
						if(o.__properties__) {
							tmp = o.__properties__["set_" + field];
							tmp1 = tmp;
						} else {
							tmp1 = false;
						}
						if(tmp1) {
							o[tmp](value);
						} else {
							o[field] = value;
						}
					}
				}
			}
			if(this._parent != null) {
				hex_metadata_AnnotationProvider._unregisterInstances(metaDataName,this._parent);
			}
		} else {
			throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("registerMetaData failed. '" + metaDataName + "' is already registered in '" + hex_log_Stringifier.stringify(this) + "'",{ fileName : "AnnotationProvider.hx", lineNumber : 134, className : "hex.metadata.AnnotationProvider", methodName : "registerMetaData"}));
		}
	}
	,clear: function() {
		this._cache = new hex_collection_HashMap();
		this._metadata = new haxe_ds_StringMap();
		this._instances = new haxe_ds_StringMap();
	}
	,_do: function(instance,property) {
		var metaDataName = property.metaDataName;
		var _this = this._metadata;
		if(__map_reserved[metaDataName] != null?_this.existsReserved(metaDataName):_this.h.hasOwnProperty(metaDataName)) {
			var _this1 = this._metadata;
			var providerMethod = __map_reserved[metaDataName] != null?_this1.getReserved(metaDataName):_this1.h[metaDataName];
			var field = property.propertyName;
			var value = providerMethod(property.metaDataValue);
			var tmp;
			var tmp1;
			if(instance.__properties__) {
				tmp = instance.__properties__["set_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				instance[tmp](value);
			} else {
				instance[field] = value;
			}
		} else {
			var instanceVO = new hex_metadata__$AnnotationProvider_InstanceVO(instance,property.propertyName,property.metaDataName,property.metaDataValue);
			var _this2 = this._instances;
			if(__map_reserved[metaDataName] != null?_this2.existsReserved(metaDataName):_this2.h.hasOwnProperty(metaDataName)) {
				var _this3 = this._instances;
				(__map_reserved[metaDataName] != null?_this3.getReserved(metaDataName):_this3.h[metaDataName]).push(instanceVO);
			} else {
				var _this4 = this._instances;
				var value1 = [instanceVO];
				if(__map_reserved[metaDataName] != null) {
					_this4.setReserved(metaDataName,value1);
				} else {
					_this4.h[metaDataName] = value1;
				}
			}
			if(this._parent != null) {
				this._parent._do(instance,property);
			}
		}
	}
	,parse: function(instance) {
		var classMetaDataVO = this._parse(instance);
		if(classMetaDataVO != null) {
			var properties = classMetaDataVO.properties;
			var _g = 0;
			while(_g < properties.length) {
				var property = properties[_g];
				++_g;
				this._do(instance,property);
			}
		}
	}
	,_parse: function(object) {
		var classMetaDataVO = null;
		var classReference = object == null?null:js_Boot.getClass(object);
		if(classReference != null) {
			if(this._cache.containsKey(classReference)) {
				classMetaDataVO = this._cache.get(classReference);
			} else {
				classMetaDataVO = new hex_metadata__$AnnotationProvider_ClassMetaDataVO();
				var properties = classMetaDataVO.properties;
				var metadata = haxe_rtti_Meta.getFields(classReference);
				var fields = Reflect.fields(metadata);
				var _g = 0;
				while(_g < fields.length) {
					var propertyName = fields[_g];
					++_g;
					var o = Reflect.field(metadata,propertyName);
					var f = Reflect.fields(o);
					if(f != null) {
						var metaDataName = f[0];
						if(metaDataName != null) {
							var field = Reflect.field(o,metaDataName);
							if(field != null) {
								var metaDataValue = field[0];
								properties.push(new hex_metadata__$AnnotationProvider_PropertyMetaDataVO(propertyName,metaDataName,metaDataValue));
							}
						}
					}
				}
				this._cache.put(classReference,classMetaDataVO);
			}
		}
		return classMetaDataVO;
	}
	,onPreConstruct: function(target,instance,instanceType) {
		if(js_Boot.__instanceof(instance,hex_core_IAnnotationParsable)) {
			this.parse(instance);
		}
	}
	,onPostConstruct: function(target,instance,instanceType) {
	}
	,registerInjector: function(injector) {
		injector.addListener(this);
	}
	,unregisterInjector: function(injector) {
		injector.removeListener(this);
	}
	,__class__: hex_metadata_AnnotationProvider
};
var hex_metadata__$AnnotationProvider_ClassMetaDataVO = function() {
	this.properties = [];
};
$hxClasses["hex.metadata._AnnotationProvider.ClassMetaDataVO"] = hex_metadata__$AnnotationProvider_ClassMetaDataVO;
hex_metadata__$AnnotationProvider_ClassMetaDataVO.__name__ = ["hex","metadata","_AnnotationProvider","ClassMetaDataVO"];
hex_metadata__$AnnotationProvider_ClassMetaDataVO.prototype = {
	__class__: hex_metadata__$AnnotationProvider_ClassMetaDataVO
};
var hex_metadata__$AnnotationProvider_PropertyMetaDataVO = function(propertyName,metaDataName,metaDataValue) {
	this.propertyName = propertyName;
	this.metaDataName = metaDataName;
	this.metaDataValue = metaDataValue;
};
$hxClasses["hex.metadata._AnnotationProvider.PropertyMetaDataVO"] = hex_metadata__$AnnotationProvider_PropertyMetaDataVO;
hex_metadata__$AnnotationProvider_PropertyMetaDataVO.__name__ = ["hex","metadata","_AnnotationProvider","PropertyMetaDataVO"];
hex_metadata__$AnnotationProvider_PropertyMetaDataVO.prototype = {
	__class__: hex_metadata__$AnnotationProvider_PropertyMetaDataVO
};
var hex_metadata__$AnnotationProvider_InstanceVO = function(owner,propertyName,metaDataName,metaDataValue) {
	this.owner = owner;
	this.propertyName = propertyName;
	this.metaDataName = metaDataName;
	this.metaDataValue = metaDataValue;
};
$hxClasses["hex.metadata._AnnotationProvider.InstanceVO"] = hex_metadata__$AnnotationProvider_InstanceVO;
hex_metadata__$AnnotationProvider_InstanceVO.__name__ = ["hex","metadata","_AnnotationProvider","InstanceVO"];
hex_metadata__$AnnotationProvider_InstanceVO.prototype = {
	__class__: hex_metadata__$AnnotationProvider_InstanceVO
};
var hex_module_ModuleMessage = function() {
};
$hxClasses["hex.module.ModuleMessage"] = hex_module_ModuleMessage;
hex_module_ModuleMessage.__name__ = ["hex","module","ModuleMessage"];
hex_module_ModuleMessage.prototype = {
	__class__: hex_module_ModuleMessage
};
var hex_module_dependency_IRuntimeDependencies = function() { };
$hxClasses["hex.module.dependency.IRuntimeDependencies"] = hex_module_dependency_IRuntimeDependencies;
hex_module_dependency_IRuntimeDependencies.__name__ = ["hex","module","dependency","IRuntimeDependencies"];
hex_module_dependency_IRuntimeDependencies.prototype = {
	__class__: hex_module_dependency_IRuntimeDependencies
};
var hex_module_dependency_RuntimeDependencies = function() {
};
$hxClasses["hex.module.dependency.RuntimeDependencies"] = hex_module_dependency_RuntimeDependencies;
hex_module_dependency_RuntimeDependencies.__name__ = ["hex","module","dependency","RuntimeDependencies"];
hex_module_dependency_RuntimeDependencies.__interfaces__ = [hex_module_dependency_IRuntimeDependencies];
hex_module_dependency_RuntimeDependencies.prototype = {
	addMappedDependencies: function(serviceDependencies) {
		if(this._mappedDependencies == null) {
			this._mappedDependencies = [];
		}
		this._mappedDependencies = this._mappedDependencies.concat(serviceDependencies);
	}
	,getMappedDependencies: function() {
		return this._mappedDependencies;
	}
	,hasMappedDependencies: function() {
		return this._mappedDependencies != null;
	}
	,__class__: hex_module_dependency_RuntimeDependencies
};
var hex_runtime_ApplicationAssembler = function() {
	this._mContextFactories = new haxe_ds_ObjectMap();
	this._mApplicationContext = new haxe_ds_StringMap();
};
$hxClasses["hex.runtime.ApplicationAssembler"] = hex_runtime_ApplicationAssembler;
hex_runtime_ApplicationAssembler.__name__ = ["hex","runtime","ApplicationAssembler"];
hex_runtime_ApplicationAssembler.__interfaces__ = [hex_core_IApplicationAssembler];
hex_runtime_ApplicationAssembler.prototype = {
	getFactory: function(factoryClass,applicationContextName,applicationContextClass) {
		var contextFactory = null;
		var applicationContext = this.getApplicationContext(applicationContextName,applicationContextClass);
		if(this._mContextFactories.h.__keys__[applicationContext.__id__] != null) {
			contextFactory = this._mContextFactories.h[applicationContext.__id__];
		} else {
			contextFactory = Type.createInstance(factoryClass,[]);
			contextFactory.init(applicationContext);
			this._mContextFactories.set(applicationContext,contextFactory);
		}
		return contextFactory;
	}
	,buildEverything: function() {
		var itFactory = this._mContextFactories.iterator();
		var _g = [];
		while(itFactory.hasNext()) _g.push(itFactory.next());
		_g.map(function(factory) {
			factory.finalize();
		});
	}
	,release: function() {
		var itFactory = this._mContextFactories.iterator();
		while(itFactory.hasNext()) itFactory.next().dispose();
		var _this = this._mApplicationContext;
		var itContext = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(itContext.hasNext()) itContext.next().dispose();
		this._mApplicationContext = new haxe_ds_StringMap();
		this._mContextFactories = new haxe_ds_ObjectMap();
	}
	,getApplicationContext: function(applicationContextName,applicationContextClass) {
		var applicationContext = null;
		var _this = this._mApplicationContext;
		if(__map_reserved[applicationContextName] != null?_this.existsReserved(applicationContextName):_this.h.hasOwnProperty(applicationContextName)) {
			var _this1 = this._mApplicationContext;
			applicationContext = __map_reserved[applicationContextName] != null?_this1.getReserved(applicationContextName):_this1.h[applicationContextName];
		} else {
			applicationContext = Type.createInstance(applicationContextClass,[applicationContextName]);
			var _this2 = this._mApplicationContext;
			if(__map_reserved[applicationContextName] != null) {
				_this2.setReserved(applicationContextName,applicationContext);
			} else {
				_this2.h[applicationContextName] = applicationContext;
			}
		}
		return applicationContext;
	}
	,__class__: hex_runtime_ApplicationAssembler
};
var hex_service_IService = function() { };
$hxClasses["hex.service.IService"] = hex_service_IService;
hex_service_IService.__name__ = ["hex","service","IService"];
hex_service_IService.__interfaces__ = [hex_event_IObservable];
hex_service_IService.prototype = {
	__class__: hex_service_IService
};
var hex_service_ServiceConfiguration = function(timeout) {
	if(timeout == null) {
		timeout = 5000;
	}
	this.serviceTimeout = timeout;
};
$hxClasses["hex.service.ServiceConfiguration"] = hex_service_ServiceConfiguration;
hex_service_ServiceConfiguration.__name__ = ["hex","service","ServiceConfiguration"];
hex_service_ServiceConfiguration.prototype = {
	__class__: hex_service_ServiceConfiguration
};
var hex_service_stateful_IStatefulService = function() { };
$hxClasses["hex.service.stateful.IStatefulService"] = hex_service_stateful_IStatefulService;
hex_service_stateful_IStatefulService.__name__ = ["hex","service","stateful","IStatefulService"];
hex_service_stateful_IStatefulService.__interfaces__ = [hex_service_IService];
hex_service_stateful_IStatefulService.prototype = {
	__class__: hex_service_stateful_IStatefulService
};
var hex_state_State = function(stateName) {
	this._exitHandlers = [];
	this._enterHandlers = [];
	this._exitCommandMappings = [];
	this._enterCommandMappings = [];
	this._transitions = new haxe_ds_StringMap();
	this._stateName = stateName;
};
$hxClasses["hex.state.State"] = hex_state_State;
hex_state_State.__name__ = ["hex","state","State"];
hex_state_State.prototype = {
	getName: function() {
		return this._stateName;
	}
	,clearEnterHandler: function() {
		this._enterHandlers = [];
	}
	,clearExitHandler: function() {
		this._exitHandlers = [];
	}
	,getEnterHandlerList: function() {
		return this._enterHandlers;
	}
	,getExitHandlerList: function() {
		return this._exitHandlers;
	}
	,addEnterHandler: function(callback) {
		var handlers = this._enterHandlers;
		if(handlers.indexOf(callback) == -1) {
			handlers.push(callback);
			return true;
		} else {
			return false;
		}
	}
	,addExitHandler: function(callback) {
		var handlers = this._exitHandlers;
		if(handlers.indexOf(callback) == -1) {
			handlers.push(callback);
			return true;
		} else {
			return false;
		}
	}
	,removeEnterHandler: function(callback) {
		var handlers = this._enterHandlers;
		var id = handlers.indexOf(callback);
		if(id != -1) {
			handlers.splice(id,1);
			return true;
		} else {
			return false;
		}
	}
	,removeExitHandler: function(callback) {
		var handlers = this._exitHandlers;
		var id = handlers.indexOf(callback);
		if(id != -1) {
			handlers.splice(id,1);
			return true;
		} else {
			return false;
		}
	}
	,addEnterCommandMapping: function(mapping) {
		if(this._enterCommandMappings.indexOf(mapping) == -1) {
			this._enterCommandMappings.push(mapping);
		}
	}
	,addExitCommandMapping: function(mapping) {
		if(this._exitCommandMappings.indexOf(mapping) == -1) {
			this._exitCommandMappings.push(mapping);
		}
	}
	,removeEnterCommandMapping: function(mapping) {
		var i = this._enterCommandMappings.indexOf(mapping);
		if(i != -1) {
			this._enterCommandMappings.splice(i,1);
		}
	}
	,removeExitCommandMapping: function(mapping) {
		var i = this._exitCommandMappings.indexOf(mapping);
		if(i != -1) {
			this._exitCommandMappings.splice(i,1);
		}
	}
	,addEnterCommand: function(commandClass,contextOwner) {
		var mapping = new hex_control_command_CommandMapping(commandClass);
		mapping.setContextOwner(contextOwner);
		this._enterCommandMappings.push(mapping);
		return mapping;
	}
	,addExitCommand: function(commandClass,contextOwner) {
		var mapping = new hex_control_command_CommandMapping(commandClass);
		mapping.setContextOwner(contextOwner);
		this._exitCommandMappings.push(mapping);
		return mapping;
	}
	,addTransition: function(messageType,targetState) {
		var value = new hex_state_Transition(this,messageType,targetState);
		var _this = this._transitions;
		var key = messageType;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,value);
		} else {
			_this.h[key] = value;
		}
	}
	,getMachine: function() {
		return this._stateMachine;
	}
	,getEvents: function() {
		var transitions = this.getTransitions();
		var result = [];
		var _g = 0;
		while(_g < transitions.length) {
			var transition = transitions[_g];
			++_g;
			result[result.length] = transition.getMessageType();
		}
		return result;
	}
	,getAllTargets: function() {
		var transitions = this.getTransitions();
		var result = [];
		var _g = 0;
		while(_g < transitions.length) {
			var transition = transitions[_g];
			++_g;
			result.push(transition.getTarget());
		}
		return result;
	}
	,getTransitions: function() {
		var _this = this._transitions;
		var i = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		var a = [];
		while(i.hasNext()) a.push(i.next());
		return a;
	}
	,hasTransition: function(messageType) {
		var _this = this._transitions;
		var key = messageType;
		if(__map_reserved[key] != null) {
			return _this.existsReserved(key);
		} else {
			return _this.h.hasOwnProperty(key);
		}
	}
	,targetState: function(messageType) {
		var _this = this._transitions;
		var key = messageType;
		return (__map_reserved[key] != null?_this.getReserved(key):_this.h[key]).getTarget();
	}
	,getEnterCommandMapping: function() {
		return this._enterCommandMappings;
	}
	,getExitCommandMapping: function() {
		return this._exitCommandMappings;
	}
	,toString: function() {
		return hex_log_Stringifier.stringify(this) + "::" + this._stateName;
	}
	,_addHandler: function(handlers,callback) {
		if(handlers.indexOf(callback) == -1) {
			handlers.push(callback);
			return true;
		} else {
			return false;
		}
	}
	,_removeHandler: function(handlers,callback) {
		var id = handlers.indexOf(callback);
		if(id != -1) {
			handlers.splice(id,1);
			return true;
		} else {
			return false;
		}
	}
	,__class__: hex_state_State
};
var hex_state_StateMachine = function(start) {
	this._start = start;
};
$hxClasses["hex.state.StateMachine"] = hex_state_StateMachine;
hex_state_StateMachine.__name__ = ["hex","state","StateMachine"];
hex_state_StateMachine.prototype = {
	addResetMessageType: function(messageTypes) {
		var _g = 0;
		while(_g < messageTypes.length) {
			var messageType = messageTypes[_g];
			++_g;
			if(messageType != null) {
				this._addResetMessageType_byAddingTransition(messageType);
			}
		}
	}
	,_addResetMessageType_byAddingTransition: function(messageType) {
		var states = this.getStates();
		var _g = 0;
		while(_g < states.length) {
			var state = states[_g];
			++_g;
			if(state.hasTransition(messageType)) {
				state.addTransition(messageType,this._start);
			}
		}
	}
	,getStates: function() {
		var result = [];
		this._collectStates(result,this._start);
		return result;
	}
	,_collectStates: function(result,state) {
		if(this._start == null || result.indexOf(state) != -1) {
			return;
		} else {
			result.push(state);
			var targets = state.getAllTargets();
			var _g = 0;
			while(_g < targets.length) {
				var target = targets[_g];
				++_g;
				this._collectStates(result,target);
			}
		}
	}
	,getStart: function() {
		return this._start;
	}
	,isResetMessageType: function(messageType) {
		var states = this.getStates();
		var _g = 0;
		while(_g < states.length) {
			var state = states[_g];
			++_g;
			if(state.hasTransition(messageType) && state.targetState(messageType) == this._start) {
				return true;
			}
		}
		return false;
	}
	,__class__: hex_state_StateMachine
};
var hex_state_Transition = function(source,messageType,target) {
	this._source = source;
	this._target = target;
	this._messageType = messageType;
};
$hxClasses["hex.state.Transition"] = hex_state_Transition;
hex_state_Transition.__name__ = ["hex","state","Transition"];
hex_state_Transition.prototype = {
	getSource: function() {
		return this._source;
	}
	,getTarget: function() {
		return this._target;
	}
	,getMessageType: function() {
		return this._messageType;
	}
	,__class__: hex_state_Transition
};
var hex_state_control_StateChangeMacro = function() {
	hex_control_macro_Macro.call(this);
};
$hxClasses["hex.state.control.StateChangeMacro"] = hex_state_control_StateChangeMacro;
hex_state_control_StateChangeMacro.__name__ = ["hex","state","control","StateChangeMacro"];
hex_state_control_StateChangeMacro.__super__ = hex_control_macro_Macro;
hex_state_control_StateChangeMacro.prototype = $extend(hex_control_macro_Macro.prototype,{
	_prepare: function() {
	}
	,__class__: hex_state_control_StateChangeMacro
});
var hex_state_control_StateController = function(injector,stateMachine) {
	this._injector = injector;
	this._stateMachine = stateMachine;
	this._currentState = this._stateMachine.getStart();
	this._isInTransition = false;
};
$hxClasses["hex.state.control.StateController"] = hex_state_control_StateController;
hex_state_control_StateController.__name__ = ["hex","state","control","StateController"];
hex_state_control_StateController.prototype = {
	transitionTo: function(target,request) {
		if(this._isInTransition) {
			throw new js__$Boot_HaxeError(new hex_error_IllegalStateException("new state change cannot be triggered during previous state change",{ fileName : "StateController.hx", lineNumber : 40, className : "hex.state.control.StateController", methodName : "transitionTo"}));
		} else {
			this._isInTransition = true;
			if(request != null) {
				this._request = request;
			}
			this._targetedState = target;
			this._dispatchStateChange(this._currentState,this._currentState.getExitHandlerList());
			this._triggerCommand(this._currentState.getExitCommandMapping(),$bind(this,this._onExitCurrentState));
		}
	}
	,_triggerCommand: function(mappings,callback) {
		if(mappings.length > 0) {
			var sm = this._injector.instantiateUnmapped(hex_state_control_StateChangeMacro);
			var mappingToRemove = [];
			var _g = 0;
			while(_g < mappings.length) {
				var mapping = mappings[_g];
				++_g;
				if(mapping.get_isFiredOnce()) {
					mappingToRemove.push(mapping);
				}
				sm.addMapping(mapping);
			}
			var _g1 = 0;
			while(_g1 < mappingToRemove.length) {
				var mapping1 = mappingToRemove[_g1];
				++_g1;
				mappings.splice(mappings.indexOf(mapping1),1);
			}
			sm.addCompleteHandler(callback);
			sm.addFailHandler(callback);
			sm.addCancelHandler(callback);
			sm.preExecute(this._request);
			sm.execute(this._request);
		} else {
			callback(null);
		}
	}
	,handleMessage: function(messageType,request) {
		if(this._currentState.hasTransition(messageType)) {
			this.transitionTo(this._currentState.targetState(messageType),request);
		} else if(this._stateMachine.isResetMessageType(messageType)) {
			this.transitionTo(this._stateMachine.getStart(),request);
		}
	}
	,getCurrentState: function() {
		return this._currentState;
	}
	,getTargetedState: function() {
		return this._targetedState;
	}
	,_onExitCurrentState: function(cmd) {
		this._triggerCommand(this._targetedState.getEnterCommandMapping(),$bind(this,this._onEnterTargetState));
	}
	,_onEnterTargetState: function(cmd) {
		if(this._request != null) {
			this._request = null;
		}
		this._currentState = this._targetedState;
		this._isInTransition = false;
		this._dispatchStateChange(this._currentState,this._currentState.getEnterHandlerList());
	}
	,_dispatchStateChange: function(state,callbacks) {
		var _g = 0;
		while(_g < callbacks.length) {
			var callback = callbacks[_g];
			++_g;
			callback(state);
		}
	}
	,__class__: hex_state_control_StateController
};
var hex_util_ArrayUtil = function() {
	throw new js__$Boot_HaxeError(new hex_error_PrivateConstructorException("This class can't be instantiated.",{ fileName : "ArrayUtil.hx", lineNumber : 17, className : "hex.util.ArrayUtil", methodName : "new"}));
};
$hxClasses["hex.util.ArrayUtil"] = hex_util_ArrayUtil;
hex_util_ArrayUtil.__name__ = ["hex","util","ArrayUtil"];
hex_util_ArrayUtil.arrowDecompose = function(f) {
	var l = null;
	var r = null;
	var _g = f.expr;
	if(_g[1] == 2) {
		if(_g[2][1] == 22) {
			var e2 = _g[4];
			var e1 = _g[3];
			l = e1;
			r = e2;
		} else {
			r = f;
		}
	} else {
		r = f;
	}
	return { left : l, right : r};
};
hex_util_ArrayUtil._getLeftName = function(e) {
	return hex_util_ArrayUtil._getLeftNames(e)[0];
};
hex_util_ArrayUtil._getLeftNames = function(L,min) {
	if(min == null) {
		min = 1;
	}
	var names;
	if(L != null) {
		var _g = L.expr;
		switch(_g[1]) {
		case 0:
			if(_g[2][1] == 3) {
				var s = _g[2][2];
				names = [s];
			} else {
				names = [];
			}
			break;
		case 6:
			var els = _g[2];
			names = els.map(function(e) {
				var _g1 = e.expr;
				if(_g1[1] == 0) {
					if(_g1[2][1] == 3) {
						var s1 = _g1[2][2];
						return s1;
					} else {
						return "_";
					}
				} else {
					return "_";
				}
			});
			break;
		default:
			names = [];
		}
	} else {
		names = [];
	}
	var t = "";
	while(names.length < min) names.push(t += "_");
	return names;
};
hex_util_ArrayUtil._getUniqueLocalVarNames = function(count,locals) {
	var r = [];
	var tmap = new haxe_ds_StringMap();
	while(r.length < count) {
		var t = "__tmp_" + Std.random(16777215);
		if(!locals.exists(t) && !(__map_reserved[t] != null?tmap.existsReserved(t):tmap.h.hasOwnProperty(t))) {
			r.push(t);
			if(__map_reserved[t] != null) {
				tmap.setReserved(t,1);
			} else {
				tmap.h[t] = 1;
			}
		}
	}
	return r;
};
hex_util_ArrayUtil.prototype = {
	__class__: hex_util_ArrayUtil
};
var hex_util_ClassUtil = function() {
	throw new js__$Boot_HaxeError(new hex_error_PrivateConstructorException("'" + hex_log_Stringifier.stringify(this) + "' class can't be instantiated.",{ fileName : "ClassUtil.hx", lineNumber : 15, className : "hex.util.ClassUtil", methodName : "new"}));
};
$hxClasses["hex.util.ClassUtil"] = hex_util_ClassUtil;
hex_util_ClassUtil.__name__ = ["hex","util","ClassUtil"];
hex_util_ClassUtil.getInheritanceChain = function(clazz) {
	var inherintanceChain = [clazz];
	while(true) {
		clazz = Type.getSuperClass(clazz);
		if(!(clazz != null)) {
			break;
		}
		inherintanceChain.push(clazz);
	}
	return inherintanceChain;
};
hex_util_ClassUtil.getInheritanceChainFrom = function(instance) {
	var type = instance == null?null:js_Boot.getClass(instance);
	if(type != null) {
		return hex_util_ClassUtil.getInheritanceChain(type);
	} else {
		return [];
	}
};
hex_util_ClassUtil.classExtendsOrImplements = function(classOrClassName,superClass) {
	var actualClass = null;
	if(js_Boot.__instanceof(classOrClassName,Class)) {
		actualClass = js_Boot.__cast(classOrClassName , Class);
	} else if(typeof(classOrClassName) == "string") {
		try {
			actualClass = Type.resolveClass(js_Boot.__cast(classOrClassName , String));
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			throw new js__$Boot_HaxeError("The class name " + Std.string(classOrClassName) + " is not valid because of " + Std.string(e) + "\n" + Std.string(e.getStackTrace()));
		}
	}
	if(actualClass == null) {
		throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("The parameter classOrClassName must be a Class or fully qualified class name.",{ fileName : "ClassUtil.hx", lineNumber : 56, className : "hex.util.ClassUtil", methodName : "classExtendsOrImplements"}));
	}
	var classInstance = Type.createEmptyInstance(actualClass);
	return js_Boot.__instanceof(classInstance,superClass);
};
hex_util_ClassUtil.getStaticVariableReference = function(qualifiedClassName) {
	var a = qualifiedClassName.split(".");
	var type = a[a.length - 1];
	a.splice(a.length - 1,1);
	var classReference = hex_util_ClassUtil.getClassReference(a.join("."));
	var staticRef = Reflect.field(classReference,type);
	if(staticRef == null) {
		throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("ClassUtil.getStaticReference fails with '" + qualifiedClassName + "'",{ fileName : "ClassUtil.hx", lineNumber : 73, className : "hex.util.ClassUtil", methodName : "getStaticVariableReference"}));
	}
	return staticRef;
};
hex_util_ClassUtil.getClassNameFromFullyQualifiedName = function(qualifiedClassName) {
	var a = qualifiedClassName.split(".");
	return a[a.length - 1];
};
hex_util_ClassUtil.getClassNameFromStaticReference = function(qualifiedClassName) {
	var a = qualifiedClassName.split(".");
	a.splice(a.length - 1,1);
	return a.join(".");
};
hex_util_ClassUtil.getStaticVariableNameFromStaticReference = function(qualifiedClassName) {
	var a = qualifiedClassName.split(".");
	return a[a.length - 1];
};
hex_util_ClassUtil.getClassReference = function(qualifiedClassName) {
	var classReference = Type.resolveClass(qualifiedClassName);
	if(classReference == null) {
		throw new js__$Boot_HaxeError(new hex_error_IllegalArgumentException("ClassUtil.getClassReference fails with class named '" + qualifiedClassName + "'",{ fileName : "ClassUtil.hx", lineNumber : 105, className : "hex.util.ClassUtil", methodName : "getClassReference"}));
	}
	return classReference;
};
hex_util_ClassUtil.getClassName = function(target) {
	var type = Type.getClassName(target == null?null:js_Boot.getClass(target));
	if(type != null) {
		return type;
	} else {
		return "Dynamic";
	}
};
hex_util_ClassUtil.prototype = {
	__class__: hex_util_ClassUtil
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Template = function() {
	this.completedCount = new haxe_Template("::if (completedCount>0)::Clear completed::end::");
	this.activeItems = new haxe_Template("<strong>::activeItems::</strong> item::if (activeItems>1)::s::end:: left");
	this.items = new haxe_Template("::foreach items::" + "<li data-id=\"::id::\" class=\"::if completed::completed::end::\">" + "<div class=\"view\">" + "<input class=\"toggle\" type=\"checkbox\" ::if completed::checked::end::>" + "<label>::title::</label>" + "<button class=\"destroy\"></button>" + "</div>" + "</li>" + "::end::");
};
$hxClasses["js.Template"] = js_Template;
js_Template.__name__ = ["js","Template"];
js_Template.prototype = {
	__class__: js_Template
};
var todomvc_view_ITodoView = function() { };
$hxClasses["todomvc.view.ITodoView"] = todomvc_view_ITodoView;
todomvc_view_ITodoView.__name__ = ["todomvc","view","ITodoView"];
todomvc_view_ITodoView.prototype = {
	__class__: todomvc_view_ITodoView
};
var js_TodoViewJS = function(todoList,todoItemCounter,clearCompleted,main,footer,toggleAll,newTodo) {
	this._qs = ($_=window.document,$bind($_,$_.querySelector));
	this._template = new js_Template();
	this._todoList = todoList;
	this._todoItemCounter = todoItemCounter;
	this._clearCompleted = clearCompleted;
	this._main = main;
	this._footer = footer;
	this._toggleAll = toggleAll;
	this._newTodo = newTodo;
	this.changeFooterVisibility(false);
};
$hxClasses["js.TodoViewJS"] = js_TodoViewJS;
js_TodoViewJS.__name__ = ["js","TodoViewJS"];
js_TodoViewJS.__interfaces__ = [todomvc_view_ITodoView];
js_TodoViewJS.prototype = {
	setController: function(controller) {
		var _gthis = this;
		this.logger.debug(["js.TodoViewJS::setController",controller],{ fileName : "TodoViewJS.hx", lineNumber : 53, className : "js.TodoViewJS", methodName : "setController"});
		this._controller = controller;
		$(function() {
			_gthis._initJQuery();
		});
	}
	,_initJQuery: function() {
		this.logger.debug(["js.TodoViewJS::_initJQuery"],{ fileName : "TodoViewJS.hx", lineNumber : 59, className : "js.TodoViewJS", methodName : "_initJQuery"});
		$(window).on("hashchange",null,$bind(this,this._onHashChange));
		$(this._newTodo).on("change",null,$bind(this,this._onNewTodo));
		$(this._clearCompleted).on("click",null,$bind(this,this._onClearCompleted));
		$(this._toggleAll).on("click",null,$bind(this,this._onToggleAll));
		$(this._todoList).delegate("li label","dblclick",$bind(this,this._onEditItem));
		$(this._todoList).delegate(".destroy","click",$bind(this,this._onRemoveItem));
		$(this._todoList).delegate(".toggle","click",$bind(this,this._onToggleComplete));
		$(this._todoList).delegate("li .edit","keypress",$bind(this,this._onItemKeyPress));
		$(this._todoList).delegate("li .edit","keyup",$bind(this,this._onCancelItemEdition));
		$(window).on("hashchange",null,$bind(this,this._onHashChange));
	}
	,_onHashChange: function(e) {
		this.logger.debug(["js.TodoViewJS::_onHashChange",e],{ fileName : "TodoViewJS.hx", lineNumber : 76, className : "js.TodoViewJS", methodName : "_onHashChange"});
		var location = e.target.location.hash;
		var route = location.split("/")[1];
		var filter;
		switch(route) {
		case "active":
			filter = common_Filter.ACTIVE;
			break;
		case "completed":
			filter = common_Filter.COMPLETED;
			break;
		default:
			filter = common_Filter.ALL;
		}
		this._controller.setFilter(filter);
	}
	,_onNewTodo: function(e) {
		this.logger.debug(["js.TodoViewJS::_onNewTodo",e],{ fileName : "TodoViewJS.hx", lineNumber : 90, className : "js.TodoViewJS", methodName : "_onNewTodo"});
		this._controller.addItem(e.target.value);
	}
	,_onClearCompleted: function(e) {
		this.logger.debug(["js.TodoViewJS::_onClearCompleted",e],{ fileName : "TodoViewJS.hx", lineNumber : 95, className : "js.TodoViewJS", methodName : "_onClearCompleted"});
		this._controller.removeCompletedItems();
	}
	,_onToggleAll: function(e) {
		this.logger.debug(["js.TodoViewJS::_onToggleAll",e],{ fileName : "TodoViewJS.hx", lineNumber : 100, className : "js.TodoViewJS", methodName : "_onToggleAll"});
		this._controller.toggleAll(e.target.checked);
	}
	,_onEditItem: function(e) {
		this.logger.debug(["js.TodoViewJS::_onEditItem",e],{ fileName : "TodoViewJS.hx", lineNumber : 105, className : "js.TodoViewJS", methodName : "_onEditItem"});
		this._controller.editItem(this._itemID(e.target));
	}
	,_onRemoveItem: function(e) {
		this.logger.debug(["js.TodoViewJS::_onRemoveItem",e],{ fileName : "TodoViewJS.hx", lineNumber : 110, className : "js.TodoViewJS", methodName : "_onRemoveItem"});
		this._controller.removeItem(this._itemID(e.target));
	}
	,_onToggleComplete: function(e) {
		this.logger.debug(["js.TodoViewJS::_onToggleComplete",e],{ fileName : "TodoViewJS.hx", lineNumber : 115, className : "js.TodoViewJS", methodName : "_onToggleComplete"});
		this._controller.toggleComplete(this._itemID(e.target),e.target.checked);
	}
	,_onItemKeyPress: function(e) {
		this.logger.debug(["js.TodoViewJS::_onItemKeyPress",e],{ fileName : "TodoViewJS.hx", lineNumber : 120, className : "js.TodoViewJS", methodName : "_onItemKeyPress"});
		if(e.keyCode == 13) {
			var li = e.target;
			li.blur();
			this._controller.editItemSave($(li).parent().attr("data-id"),"" + li.value);
		}
	}
	,_onCancelItemEdition: function(e) {
		this.logger.debug(["js.TodoViewJS::_onCancelItemEdition",e],{ fileName : "TodoViewJS.hx", lineNumber : 130, className : "js.TodoViewJS", methodName : "_onCancelItemEdition"});
		if(e.keyCode == 27) {
			var li = e.target;
			li.blur();
			this._controller.editItemCancel($(li).parent().attr("data-id"));
		}
	}
	,selectAllFilterButton: function() {
		this._setFilter("");
	}
	,selectActiveFilterButton: function() {
		this._setFilter("active");
	}
	,selectCompletedFilterButton: function() {
		this._setFilter("completed");
	}
	,showEntries: function(entries) {
		this._todoList.innerHTML = this._template.items.execute({ items : entries});
	}
	,removeItem: function(id) {
		var elem = this._qs("[data-id=\"" + id + "\"]");
		if(elem != null) {
			this._todoList.removeChild(elem);
		}
	}
	,updateItemCount: function(activeItems) {
		this._todoItemCounter.innerHTML = this._template.activeItems.execute({ activeItems : activeItems});
	}
	,clearCompletedButton: function(completedCount,visible) {
		this._clearCompleted.innerHTML = this._template.completedCount.execute({ completedCount : completedCount});
		this._clearCompleted.style.display = visible?"block":"none";
	}
	,changeFooterVisibility: function(isVisible) {
		this._main.style.display = this._footer.style.display = isVisible?"block":"none";
	}
	,toggleAll: function(isChecked) {
		this._toggleAll.checked = isChecked;
	}
	,clearNewTodo: function() {
		this._newTodo.value = "";
	}
	,setItemCompleted: function(id,isCompleted) {
		var item = this._qs("[data-id=\"" + id + "\"]");
		if(item != null) {
			item.className = isCompleted?"completed":"";
			var input = item.querySelector("input");
			input.checked = isCompleted;
		}
	}
	,editItem: function(id,title) {
		var item = this._qs("[data-id=\"" + id + "\"]");
		if(item != null) {
			item.className += " editing";
			var input = window.document.createElement("input");
			input.className = "edit";
			item.appendChild(input);
			input.focus();
			input.value = title;
		}
	}
	,editItemDone: function(id,title) {
		var item = this._qs("[data-id=\"" + id + "\"]");
		if(item != null) {
			var input = item.querySelector("input.edit");
			item.removeChild(input);
			item.className = item.className.split("editing").join("");
			var list = item.querySelectorAll("label");
			var _g = 0;
			while(_g < list.length) {
				var label = list[_g];
				++_g;
				label.textContent = title;
			}
		}
	}
	,_setFilter: function(currentFilter) {
		this._qs(".filters .selected").className = "";
		this._qs(".filters [href=\"#/" + currentFilter + "\"]").className = "selected";
	}
	,_itemID: function(element) {
		return $(element).parent().parent().attr("data-id");
	}
	,__class__: js_TodoViewJS
};
var todomvc_control_ITodoController = function() { };
$hxClasses["todomvc.control.ITodoController"] = todomvc_control_ITodoController;
todomvc_control_ITodoController.__name__ = ["todomvc","control","ITodoController"];
todomvc_control_ITodoController.prototype = {
	__class__: todomvc_control_ITodoController
};
var todomvc_control_TodoController = function() { };
$hxClasses["todomvc.control.TodoController"] = todomvc_control_TodoController;
todomvc_control_TodoController.__name__ = ["todomvc","control","TodoController"];
todomvc_control_TodoController.__interfaces__ = [todomvc_control_ITodoController];
todomvc_control_TodoController.prototype = {
	setFilter: function(filter) {
		this.filterModel.setFilter(filter);
	}
	,editItem: function(id) {
		this.model.startItemEdition(id);
	}
	,editItemCancel: function(id) {
		this.model.cancelItemEdition(id);
	}
	,removeItem: function(id) {
		this.model.removeItem(id);
	}
	,removeCompletedItems: function() {
		this.model.removeCompletedItems();
	}
	,toggleComplete: function(id,isCompleted) {
		this.model.setItemCompleted(id,isCompleted);
	}
	,toggleAll: function(isCompleted) {
		this.model.toggleAllItems(isCompleted);
	}
	,showAll: function() {
		this.logger.debug(["todomvc.control.TodoController::showAll"],{ fileName : "TodoController.hx", lineNumber : 34, className : "todomvc.control.TodoController", methodName : "showAll"});
		return new hex_control_ResultResponder(this.model.getAllItems());
	}
	,showActive: function() {
		this.logger.debug(["todomvc.control.TodoController::showActive"],{ fileName : "TodoController.hx", lineNumber : 39, className : "todomvc.control.TodoController", methodName : "showActive"});
		return new hex_control_ResultResponder(this.model.getActiveItems());
	}
	,showCompleted: function() {
		this.logger.debug(["todomvc.control.TodoController::showCompleted"],{ fileName : "TodoController.hx", lineNumber : 44, className : "todomvc.control.TodoController", methodName : "showCompleted"});
		return new hex_control_ResultResponder(this.model.getCompletedItems());
	}
	,addItem: function(title) {
		this.logger.debug(["todomvc.control.TodoController::addItem",title],{ fileName : "TodoController.hx", lineNumber : 49, className : "todomvc.control.TodoController", methodName : "addItem"});
		var newTodoTitle = StringTools.trim(title);
		if(newTodoTitle.length > 0) {
			this.model.addItem(new todomvc_control__$TodoController_TodoItemVO(newTodoTitle,false));
		}
	}
	,editItemSave: function(id,title) {
		this.logger.debug(["todomvc.control.TodoController::editItemSave",id,title],{ fileName : "TodoController.hx", lineNumber : 58, className : "todomvc.control.TodoController", methodName : "editItemSave"});
		var updatedTodoTitle = StringTools.trim(title);
		if(updatedTodoTitle.length > 0) {
			this.model.renameItem(id,title);
		} else {
			this.removeItem(id);
		}
	}
	,__class__: todomvc_control_TodoController
};
var todomvc_control__$TodoController_TodoItemVO = function(title,completed) {
	if(completed == null) {
		completed = false;
	}
	this.id = hex_data_GUID.uuid();
	this.title = title;
	this.completed = completed;
};
$hxClasses["todomvc.control._TodoController.TodoItemVO"] = todomvc_control__$TodoController_TodoItemVO;
todomvc_control__$TodoController_TodoItemVO.__name__ = ["todomvc","control","_TodoController","TodoItemVO"];
todomvc_control__$TodoController_TodoItemVO.prototype = {
	__class__: todomvc_control__$TodoController_TodoItemVO
};
var todomvc_driver_ITodoDriver = function() { };
$hxClasses["todomvc.driver.ITodoDriver"] = todomvc_driver_ITodoDriver;
todomvc_driver_ITodoDriver.__name__ = ["todomvc","driver","ITodoDriver"];
todomvc_driver_ITodoDriver.__interfaces__ = [common_ITodoConnection,common_IFilterConnection];
todomvc_driver_ITodoDriver.prototype = {
	__class__: todomvc_driver_ITodoDriver
};
var todomvc_driver_TodoDriver = function() { };
$hxClasses["todomvc.driver.TodoDriver"] = todomvc_driver_TodoDriver;
todomvc_driver_TodoDriver.__name__ = ["todomvc","driver","TodoDriver"];
todomvc_driver_TodoDriver.__interfaces__ = [todomvc_driver_ITodoDriver];
todomvc_driver_TodoDriver.prototype = {
	init: function() {
		this.view.setController(this.controller);
	}
	,changeFilter: function(currentFilter) {
		switch(currentFilter[1]) {
		case 0:
			this.view.selectAllFilterButton();
			var f = ($_=this.view,$bind($_,$_.showEntries));
			var tmp = function(a1) {
				f(a1);
			};
			this.controller.showAll().onComplete(tmp);
			break;
		case 1:
			this.view.selectActiveFilterButton();
			var f1 = ($_=this.view,$bind($_,$_.showEntries));
			var tmp1 = function(a11) {
				f1(a11);
			};
			this.controller.showActive().onComplete(tmp1);
			break;
		case 2:
			this.view.selectCompletedFilterButton();
			var f2 = ($_=this.view,$bind($_,$_.showEntries));
			var tmp2 = function(a12) {
				f2(a12);
			};
			this.controller.showCompleted().onComplete(tmp2);
			break;
		}
	}
	,onShowEntries: function(entries) {
		this.view.showEntries(entries);
	}
	,onRemoveItem: function(id) {
		this.view.removeItem(id);
	}
	,onUpdateItemCount: function(activeItems) {
		this.view.updateItemCount(activeItems);
	}
	,onClearCompletedButton: function(completedCount,visible) {
		this.view.clearCompletedButton(completedCount,visible);
	}
	,onChangeFooterVisibility: function(isVisible) {
		this.view.changeFooterVisibility(isVisible);
	}
	,onToggleAll: function(isChecked) {
		this.view.toggleAll(isChecked);
	}
	,onClearNewTodo: function() {
		this.view.clearNewTodo();
	}
	,onSetItemCompleted: function(id,isCompleted) {
		this.view.setItemCompleted(id,isCompleted);
	}
	,onEditItem: function(id,title) {
		this.view.editItem(id,title);
	}
	,onEditItemDone: function(id,title) {
		this.view.editItemDone(id,title);
	}
	,__class__: todomvc_driver_TodoDriver
};
var todomvc_model_IFilterModel = function() { };
$hxClasses["todomvc.model.IFilterModel"] = todomvc_model_IFilterModel;
todomvc_model_IFilterModel.__name__ = ["todomvc","model","IFilterModel"];
todomvc_model_IFilterModel.prototype = {
	__class__: todomvc_model_IFilterModel
};
var todomvc_model_FilterModel = function() {
	this._currentFilter = common_Filter.ALL;
	this.output = new common__$_$Trigger_$Class_$For_$_$IFilterConnection();
};
$hxClasses["todomvc.model.FilterModel"] = todomvc_model_FilterModel;
todomvc_model_FilterModel.__name__ = ["todomvc","model","FilterModel"];
todomvc_model_FilterModel.__interfaces__ = [todomvc_model_IFilterModel];
todomvc_model_FilterModel.prototype = {
	setFilter: function(filter) {
		this.logger.debug(["todomvc.model.FilterModel::setFilter",filter],{ fileName : "FilterModel.hx", lineNumber : 19, className : "todomvc.model.FilterModel", methodName : "setFilter"});
		this._currentFilter = filter;
		this.output.changeFilter(this._currentFilter);
	}
	,__class__: todomvc_model_FilterModel
};
var todomvc_model_ITodoModel = function() { };
$hxClasses["todomvc.model.ITodoModel"] = todomvc_model_ITodoModel;
todomvc_model_ITodoModel.__name__ = ["todomvc","model","ITodoModel"];
todomvc_model_ITodoModel.prototype = {
	__class__: todomvc_model_ITodoModel
};
var todomvc_model_TodoModel = function() {
	this._items = [];
	this.output = new common__$_$Trigger_$Class_$For_$_$ITodoConnection();
};
$hxClasses["todomvc.model.TodoModel"] = todomvc_model_TodoModel;
todomvc_model_TodoModel.__name__ = ["todomvc","model","TodoModel"];
todomvc_model_TodoModel.__interfaces__ = [todomvc_model_ITodoModel];
todomvc_model_TodoModel.prototype = {
	getAllItems: function() {
		this.logger.debug(["todomvc.model.TodoModel::getAllItems"],{ fileName : "TodoModel.hx", lineNumber : 21, className : "todomvc.model.TodoModel", methodName : "getAllItems"});
		return this._items.slice();
	}
	,getActiveItems: function() {
		this.logger.debug(["todomvc.model.TodoModel::getActiveItems"],{ fileName : "TodoModel.hx", lineNumber : 26, className : "todomvc.model.TodoModel", methodName : "getActiveItems"});
		var __tmp_16681948 = [];
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.completed) {
				__tmp_16681948.push(e);
			}
		}
		return __tmp_16681948;
	}
	,getCompletedItems: function() {
		this.logger.debug(["todomvc.model.TodoModel::getCompletedItems"],{ fileName : "TodoModel.hx", lineNumber : 31, className : "todomvc.model.TodoModel", methodName : "getCompletedItems"});
		var __tmp_16581218 = [];
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.completed) {
				__tmp_16581218.push(e);
			}
		}
		return __tmp_16581218;
	}
	,addItem: function(item) {
		this.logger.debug(["todomvc.model.TodoModel::addItem",item],{ fileName : "TodoModel.hx", lineNumber : 36, className : "todomvc.model.TodoModel", methodName : "addItem"});
		this.output.onClearNewTodo();
		this._items.push(item);
		this.output.onShowEntries(this._items.slice());
		this._updateCount();
	}
	,removeItem: function(id) {
		var _gthis = this;
		this.logger.debug(["todomvc.model.TodoModel::removeItem",id],{ fileName : "TodoModel.hx", lineNumber : 44, className : "todomvc.model.TodoModel", methodName : "removeItem"});
		var _g = 0;
		var __tmp_14847073 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.id == id) {
				__tmp_14847073.push(e);
			}
		}
		while(_g < __tmp_14847073.length) {
			var e1 = __tmp_14847073[_g];
			++_g;
			HxOverrides.remove(_gthis._items,e1);
			_gthis.output.onRemoveItem(e1.id);
			_gthis._updateCount();
		}
	}
	,startItemEdition: function(id) {
		this.logger.debug(["todomvc.model.TodoModel::startItemEdition",id],{ fileName : "TodoModel.hx", lineNumber : 50, className : "todomvc.model.TodoModel", methodName : "startItemEdition"});
		var __tmp_6132356 = null;
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.id == id) {
				__tmp_6132356 = e;
				break;
			}
		}
		var item = __tmp_6132356;
		this.output.onEditItem(item.id,item.title);
	}
	,removeCompletedItems: function() {
		var _gthis = this;
		this.logger.debug(["todomvc.model.TodoModel::removeCompletedItems"],{ fileName : "TodoModel.hx", lineNumber : 56, className : "todomvc.model.TodoModel", methodName : "removeCompletedItems"});
		var _g = 0;
		var __tmp_14232831 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.completed == true) {
				__tmp_14232831.push(e);
			}
		}
		while(_g < __tmp_14232831.length) {
			var e1 = __tmp_14232831[_g];
			++_g;
			_gthis.output.onRemoveItem(e1.id);
			HxOverrides.remove(_gthis._items,e1);
			_gthis._updateCount();
		}
	}
	,setItemCompleted: function(id,isCompleted) {
		var _gthis = this;
		this.logger.debug(["todomvc.model.TodoModel::setItemCompleted",id,isCompleted],{ fileName : "TodoModel.hx", lineNumber : 62, className : "todomvc.model.TodoModel", methodName : "setItemCompleted"});
		var _g = 0;
		var __tmp_11348182 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.id == id) {
				__tmp_11348182.push(e);
			}
		}
		while(_g < __tmp_11348182.length) {
			var e1 = __tmp_11348182[_g];
			++_g;
			e1.completed = isCompleted;
			_gthis.output.onSetItemCompleted(id,isCompleted);
			_gthis._updateCount();
		}
	}
	,renameItem: function(id,title) {
		var _gthis = this;
		this.logger.debug(["todomvc.model.TodoModel::renameItem",id,title],{ fileName : "TodoModel.hx", lineNumber : 68, className : "todomvc.model.TodoModel", methodName : "renameItem"});
		var _g = 0;
		var __tmp_15382655 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.id == id) {
				__tmp_15382655.push(e);
			}
		}
		while(_g < __tmp_15382655.length) {
			var e1 = __tmp_15382655[_g];
			++_g;
			e1.title = title;
			_gthis.output.onEditItemDone(id,title);
			_gthis._updateCount();
		}
	}
	,cancelItemEdition: function(id) {
		var _gthis = this;
		this.logger.debug(["todomvc.model.TodoModel::cancelItemEdition",id],{ fileName : "TodoModel.hx", lineNumber : 74, className : "todomvc.model.TodoModel", methodName : "cancelItemEdition"});
		var _g = 0;
		var __tmp_13845372 = [];
		var _g1 = 0;
		var _g11 = this._items;
		while(_g1 < _g11.length) {
			var e = _g11[_g1];
			++_g1;
			if(e.id == id) {
				__tmp_13845372.push(e);
			}
		}
		while(_g < __tmp_13845372.length) {
			var e1 = __tmp_13845372[_g];
			++_g;
			_gthis.output.onEditItemDone(id,e1.title);
			_gthis._updateCount();
		}
	}
	,toggleAllItems: function(isCompleted) {
		var _gthis = this;
		this.logger.debug(["todomvc.model.TodoModel::toggleAllItems",isCompleted],{ fileName : "TodoModel.hx", lineNumber : 80, className : "todomvc.model.TodoModel", methodName : "toggleAllItems"});
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.completed = isCompleted;
			_gthis.output.onSetItemCompleted(e.id,e.completed);
		}
		this._updateCount();
	}
	,_updateCount: function() {
		this.logger.debug(["todomvc.model.TodoModel::_updateCount"],{ fileName : "TodoModel.hx", lineNumber : 87, className : "todomvc.model.TodoModel", methodName : "_updateCount"});
		var itemCount = this._items.length;
		var __tmp_8051924 = 0;
		var _g = 0;
		var _g1 = this._items;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.completed == true) {
				++__tmp_8051924;
			}
		}
		var completedItemCount = __tmp_8051924;
		this.output.onUpdateItemCount(itemCount - completedItemCount);
		this.output.onClearCompletedButton(completedItemCount,completedItemCount > 0);
		this.output.onToggleAll(completedItemCount == itemCount);
		this.output.onChangeFooterVisibility(itemCount > 0);
	}
	,__class__: todomvc_model_TodoModel
};
var todomvc_module_TodoModule = function(serviceConfig,viewConfig) {
	hex_mdvc_module_Module.call(this);
	this.getLogger().info("TodoModule initialized",{ fileName : "TodoModule.hx", lineNumber : 28, className : "todomvc.module.TodoModule", methodName : "new"});
	this._addStatefulConfigs([serviceConfig,viewConfig]);
	this._addStatelessConfigClasses([todomvc_module__$TodoModule_TodoModuleConfig]);
};
$hxClasses["todomvc.module.TodoModule"] = todomvc_module_TodoModule;
todomvc_module_TodoModule.__name__ = ["todomvc","module","TodoModule"];
todomvc_module_TodoModule.__super__ = hex_mdvc_module_Module;
todomvc_module_TodoModule.prototype = $extend(hex_mdvc_module_Module.prototype,{
	_onInitialisation: function() {
		hex_mdvc_module_Module.prototype._onInitialisation.call(this);
	}
	,__class__: todomvc_module_TodoModule
});
var todomvc_module__$TodoModule_TodoModuleConfig = function() {
	hex_mdvc_config_stateless_StatelessModuleConfig.call(this);
};
$hxClasses["todomvc.module._TodoModule.TodoModuleConfig"] = todomvc_module__$TodoModule_TodoModuleConfig;
todomvc_module__$TodoModule_TodoModuleConfig.__name__ = ["todomvc","module","_TodoModule","TodoModuleConfig"];
todomvc_module__$TodoModule_TodoModuleConfig.__super__ = hex_mdvc_config_stateless_StatelessModuleConfig;
todomvc_module__$TodoModule_TodoModuleConfig.prototype = $extend(hex_mdvc_config_stateless_StatelessModuleConfig.prototype,{
	configure: function() {
		this.mapController(todomvc_control_ITodoController,todomvc_control_TodoController);
		this.mapModel(todomvc_model_ITodoModel,todomvc_model_TodoModel);
		this.mapModel(todomvc_model_IFilterModel,todomvc_model_FilterModel);
		this.mapDriver(todomvc_driver_ITodoDriver,todomvc_driver_TodoDriver);
		var driver = this.get(todomvc_driver_ITodoDriver);
		this.get(todomvc_model_ITodoModel).output.connect(driver);
		this.get(todomvc_model_IFilterModel).output.connect(driver);
	}
	,__class__: todomvc_module__$TodoModule_TodoModuleConfig
});
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
haxe_Template.splitter = new EReg("(::[A-Za-z0-9_ ()&|!+=/><*.\"-]+::|\\$\\$([A-Za-z0-9_-]+)\\()","");
haxe_Template.expr_splitter = new EReg("(\\(|\\)|[ \r\n\t]*\"[^\"]*\"[ \r\n\t]*|[!+=/><*.&|-]+)","");
haxe_Template.expr_trim = new EReg("^[ ]*([^ ]+)[ ]*$","");
haxe_Template.expr_int = new EReg("^[0-9]+$","");
haxe_Template.expr_float = new EReg("^([+-]?)(?=\\d|,\\d)\\d*(,\\d*)?([Ee]([+-]?\\d+))?$","");
haxe_Template.globals = { };
haxe_ds_ObjectMap.count = 0;
hex_collection_LocatorMessage.REGISTER = "onRegister";
hex_collection_LocatorMessage.UNREGISTER = "onUnregister";
hex_control_async_AsyncCommand.WAS_NEVER_USED = "WAS_NEVER_USED";
hex_control_async_AsyncCommand.IS_RUNNING = "IS_RUNNING";
hex_control_async_AsyncCommand.IS_COMPLETED = "IS_COMPLETED";
hex_control_async_AsyncCommand.IS_FAILED = "IS_FAILED";
hex_control_async_AsyncCommand.IS_CANCELLED = "IS_CANCELLED";
hex_control_async_AsyncCommand._POOL = new haxe_ds_ObjectMap();
hex_control_async_AsyncCommand.__INJECTION_DATA = { c : { a : []}, p : [], m : [], pc : [], pd : []};
hex_control_async_AsyncCommandMessage.COMPLETE = "onAsyncCommandComplete";
hex_control_async_AsyncCommandMessage.FAIL = "onAsyncCommandFail";
hex_control_async_AsyncCommandMessage.CANCEL = "onAsyncCommandCancel";
hex_control_macro_Macro.__INJECTION_DATA = { c : { a : []}, p : [{ p : "macroExecutor", t : "hex.control.macro.IMacroExecutor", n : "", o : false}], m : [], pc : [], pd : []};
hex_control_macro_MacroExecutor.__INJECTION_DATA = { c : { a : []}, p : [{ p : "injector", t : "hex.di.IBasicInjector", n : "", o : false}], m : [], pc : [], pd : []};
hex_core_HashCodeFactory._nKEY = 0;
hex_core_HashCodeFactory._M = new haxe_ds_ObjectMap();
hex_di_Injector.__meta__ = { fields : { trigger : { Trigger : null}}};
hex_domain_Domain._domainNames = new haxe_ds_StringMap();
hex_domain_DomainUtil._domain = new haxe_ds_StringMap();
hex_domain_TopLevelDomain.DOMAIN = hex_domain_DomainUtil.getDomain("TopLevelDomain",hex_domain_TopLevelDomain);
hex_domain_ApplicationDomainDispatcher._Instance = new hex_domain_ApplicationDomainDispatcher();
hex_domain_DefaultDomain.DOMAIN = hex_domain_DomainUtil.getDomain("DefaultDomain",hex_domain_DefaultDomain);
hex_domain_DomainExpert._Instance = new hex_domain_DomainExpert();
hex_domain_DomainExpert._DomainIndex = 0;
hex_domain_NoDomain.DOMAIN = hex_domain_DomainUtil.getDomain("NoDomain",hex_domain_NoDomain);
hex_event_MacroAdapterStrategy.__INJECTION_DATA = { c : { a : []}, p : [{ p : "macroExecutor", t : "hex.control.macro.IMacroExecutor", n : "", o : false}], m : [], pc : [], pd : []};
hex_ioc_assembler_ApplicationAssemblerMessage.CONTEXT_PARSED = "onContextParsed";
hex_ioc_assembler_ApplicationAssemblerMessage.ASSEMBLING_START = "onAssemblingStart";
hex_ioc_assembler_ApplicationAssemblerMessage.STATE_TRANSITIONS_BUILT = "onStateTransitionsBuilt";
hex_ioc_assembler_ApplicationAssemblerMessage.OBJECTS_BUILT = "onObjectsBuilt";
hex_ioc_assembler_ApplicationAssemblerMessage.METHODS_CALLED = "onMethodsCalled";
hex_ioc_assembler_ApplicationAssemblerMessage.DOMAIN_LISTENERS_ASSIGNED = "onDomainListenersAssigned";
hex_ioc_assembler_ApplicationAssemblerMessage.MODULES_INITIALIZED = "onModulesInitialized";
hex_ioc_assembler_ApplicationAssemblerMessage.ASSEMBLING_END = "onAssemblingEnd";
hex_ioc_assembler_ApplicationAssemblerMessage.IDLE_MODE = "onIdleMode";
js_Boot.__toStr = ({ }).toString;
hex_log_LogLevel._ALL = new hex_log_LogLevel(0);
hex_log_LogLevel._DEBUG = new hex_log_LogLevel(10000);
hex_log_LogLevel._INFO = new hex_log_LogLevel(20000);
hex_log_LogLevel._WARN = new hex_log_LogLevel(30000);
hex_log_LogLevel._ERROR = new hex_log_LogLevel(40000);
hex_log_LogLevel._FATAL = new hex_log_LogLevel(50000);
hex_log_LogLevel._OFF = new hex_log_LogLevel(60000);
hex_ioc_core_CoreFactory._fastEvalMethod = hex_util_FastEval.fromTarget;
hex_log_LoggerMessage.LOG = "onLog";
hex_log_LoggerMessage.CLEAR = "onClear";
hex_log_layout_AllDomain.DOMAIN = hex_domain_DomainUtil.getDomain("AllDomain",hex_log_layout_AllDomain);
hex_mdvc_config_stateless_StatelessModuleConfig.__INJECTION_DATA = { c : { a : []}, p : [{ p : "injector", t : "hex.di.IDependencyInjector", n : "", o : false}], m : [], pc : [], pd : []};
hex_mdvc_module_Module.__INJECTION_DATA = { c : { a : []}, p : [{ p : "logger", t : "hex.log.ILogger", n : "", o : false}], m : [], pc : [], pd : []};
hex_metadata_AnnotationProvider._initialized = false;
hex_metadata_AnnotationProvider._Domains = new haxe_ds_ObjectMap();
hex_metadata_AnnotationProvider._Parents = new haxe_ds_ObjectMap();
hex_module_ModuleMessage.INITIALIZED = "onModuleInitialisation";
hex_module_ModuleMessage.RELEASED = "onModuleRelease";
hex_state_control_StateChangeMacro.__INJECTION_DATA = { c : { a : []}, p : [{ p : "macroExecutor", t : "hex.control.macro.IMacroExecutor", n : "", o : false}], m : [], pc : [], pd : []};
js_TodoViewJS.__INJECTION_DATA = { c : { a : []}, p : [{ p : "logger", t : "hex.log.ILogger", n : "", o : false}], m : [], pc : [], pd : []};
todomvc_control_TodoController.__INJECTION_DATA = { c : { a : []}, p : [{ p : "model", t : "todomvc.model.ITodoModel", n : "", o : false},{ p : "filterModel", t : "todomvc.model.IFilterModel", n : "", o : false},{ p : "logger", t : "hex.log.ILogger", n : "", o : false}], m : [], pc : [], pd : []};
todomvc_driver_TodoDriver.__meta__ = { fields : { init : { Debug : null}, changeFilter : { Debug : null}}};
todomvc_driver_TodoDriver.__INJECTION_DATA = { c : { a : []}, p : [{ p : "view", t : "todomvc.view.ITodoView", n : "", o : false},{ p : "controller", t : "todomvc.control.ITodoController", n : "", o : false},{ p : "logger", t : "hex.log.ILogger", n : "", o : false}], m : [], pc : [{ m : "init", a : [], o : 0}], pd : []};
todomvc_model_FilterModel.__meta__ = { fields : { output : { Trigger : null}}};
todomvc_model_FilterModel.__INJECTION_DATA = { c : { a : []}, p : [{ p : "logger", t : "hex.log.ILogger", n : "", o : false}], m : [], pc : [], pd : []};
todomvc_model_TodoModel.__meta__ = { fields : { output : { Trigger : null}}};
todomvc_model_TodoModel.__INJECTION_DATA = { c : { a : []}, p : [{ p : "logger", t : "hex.log.ILogger", n : "", o : false}], m : [], pc : [], pd : []};
todomvc_module_TodoModule.__INJECTION_DATA = { c : { a : []}, p : [{ p : "logger", t : "hex.log.ILogger", n : "", o : false}], m : [], pc : [], pd : []};
todomvc_module__$TodoModule_TodoModuleConfig.__INJECTION_DATA = { c : { a : []}, p : [{ p : "injector", t : "hex.di.IDependencyInjector", n : "", o : false}], m : [], pc : [], pd : []};
TodoMVC.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=MainTodoMVC.js.map